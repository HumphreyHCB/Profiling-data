begin_compilation
  name " HotSpotCompilation-7999[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  method "HotSpotCompilation-7999[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  date 1724269758573
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a825 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v862 ?155 ?655 v290 v274 ?31 v849 ?213 ?656 ?104 ?659 v295 v850 ?111 ?654 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
a263 v402 v448 v450 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a825  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i178 i203 j417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v20 v600 v419 i599 v763 v806 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 60]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 v759 v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i426 v405 v863 v446 v872 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?155 v295 ?31 i32 ?213 v290 i215 ?659 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?155 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 574
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 i4 
=== Succesors ===
=== Usages ===
?656 ?104 ?654 ?111 ?115 ?655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8680541035860417
stamp: void
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a825 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a447 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a825 
y: a447 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a825 y: a447  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.919390461591214
stamp: void
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v96 #falseSuccessor: v92  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v93 v95 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v93 v95 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid a841 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: aload_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 a841 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1 a841  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-103947|0xfffffffffffe69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?104 
guard: - 
address: v872 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
v716 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?104 guard: - address: v872 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v826 
=== Succesors ===
=== Usages ===
v132 v864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}]
keySuccessors: [I@9467bdb
keys: [HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>]
profileData: PROFILED keyProbabilities: [0.36497081587777636, 0.0142997155556751, 0.0027504690305357373, 0.0010849903504112001, 0.0010849903504112001, 0.6158090188351903]
stamp: void
=== Inputs ===
value: v716 
=== Succesors ===
successors: v121 v126 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v716 #successors: v121 v126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
j412 j417 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j412 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64 [0 - 3] bits:0...0xx
=== Inputs ===
x: j430 
y: j427 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j430 y: j427  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 66]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j412 
y: j428 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j412 y: j428  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:75) [bci: 72]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
j430 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 75]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 82]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64 [0 - 72057594037927935] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j430 
y: i177 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j430 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 88]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j417 
=== Succesors ===
=== Usages ===
v419 i110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 102]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i15 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i418 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 113]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v424 #falseSuccessor: v420  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:79) [bci: 116]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v421 v423 
=== Succesors ===
next: i426 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v421 v423 #next: i426  <|@  <|@
tid ?656 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
d <@d|@=== Debug Properties ===
bci: 48
descriptor: HotSpotForeignCallDescriptor{identity_hashcode(Object)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[MarkWord], transition=SAFEPOINT}
descriptorName: identity_hashcode
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 123]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?656 
arguments: a2 
=== Succesors ===
next: v463 
=== Usages ===
i110 
=== Predecessor ===
v422 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?656 arguments: a2 #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v716 
index: - 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v716 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
v865 v446 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v442 
index: - 
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
=== Succesors ===
next: i123 
=== Usages ===
v446 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - #next: i123  <|@  <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j445 
metaspaceMethod: v442 
arguments: a2 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j445 metaspaceMethod: v442 arguments: a2  <|@  <|@
tid ?655 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
bci: 48
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v446 
stateDuring: ?655 
=== Succesors ===
next: v156 
=== Usages ===
i110 
=== Predecessor ===
j445 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v446 stateDuring: ?655 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a825 
y: a449 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a825 y: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v534 #falseSuccessor: v535  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 574
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3f5cb787]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashIndex(Object)>, 27]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i102 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i102  <|@  <|@
f <@~|@floating>@ <|@
tid a263 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a825  <|@  <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a263 a2 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a263 a2  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v405 
stateDuring: ?654 
=== Succesors ===
next: v107 
=== Usages ===
i110 
=== Predecessor ===
v535 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v405 stateDuring: ?654 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i102 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i102 i418 i123 i426 
=== Succesors ===
=== Usages ===
?111 i113 i114 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v108 values: i102 i418 i123 i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v109 v156 v463 
=== Succesors ===
next: a827 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v109 v156 v463 #next: a827  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a827 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: i828 
=== Usages ===
a267 v851 v888 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: i828  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 415
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 - i110 
=== Succesors ===
=== Usages ===
v889 i828 i830 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1 - i110  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i828 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: a829 
=== Usages ===
v139 v146 v297 
=== Predecessor ===
a827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v851 lastLocationAccess: - #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: i830 
=== Usages ===
v861 v855 v856 v857 v858 v859 v860 
=== Predecessor ===
i828 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-124683|0xfffffffffffe18f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v332 v341 v319 i153 i150 
=== Predecessor ===
a829 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v856 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072]
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i145 
=== Succesors ===
=== Usages ===
v648 v540 v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 512
stableDimension: 0
stamp: i32 [512]
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i138 
=== Succesors ===
=== Usages ===
v142 v162 v190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i150 i170 i174 i215 i216 i613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9276714352646118
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i830 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v141 #falseSuccessor: v140  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i830 
y: i12 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i830 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v151 
values: i830 i150 
=== Succesors ===
=== Usages ===
?115 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: i830 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v154 
=== Succesors ===
next: v162 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v154 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i110 
y: i112 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i110 y: i112  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
=== Inputs ===
x: i110 
y: i113 
=== Succesors ===
=== Usages ===
?115 i117 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i110 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i153 
y: i13 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i153 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
=== Inputs ===
x: i114 
y: i116 
=== Succesors ===
=== Usages ===
j453 ?31 i170 v319 j456 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i114 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i117 
y: i12 
=== Succesors ===
=== Usages ===
j458 i174 j454 v332 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i117 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i170 
y: i12 
=== Succesors ===
=== Usages ===
j460 j455 v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i170 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i830 
=== Succesors ===
=== Usages ===
v528 v512 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i174 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i830 
=== Succesors ===
=== Usages ===
v524 v508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i830 
=== Succesors ===
=== Usages ===
v520 v504 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i117 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 j672 j672 j672 j672 j698 v807 j698 j698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:322) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9265104511094792
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v501 #falseSuccessor: v503  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i831 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i831  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j456 
index: a829 
=== Succesors ===
=== Usages ===
i831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
i457 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i831 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i831  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
i831 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -90907
stableDimension: 0
stamp: i32 [-90907]
stampKind: i32
value: int[-90907|0xfffffffffffe9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v505 #falseSuccessor: v507  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v509 #falseSuccessor: v511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v539 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v538 #falseSuccessor: v539  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i832 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j460 
index: a829 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: i833 
=== Usages ===
i461 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j458 
index: a829 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
i459 
=== Predecessor ===
i832 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i832 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i832  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [0 - 65280] bits:0...0xxxxxxxx00000000
=== Inputs ===
x: i461 
y: i177 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i461 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i833 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i833  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i178 
y: i459 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i178 y: i459  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
i833 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v181 
values: i457 i179 
=== Succesors ===
=== Usages ===
v16 i14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v181 values: i457 i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v184 
=== Succesors ===
next: v19 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v184 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i15 
=== Succesors ===
=== Usages ===
v19 v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i183 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
profileData: PROFILED designatedSuccessorProbability: 0.9280325691536253
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i15 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9197772426249248
stamp: void
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v25 #falseSuccessor: v21  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 14]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i183 
y: i13 
=== Succesors ===
=== Usages ===
?31 ?213 v563 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i183 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i215 
y: i12 
=== Succesors ===
=== Usages ===
j451 v297 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i215 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i828 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i216 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v513 #falseSuccessor: v515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
v312 
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 37]
stamp: i32
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i203 i192 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v339 v327 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:334) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.9079605807218463
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v189 #falseSuccessor: v188  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v517 #falseSuccessor: v519  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
v327 
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j453 
index: a829 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j453 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v517 
address: v855 
lastLocationAccess: - 
value: i192 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v517 address: v855 lastLocationAccess: - value: i192 stateAfter: - #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947]
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v521 #falseSuccessor: v523  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
v339 
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v525 #falseSuccessor: v527  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
v349 
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v542 #falseSuccessor: v543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:337) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j454 
index: a829 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j454 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v521 
address: v857 
lastLocationAccess: - 
value: i192 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v521 address: v857 lastLocationAccess: - value: i192 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j455 
index: a829 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j455 index: a829  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i32 
y: i177 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v858 
lastLocationAccess: - 
value: i204 
stateAfter: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v858 lastLocationAccess: - value: i204 stateAfter: - #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a827 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a827  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i216 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a267 
index: j451 
=== Succesors ===
=== Usages ===
a834 v312 v711 v713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a267 index: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: v722 
=== Usages ===
v873 v566 v717 v853 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v720 #falseSuccessor: v721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
v728 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v835 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v723 
values: v724 v728 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v723 values: v724 v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v718 v719 
=== Succesors ===
next: v41 
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v718 v719 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 v869 v591 v871 a741 a787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v729 
y: v545 
=== Succesors ===
=== Usages ===
v75 v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v729 y: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
a836 a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:582) [bci: 51]
profileData: PROFILED designatedSuccessorProbability: 0.9334230601943765
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v40 #falseSuccessor: v39  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:591) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:591) [bci: 140]
profileData: PROFILED designatedSuccessorProbability: 0.017406949851320852
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:592) [bci: 143]
stamp: void
=== Inputs ===
=== Succesors ===
next: a836 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 154]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
a289 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a289 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 154]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a836  <|@  <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>
=== Inputs ===
arguments: a1 i3 a289 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 a289  <|@  <|@
tid ?658 <|@
d <@d|@=== Debug Properties ===
bci: 157
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 593
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
bci: 157
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.setRawValue
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v290 
stateDuring: ?658 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
a836 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v290 stateDuring: ?658 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i14 
=== Succesors ===
=== Usages ===
?643 ?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i14  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 111
bytecode: return
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 347
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?213 
=== Succesors ===
=== Usages ===
v846 v848 a741 a787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?213  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j779 j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.15602381581763025
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v45 #falseSuccessor: v44  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:585) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j730 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j730 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j756 
=== Usages ===
v874 v875 
=== Predecessor ===
v774 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j756  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j730 
index: - 
=== Succesors ===
=== Usages ===
j756 v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j756 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: j757 
=== Usages ===
j733 v876 v877 a740 v878 v879 v880 
=== Predecessor ===
j730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j730 
index: - 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
lastLocationAccess: - 
=== Succesors ===
next: v737 
=== Usages ===
v734 
=== Predecessor ===
j756 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 lastLocationAccess: - #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
=== Inputs ===
x: j756 
y: j264 
=== Succesors ===
=== Usages ===
v734 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j756 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j757 
y: j733 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j757 y: j733  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v734 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
j757 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v734 #trueSuccessor: v736 #falseSuccessor: v735  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?211 
arguments: v545 
=== Succesors ===
next: v846 
=== Usages ===
v846 a754 
=== Predecessor ===
v736 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?211 arguments: v545 #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-197233|0xfffffffffffcfd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?211 
object: a741 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?211 object: a741 #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
value: j733 
stateAfter: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - value: j733 stateAfter: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
address: v878 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v878 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
value: j428 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - value: j428 stateAfter: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
lastLocationAccess: - 
value: v824 
stateAfter: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v880 lastLocationAccess: - value: v824 stateAfter: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v877 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v877 lastLocationAccess: - value: i15 stateAfter: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
value: j411 
stateAfter: - 
=== Succesors ===
next: a740 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - value: j411 stateAfter: - #next: a740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j756 
=== Succesors ===
next: v743 
=== Usages ===
a754 
=== Predecessor ===
v764 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j756 #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
a740 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a754 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v744 
values: a740 a741 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v744 values: a740 a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v743 v745 
=== Succesors ===
next: v560 
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v743 v745 #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
object: a754 
=== Succesors ===
next: a837 
=== Usages ===
v294 ?255 v295 
=== Predecessor ===
v560 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a754 #next: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 99]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a293 
=== Predecessor ===
a559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 99]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)>
=== Inputs ===
arguments: a559 a293 i14 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a559 a293 i14  <|@  <|@
tid a243 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<org.graalvm.collections.EconomicMapImpl$CollisionLink.next int:12>, HotSpotResolvedJavaFieldImpl<org.graalvm.collections.EconomicMapImpl$CollisionLink.value Object:16>]
hasIdentity: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
objectId: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?255 ?659 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a243 
materializedValue: a559 
=== Succesors ===
=== Usages ===
?659 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a243 materializedValue: a559  <|@  <|@
tid ?659 <|@
d <@d|@=== Debug Properties ===
bci: 104
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 586
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 a243 
virtualObjectMappings: ?255 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 a243 virtualObjectMappings: ?255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
bci: 104
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl$CollisionLink.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v294 
stateDuring: ?659 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v294 stateDuring: ?659 #next: v56  <|@  <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>
=== Inputs ===
arguments: a1 i3 a559 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 a559  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 107
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.setRawValue
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v295 
stateDuring: ?660 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v295 stateDuring: ?660 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j799 
=== Usages ===
v881 v882 
=== Predecessor ===
v817 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j799  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j799 v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j799 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
=== Succesors ===
next: j800 
=== Usages ===
j779 v883 v884 a786 v885 v886 v887 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - #next: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
lastLocationAccess: - 
=== Succesors ===
next: v783 
=== Usages ===
v780 
=== Predecessor ===
j799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 lastLocationAccess: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
=== Inputs ===
x: j799 
y: j264 
=== Succesors ===
=== Usages ===
v780 v801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j799 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j779 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j800 y: j779  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
j800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v782 #falseSuccessor: v781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?211 
arguments: v545 
=== Succesors ===
next: v848 
=== Usages ===
v848 a797 
=== Predecessor ===
v782 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?211 arguments: v545 #next: v848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-208241|0xfffffffffffcd28f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?211 
object: a787 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
a787 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?211 object: a787 #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
value: j779 
stateAfter: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - value: j779 stateAfter: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
address: v885 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v885 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v883 
lastLocationAccess: - 
value: j428 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v883 lastLocationAccess: - value: j428 stateAfter: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
lastLocationAccess: - 
value: v824 
stateAfter: - 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 lastLocationAccess: - value: v824 stateAfter: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 lastLocationAccess: - value: i15 stateAfter: - #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
value: j411 
stateAfter: - 
=== Succesors ===
next: a786 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - value: j411 stateAfter: - #next: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j799 
=== Succesors ===
next: v789 
=== Usages ===
a797 
=== Predecessor ===
v807 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j799 #next: v789  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
a786 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v790 
values: a786 a787 
=== Succesors ===
=== Usages ===
v867 a567 v866 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v790 values: a786 a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v789 v791 
=== Succesors ===
next: v566 
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v789 v791 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
value: a834 
stateAfter: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - value: a834 stateAfter: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i14 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i14 stateAfter: - #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a567 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
object: a797 
=== Succesors ===
next: v626 
=== Usages ===
a311 v713 
=== Predecessor ===
v568 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a797 #next: v626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
a567 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
v821 
=== Predecessor ===
v626 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v838 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v821 
index: - 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v821 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: i620 
=== Usages ===
v624 v609 v868 v584 v591 
=== Predecessor ===
v838 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
i620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i620 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v840 
=== Usages ===
v581 j582 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i620 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v545 
index: j582 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v545 index: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
v584 
=== Predecessor ===
i620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v840 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v586 #falseSuccessor: v585  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i620 
y: i580 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i620 y: i580  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v589 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v589 #falseSuccessor: v588  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v545 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
rawvalue: 140154100615680
stableDimension: 0
stamp: i64 [140154100615680]
stampKind: i64
value: long[140154100615680|0x7f782b618a00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v598 
values: i15 i613 
=== Succesors ===
=== Usages ===
v600 j604 i613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v598 values: i15 i613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v597 
=== Succesors ===
next: v603 
=== Usages ===
i599 v601 v610 v614 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v597 #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i15 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i599 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v602 #falseSuccessor: v601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: j623 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j623  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i599 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i599  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j651 
index: j604 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j651 index: j604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
lastLocationAccess: - 
=== Succesors ===
next: v612 
=== Usages ===
v608 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 lastLocationAccess: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*
=== Inputs ===
input: j623 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j623  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v608 
y: v839 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v608 y: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
j623 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v610 #falseSuccessor: v611  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
=== Inputs ===
x: i599 
y: i12 
=== Succesors ===
=== Usages ===
i599 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i599 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
loopBegin: v598 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v598  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v598 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v598 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v545 
index: - 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v545 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
value: v839 
stateAfter: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - value: v839 stateAfter: - #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v598 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v598 #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v636 v637 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v636 v637 #next: v711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
precise: true
stamp: void
=== Inputs ===
address: v852 
value: - 
stateBefore: - 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v852 value: - stateBefore: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid a311 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: Compress
stamp: n!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
value: a567 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v513 
address: v852 
lastLocationAccess: - 
value: a311 
stateAfter: - 
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v513 address: v852 lastLocationAccess: - value: a311 stateAfter: - #next: v713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
precise: true
stamp: void
=== Inputs ===
address: v852 
value: a567 
object: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v852 value: a567 object: - #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v71 v72 v82 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 v72 v82 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v638 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v638 #next: v530  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 111
bytecode: return
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
sourceFile: EconomicMapImpl.java
sourceLine: 347
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?213 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?213  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 313
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?643  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -138515
stableDimension: 0
stamp: i32 [-138515]
stampKind: i32
value: int[-138515|0xfffffffffffde2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -87579
stableDimension: 0
stamp: i32 [-87579]
stampKind: i32
value: int[-87579|0xfffffffffffea9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275]
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -70939
stableDimension: 0
stamp: i32 [-70939]
stampKind: i32
value: int[-70939|0xfffffffffffeeae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-138515 - -70939] bits:1...1xx1x1xxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v668 
values: i670 i675 i677 i679 i681 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v668 values: i670 i675 i677 i679 i681  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i64 [0 - 3220] bits:0...0xx00x00x0x00
valueDescription: i64
=== Inputs ===
merge: v668 
values: j411 j411 j411 j411 j682 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v668 values: j411 j411 j411 j411 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v674 v676 v678 v680 
=== Succesors ===
next: v673 
=== Usages ===
i671 j672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v674 v676 v678 v680 #next: v673  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i117 i14 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i117 i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i671 
speculation: j672 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i671 speculation: j672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?657 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 577
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 28
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v274 
stateDuring: ?657 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v274 stateDuring: ?657 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -137491
stableDimension: 0
stamp: i32 [-137491]
stampKind: i32
value: int[-137491|0xfffffffffffde6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -96795
stableDimension: 0
stamp: i32 [-96795]
stampKind: i32
value: int[-96795|0xfffffffffffe85e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -94235
stableDimension: 0
stamp: i32 [-94235]
stampKind: i32
value: int[-94235|0xfffffffffffe8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i697 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-137491 - -90907] bits:1...1xx1xxxx1xx1110x101
valueDescription: i32
=== Inputs ===
merge: v694 
values: i696 i701 i703 i705 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v694 values: i696 i701 i703 i705  <|@  <|@
f <@~|@floating>@ <|@
tid j698 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v694 
values: j411 j411 j411 j706 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v694 values: j411 j411 j411 j706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v695 v700 v702 v704 
=== Succesors ===
next: v699 
=== Usages ===
i697 j698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v695 v700 v702 v704 #next: v699  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
sourceFile: EconomicMapImpl.java
sourceLine: 416
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: i114 i153 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: i114 i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?115 
actionAndReason: i697 
speculation: j698 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?115 actionAndReason: i697 speculation: j698  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 645
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x49ee584f]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashTableSize()>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a825 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a825  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v862 ?155 ?655 v290 v274 ?31 v849 ?213 ?656 ?104 ?659 v295 v850 ?111 ?654 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v849 <|@
result [v0|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a825 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a825 <|@
result v4|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n org.graalvm.collections.Equivalence
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.strategy
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n org.graalvm.collections.Equivalence
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v849 
lastLocationAccess: - 
=== Succesors ===
next: v89 
=== Usages ===
a263 v402 v448 v450 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v849 lastLocationAccess: - #next: v89  <|@  <|@
f <@~|@floating>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v89 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a825  <|@  <|@
f <@~|@floating>@ <|@
tid i177 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 58]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: 8
stableDimension: 0
stamp: i32 [8]
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i178 i203 j417 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i15 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v16 v20 v600 v419 i599 v763 v806 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j428 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 60]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v413 v759 v802 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 i426 v405 v863 v446 v872 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?155 v295 ?31 i32 ?213 v290 i215 ?659 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i4 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?155 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?155 <|@
d <@d|@=== Debug Properties ===
bci: 2
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 574
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 i4 
=== Succesors ===
=== Usages ===
?656 ?104 ?654 ?111 ?115 ?655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.8680541035860417
stamp: void
=== Inputs ===
condition: v402 
=== Succesors ===
trueSuccessor: v88 
falseSuccessor: v87 
=== Usages ===
=== Predecessor ===
a825 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v402 #trueSuccessor: v88 #falseSuccessor: v87  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v93 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v93  <|@  <|@
f <@*|@fixed>@ <|@
tid v93 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v88 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 7]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v97 
=== Usages ===
=== Predecessor ===
v89 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v97  <|@  <|@
f <@~|@floating>@ <|@
tid a447 <|@
result NarrowOop[Equivalence$1@811395695] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: Equivalence$1@811395695
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$1
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$1@811395695]
=== Inputs ===
=== Succesors ===
=== Usages ===
v448 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v448 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a825 
y: a447 
=== Succesors ===
=== Usages ===
v97 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a825 y: a447  <|@  <|@
f <@*|@fixed>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 14]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.919390461591214
stamp: void
=== Inputs ===
condition: v448 
=== Succesors ===
trueSuccessor: v96 
falseSuccessor: v92 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v448 #trueSuccessor: v96 #falseSuccessor: v92  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v96 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v94 
=== Predecessor ===
v96 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v93 v95 
=== Succesors ===
next: v826 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v93 v95 #next: v826  <|@  <|@
f <@~|@floating>@ <|@
tid a841 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a java.lang.Object NULL
stampKind: a java.lang.Object
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?104 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 47
bytecode: aload_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 a841 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1 a841  <|@  <|@
f <@~|@floating>@ <|@
tid v872 <|@
result [v1|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v826 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v826 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: int[-103947|0xfffffffffffe69f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?104 
guard: - 
address: v872 
lastLocationAccess: - 
=== Succesors ===
next: v132 
=== Usages ===
v716 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?104 guard: - address: v872 lastLocationAccess: - #next: v132  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v826 
=== Succesors ===
=== Usages ===
v132 v864 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v826  <|@  <|@
f <@*|@fixed>@ <|@
tid v132 <|@
d <@d|@=== Debug Properties ===
hubs: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}]
keySuccessors: [I@9467bdb
keys: [HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>, HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>]
profileData: PROFILED keyProbabilities: [0.36497081587777636, 0.0142997155556751, 0.0027504690305357373, 0.0010849903504112001, 0.0010849903504112001, 0.6158090188351903]
stamp: void
=== Inputs ===
value: v716 
=== Succesors ===
successors: v121 v126 
=== Usages ===
=== Predecessor ===
v826 >@ <|@
instruction <@TypeSwitch|@jdk.graal.compiler.nodes.java.TypeSwitchNode>@ value: v716 #successors: v121 v126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v121 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: j430 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j430  <|@  <|@
f <@~|@floating>@ <|@
tid v863 <|@
result [v1|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
j430 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j430 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 30]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v863 
lastLocationAccess: - 
=== Succesors ===
next: v416 
=== Usages ===
j412 j417 
=== Predecessor ===
v121 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v863 lastLocationAccess: - #next: v416  <|@  <|@
f <@~|@floating>@ <|@
tid j427 <|@
result long[3|0x3] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 3
stableDimension: 0
stamp: i64 [3]
stampKind: i64
value: long[3|0x3]
=== Inputs ===
=== Succesors ===
=== Usages ===
j412 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j412 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:74) [bci: 18]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64 [0 - 3] bits:0...0xx
=== Inputs ===
x: j430 
y: j427 
=== Succesors ===
=== Usages ===
v413 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: j430 y: j427  <|@  <|@
f <@~|@floating>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:76) [bci: 66]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j412 
y: j428 
=== Succesors ===
=== Usages ===
v416 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: j412 y: j428  <|@  <|@
f <@*|@fixed>@ <|@
tid v416 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:75) [bci: 72]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.99
stamp: void
=== Inputs ===
condition: v413 
=== Succesors ===
trueSuccessor: v414 
falseSuccessor: v415 
=== Usages ===
=== Predecessor ===
j430 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v413 #trueSuccessor: v414 #falseSuccessor: v415  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 75]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v425 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v425  <|@  <|@
f <@~|@floating>@ <|@
tid j417 <|@
result v10|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 82]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64 [0 - 72057594037927935] bits:00000000xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: j430 
y: i177 
=== Succesors ===
=== Usages ===
i418 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j430 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i418 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 64
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:77) [bci: 88]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
resultBits: 32
stamp: i32
=== Inputs ===
value: j417 
=== Succesors ===
=== Usages ===
v419 i110 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: j417  <|@  <|@
f <@~|@floating>@ <|@
tid v419 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 102]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i418 
y: i15 
=== Succesors ===
=== Usages ===
v425 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i418 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v425 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:78) [bci: 113]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v419 
=== Succesors ===
trueSuccessor: v424 
falseSuccessor: v420 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v419 #trueSuccessor: v424 #falseSuccessor: v420  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v423 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v423  <|@  <|@
f <@*|@fixed>@ <|@
tid v423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v424 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v420 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:79) [bci: 116]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v109 
=== Usages ===
=== Predecessor ===
v425 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v109  <|@  <|@
f <@*|@fixed>@ <|@
tid v109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
v420 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v415 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v421 
=== Usages ===
=== Predecessor ===
v416 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v421  <|@  <|@
f <@*|@fixed>@ <|@
tid v421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v422 
=== Predecessor ===
v415 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v422 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 119]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v421 v423 
=== Succesors ===
next: i426 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v421 v423 #next: i426  <|@  <|@
tid ?656 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i426 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i426 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
descriptor: HotSpotForeignCallDescriptor{identity_hashcode(Object)int, callSideEffect=HAS_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[MarkWord], transition=SAFEPOINT}
descriptorName: identity_hashcode
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:82) [bci: 123]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?656 
arguments: a2 
=== Succesors ===
next: v463 
=== Usages ===
i110 
=== Predecessor ===
v422 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?656 arguments: a2 #next: v463  <|@  <|@
f <@*|@fixed>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i426 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
=== Succesors ===
next: v442 
=== Usages ===
=== Predecessor ===
v132 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v442  <|@  <|@
f <@~|@floating>@ <|@
tid v864 <|@
result [v6|QWORD + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
stamp: void*
stride: S1
=== Inputs ===
base: v716 
index: - 
=== Succesors ===
=== Usages ===
v442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v716 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v442 <|@
result v13|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Method*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: Method*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v864 
lastLocationAccess: - 
=== Succesors ===
next: j445 
=== Usages ===
v865 v446 
=== Predecessor ===
v126 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v864 lastLocationAccess: - #next: j445  <|@  <|@
f <@~|@floating>@ <|@
tid v865 <|@
result [v13|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S1
=== Inputs ===
base: v442 
index: - 
=== Succesors ===
=== Usages ===
j445 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v442 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j445 <|@
result v14|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ANY_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v865 
lastLocationAccess: - 
=== Succesors ===
next: i123 
=== Usages ===
v446 
=== Predecessor ===
v442 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v865 lastLocationAccess: - #next: i123  <|@  <|@
tid v446 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Ljava/lang/Object;, resolved>]
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
computedAddress: j445 
metaspaceMethod: v442 
arguments: a2 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j445 metaspaceMethod: v442 arguments: a2  <|@  <|@
tid ?655 <|@
d <@d|@=== Debug Properties ===
bci: 48
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 413
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i123 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i123 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 48
identity: ANY_LOCATION
inlineControl: Never
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
polymorphic: true
stamp: i32
targetMethod: Indirect#Object.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v446 
stateDuring: ?655 
=== Succesors ===
next: v156 
=== Usages ===
i110 
=== Predecessor ===
j445 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v446 stateDuring: ?655 #next: v156  <|@  <|@
f <@*|@fixed>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i123 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v92 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v536 
=== Usages ===
=== Predecessor ===
v97 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v536  <|@  <|@
f <@~|@floating>@ <|@
tid a449 <|@
result NarrowOop[Equivalence$3@441713316] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: Equivalence$3@441713316
stableDimension: 0
stamp: n!# org.graalvm.collections.Equivalence$3
stampKind: n java.lang.Object
value: NarrowOop[Equivalence$3@441713316]
=== Inputs ===
=== Succesors ===
=== Usages ===
v450 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v450 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a825 
y: a449 
=== Succesors ===
=== Usages ===
v536 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: a825 y: a449  <|@  <|@
f <@*|@fixed>@ <|@
tid v536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 0.0
stamp: void
=== Inputs ===
condition: v450 
=== Succesors ===
trueSuccessor: v534 
falseSuccessor: v535 
=== Usages ===
=== Predecessor ===
v92 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v450 #trueSuccessor: v534 #falseSuccessor: v535  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v534 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v533 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v533  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 574
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 i4 
=== Succesors ===
=== Usages ===
v533 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 i4  <|@  <|@
f <@*|@fixed>@ <|@
tid v533 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 0
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:407) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000014[index: 0, len: 20, hash: 0x3f5cb787]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashIndex(Object)>, 27]}
stamp: void
=== Inputs ===
stateBefore: ?5 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v534 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?5  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 35]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: i102 
=== Usages ===
=== Predecessor ===
v536 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i102  <|@  <|@
f <@~|@floating>@ <|@
tid a263 <|@
result v16|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:406) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: Uncompress
stamp: a org.graalvm.collections.Equivalence
=== Inputs ===
value: a825 
=== Succesors ===
=== Usages ===
v405 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a825  <|@  <|@
tid v405 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
referencedType: [null]
returnStamp: i32
signature: [HotSpotType<Lorg/graalvm/collections/Equivalence;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<Equivalence.hashCode(Object)>
=== Inputs ===
arguments: a263 a2 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a263 a2  <|@  <|@
tid ?654 <|@
d <@d|@=== Debug Properties ===
bci: 40
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 410
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i102 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 40
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
polymorphic: false
stamp: i32
targetMethod: Direct#Equivalence.hashCode
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v405 
stateDuring: ?654 
=== Succesors ===
next: v107 
=== Usages ===
i110 
=== Predecessor ===
v535 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v405 stateDuring: ?654 #next: v107  <|@  <|@
f <@*|@fixed>@ <|@
tid v107 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v108 
=== Predecessor ===
i102 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i110 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v108 
values: i102 i418 i123 i426 
=== Succesors ===
=== Usages ===
?111 i113 i114 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v108 values: i102 i418 i123 i426  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v108 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v107 v109 v156 v463 
=== Succesors ===
next: a827 
=== Usages ===
i110 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v107 v109 v156 v463 #next: a827  <|@  <|@
f <@~|@floating>@ <|@
tid v850 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a827 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a827 <|@
result v19|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.entries
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n java.lang.Object[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v850 
lastLocationAccess: - 
=== Succesors ===
next: i828 
=== Usages ===
a267 v851 v888 
=== Predecessor ===
v108 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v850 lastLocationAccess: - #next: i828  <|@  <|@
tid ?111 <|@
d <@d|@=== Debug Properties ===
bci: 52
bytecode: iload_2
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 415
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: a1 - i110 
=== Succesors ===
=== Usages ===
v889 i828 i830 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: a1 - i110  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
result [v19|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
i828 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i828 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-68875|0xfffffffffffef2f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v851 
lastLocationAccess: - 
=== Succesors ===
next: a829 
=== Usages ===
v139 v146 v297 
=== Predecessor ===
a827 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v851 lastLocationAccess: - #next: a829  <|@  <|@
f <@~|@floating>@ <|@
tid v862 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a829 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a829 <|@
result v21|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# byte[]
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl.hashArray
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 12]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: n# byte[]
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v862 
lastLocationAccess: - 
=== Succesors ===
next: i830 
=== Usages ===
v861 v855 v856 v857 v858 v859 v860 
=== Predecessor ===
i828 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v862 lastLocationAccess: - #next: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v856 <|@
result [v21|DWORD[_] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a829 
=== Succesors ===
=== Usages ===
i830 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i830 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
barrierType: NONE
deoptReasonAndAction: int[-124683|0xfffffffffffe18f5]
deoptSpeculation: long[0|0x0]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: [].length:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?111 
guard: - 
address: v856 
lastLocationAccess: - 
=== Succesors ===
next: v142 
=== Usages ===
v332 v341 v319 i153 i150 
=== Predecessor ===
a829 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?111 guard: - address: v856 lastLocationAccess: - #next: v142  <|@  <|@
f <@~|@floating>@ <|@
tid i145 <|@
result int[131072|0x20000] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 131072
stableDimension: 0
stamp: i32 [131072]
stampKind: i32
value: int[131072|0x20000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v146 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v146 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i145 
=== Succesors ===
=== Usages ===
v648 v540 v544 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i145  <|@  <|@
f <@~|@floating>@ <|@
tid i138 <|@
result int[512|0x200] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 5]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 512
stableDimension: 0
stamp: i32 [512]
stampKind: i32
value: int[512|0x200]
=== Inputs ===
=== Succesors ===
=== Usages ===
v139 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i828 
y: i138 
=== Succesors ===
=== Usages ===
v142 v162 v190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i828 y: i138  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 13]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i32 i150 i170 i174 i215 i216 i613 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: PROFILED designatedSuccessorProbability: 0.9276714352646118
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v141 
falseSuccessor: v140 
=== Usages ===
=== Predecessor ===
i830 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v141 #falseSuccessor: v140  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v141 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:533) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v152 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v152  <|@  <|@
f <@*|@fixed>@ <|@
tid v152 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v141 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v140 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v648 
=== Usages ===
=== Predecessor ===
v142 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v648  <|@  <|@
f <@*|@fixed>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v646 
falseSuccessor: v647 
=== Usages ===
=== Predecessor ===
v140 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v646 #falseSuccessor: v647  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v646 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 27]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@~|@floating>@ <|@
tid i150 <|@
result v23|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:535) [bci: 33]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 1073741823] bits:00xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
x: i830 
y: i12 
=== Succesors ===
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i830 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
v646 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i153 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] bits:0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v151 
values: i830 i150 
=== Succesors ===
=== Usages ===
?115 i116 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v151 values: i830 i150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v152 v154 
=== Succesors ===
next: v162 
=== Usages ===
i153 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v152 v154 #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid i112 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 16
stableDimension: 0
stamp: i32 [16]
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i113 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result v25|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i110 
y: i112 
=== Succesors ===
=== Usages ===
i114 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@jdk.graal.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i110 y: i112  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
=== Inputs ===
x: i110 
y: i113 
=== Succesors ===
=== Usages ===
?115 i117 
=== Predecessor ===
- >@ <|@
instruction <@^|@jdk.graal.compiler.nodes.calc.XorNode>@ x: i110 y: i113  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 14]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1]
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i14 i116 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v27|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 65]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i153 
y: i13 
=== Succesors ===
=== Usages ===
i117 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i153 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i117 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 66]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: i32
=== Inputs ===
x: i114 
y: i116 
=== Succesors ===
=== Usages ===
j453 ?31 i170 v319 j456 
=== Predecessor ===
- >@ <|@
instruction <@&|@jdk.graal.compiler.nodes.calc.AndNode>@ x: i114 y: i116  <|@  <|@
f <@~|@floating>@ <|@
tid i170 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 34]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i117 
y: i12 
=== Succesors ===
=== Usages ===
j458 i174 j454 v332 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i117 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i174 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 52]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i170 
y: i12 
=== Succesors ===
=== Usages ===
j460 j455 v341 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i170 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i174 
y: i830 
=== Succesors ===
=== Usages ===
v528 v512 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i174 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i170 
y: i830 
=== Succesors ===
=== Usages ===
v524 v508 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i170 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i117 
y: i830 
=== Succesors ===
=== Usages ===
v520 v504 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i117 y: i830  <|@  <|@
f <@~|@floating>@ <|@
tid j411 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:757) [bci: 23]
at jdk.graal.compiler.hotspot.replacements.HotSpotHashCodeSnippets.computeIdentityHashCode(HotSpotHashCodeSnippets.java:55) [bci: 7]
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(IdentityHashCodeSnippets.java:48) [bci: 22] Substitution
at jdk.graal.compiler.replacements.IdentityHashCodeSnippets.identityHashCodeSnippet(Object) [bci: -1] Substitution
at java.lang.Object.hashCode() [bci: 0]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v764 j672 j672 j672 j672 j698 v807 j698 j698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:322) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: PROFILED designatedSuccessorProbability: 0.9265104511094792
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v161 
falseSuccessor: v160 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v161 #falseSuccessor: v160  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v501 
falseSuccessor: v503 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v501 #falseSuccessor: v503  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v501 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i831 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i831  <|@  <|@
f <@~|@floating>@ <|@
tid j456 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
v859 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v859 <|@
result [v28|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j456 
index: a829 
=== Succesors ===
=== Usages ===
i831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j456 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i831 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v859 
lastLocationAccess: - 
=== Succesors ===
next: v182 
=== Usages ===
i457 
=== Predecessor ===
v501 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v859 lastLocationAccess: - #next: v182  <|@  <|@
f <@~|@floating>@ <|@
tid i457 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 20]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i831 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i831  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
i831 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v695 
=== Usages ===
=== Predecessor ===
v504 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v695  <|@  <|@
f <@~|@floating>@ <|@
tid i696 <|@
result int[-90907|0xfffffffffffe9ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -90907
stableDimension: 0
stamp: i32 [-90907]
stampKind: i32
value: int[-90907|0xfffffffffffe9ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v503 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v505 
falseSuccessor: v507 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v505 #falseSuccessor: v507  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v512 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v512  <|@  <|@
f <@*|@fixed>@ <|@
tid v512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v509 
falseSuccessor: v511 
=== Usages ===
=== Predecessor ===
v505 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v509 #falseSuccessor: v511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v509 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v538 
falseSuccessor: v539 
=== Usages ===
=== Predecessor ===
v509 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v538 #falseSuccessor: v539  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:325) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: i832 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i832  <|@  <|@
f <@~|@floating>@ <|@
tid j460 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v861 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v861 <|@
result [v30|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j460 
index: a829 
=== Succesors ===
=== Usages ===
i832 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j460 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i832 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v861 
lastLocationAccess: - 
=== Succesors ===
next: i833 
=== Usages ===
i461 
=== Predecessor ===
v538 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v861 lastLocationAccess: - #next: i833  <|@  <|@
f <@~|@floating>@ <|@
tid j458 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v860 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v860 <|@
result [v29|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j458 
index: a829 
=== Succesors ===
=== Usages ===
i833 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j458 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i833 <|@
d <@d|@=== Debug Properties ===
accessStamp: i8
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i8
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v860 
lastLocationAccess: - 
=== Succesors ===
next: v184 
=== Usages ===
i459 
=== Predecessor ===
i832 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v860 lastLocationAccess: - #next: v184  <|@  <|@
f <@~|@floating>@ <|@
tid i461 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 57]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i832 
=== Succesors ===
=== Usages ===
i178 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i832  <|@  <|@
f <@~|@floating>@ <|@
tid i178 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 60]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [0 - 65280] bits:0...0xxxxxxxx00000000
=== Inputs ===
x: i461 
y: i177 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i461 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i459 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 8
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 45]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
resultBits: 32
stamp: i32 [0 - 255] bits:0...0xxxxxxxx
=== Inputs ===
value: i833 
=== Succesors ===
=== Usages ===
i179 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i833  <|@  <|@
f <@~|@floating>@ <|@
tid i179 <|@
result v35|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
=== Inputs ===
x: i178 
y: i459 
=== Succesors ===
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@||@jdk.graal.compiler.nodes.calc.OrNode>@ x: i178 y: i459  <|@  <|@
f <@*|@fixed>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v181 
=== Predecessor ===
i833 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i183 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 65535] bits:0...0xxxxxxxxxxxxxxxx
valueDescription: i32
=== Inputs ===
merge: v181 
values: i457 i179 
=== Succesors ===
=== Usages ===
v16 i14 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v181 values: i457 i179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
ends: v182 v184 
=== Succesors ===
next: v19 
=== Usages ===
i183 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v182 v184 #next: v19  <|@  <|@
f <@~|@floating>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i183 
y: i15 
=== Succesors ===
=== Usages ===
v19 v41 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i183 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v19 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 20]
profileData: PROFILED designatedSuccessorProbability: 0.9280325691536253
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v18 
falseSuccessor: v17 
=== Usages ===
=== Predecessor ===
v181 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v18 #falseSuccessor: v17  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v18 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v22 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v22  <|@  <|@
f <@*|@fixed>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v18 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v17 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
v19 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v26  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 24]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i4 
y: i15 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i4 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:576) [bci: 24]
profileData: PROFILED designatedSuccessorProbability: 0.9197772426249248
stamp: void
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v25 
falseSuccessor: v21 
=== Usages ===
=== Predecessor ===
v17 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v25 #falseSuccessor: v21  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v25 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v24 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v24  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v23 
=== Predecessor ===
v25 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v22 v24 
=== Succesors ===
next: v516 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v22 v24 #next: v516  <|@  <|@
f <@~|@floating>@ <|@
tid i14 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 14]
stamp: i32 [-1 - 65534]
=== Inputs ===
x: i183 
y: i13 
=== Succesors ===
=== Usages ===
?31 ?213 v563 v294 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i183 y: i13  <|@  <|@
f <@~|@floating>@ <|@
tid i215 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 6]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-2147483648 - 2147483646] bits:x...x0
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i216 
=== Predecessor ===
- >@ <|@
instruction <@<<|@jdk.graal.compiler.nodes.calc.LeftShiftNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i216 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-2147483647 - 2147483647] bits:x...x1
=== Inputs ===
x: i215 
y: i12 
=== Succesors ===
=== Usages ===
j451 v297 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i215 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i216 
y: i828 
=== Succesors ===
=== Usages ===
v516 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: i216 y: i828  <|@  <|@
f <@*|@fixed>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v297 
=== Succesors ===
trueSuccessor: v513 
falseSuccessor: v515 
=== Usages ===
=== Predecessor ===
v23 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v297 #trueSuccessor: v513 #falseSuccessor: v515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v513 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v190 
=== Usages ===
v312 
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v190  <|@  <|@
f <@~|@floating>@ <|@
tid i32 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 37]
stamp: i32
=== Inputs ===
x: i3 
y: i12 
=== Succesors ===
=== Usages ===
i203 i192 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i3 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i192 <|@
result v40|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 17]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i32 
=== Succesors ===
=== Usages ===
v339 v327 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i32  <|@  <|@
f <@*|@fixed>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:334) [bci: 8]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: PROFILED designatedSuccessorProbability: 0.9079605807218463
stamp: void
=== Inputs ===
condition: v139 
=== Succesors ===
trueSuccessor: v189 
falseSuccessor: v188 
=== Usages ===
=== Predecessor ===
v513 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v139 #trueSuccessor: v189 #falseSuccessor: v188  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 11]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v520 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v520  <|@  <|@
f <@*|@fixed>@ <|@
tid v520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v319 
=== Succesors ===
trueSuccessor: v517 
falseSuccessor: v519 
=== Usages ===
=== Predecessor ===
v189 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v319 #trueSuccessor: v517 #falseSuccessor: v519  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v517 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v327 
=== Usages ===
v327 
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v327  <|@  <|@
f <@~|@floating>@ <|@
tid j453 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
=== Inputs ===
value: i117 
=== Succesors ===
=== Usages ===
v855 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i117  <|@  <|@
f <@~|@floating>@ <|@
tid v855 <|@
result [v28|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j453 
index: a829 
=== Succesors ===
=== Usages ===
v327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j453 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v517 
address: v855 
lastLocationAccess: - 
value: i192 
stateAfter: - 
=== Succesors ===
next: v208 
=== Usages ===
=== Predecessor ===
v517 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v517 address: v855 lastLocationAccess: - value: i192 stateAfter: - #next: v208  <|@  <|@
f <@*|@fixed>@ <|@
tid v208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v327 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v519 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:335) [bci: 18]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v674 
=== Usages ===
=== Predecessor ===
v520 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v674  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result int[-81947|0xfffffffffffebfe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -81947
stableDimension: 0
stamp: i32 [-81947]
stampKind: i32
value: int[-81947|0xfffffffffffebfe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v674 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v519 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 22]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v524 
=== Usages ===
=== Predecessor ===
v190 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v524  <|@  <|@
f <@*|@fixed>@ <|@
tid v524 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v523 
=== Usages ===
=== Predecessor ===
v188 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v521 #falseSuccessor: v523  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v528 
=== Usages ===
v339 
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v528  <|@  <|@
f <@*|@fixed>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v341 
=== Succesors ===
trueSuccessor: v525 
falseSuccessor: v527 
=== Usages ===
=== Predecessor ===
v521 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v341 #trueSuccessor: v525 #falseSuccessor: v527  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v544 
=== Usages ===
v349 
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v544  <|@  <|@
f <@*|@fixed>@ <|@
tid v544 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v146 
=== Succesors ===
trueSuccessor: v542 
falseSuccessor: v543 
=== Usages ===
=== Predecessor ===
v525 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v146 #trueSuccessor: v542 #falseSuccessor: v543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v542 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:337) [bci: 32]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid j454 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [0 - 4294967294] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx0
=== Inputs ===
value: i170 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i170  <|@  <|@
f <@~|@floating>@ <|@
tid v857 <|@
result [v29|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j454 
index: a829 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j454 index: a829  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v521 
address: v857 
lastLocationAccess: - 
value: i192 
stateAfter: - 
=== Succesors ===
next: v349 
=== Usages ===
=== Predecessor ===
v542 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v521 address: v857 lastLocationAccess: - value: i192 stateAfter: - #next: v349  <|@  <|@
f <@~|@floating>@ <|@
tid j455 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i174 
=== Succesors ===
=== Usages ===
v858 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i174  <|@  <|@
f <@~|@floating>@ <|@
tid v858 <|@
result [v30|DWORD + v21|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: j455 
index: a829 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j455 index: a829  <|@  <|@
f <@~|@floating>@ <|@
tid i203 <|@
result v41|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 54]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: i32 [-8388608 - 8388607]
=== Inputs ===
x: i32 
y: i177 
=== Succesors ===
=== Usages ===
i204 
=== Predecessor ===
- >@ <|@
instruction <@>>|@jdk.graal.compiler.nodes.calc.RightShiftNode>@ x: i32 y: i177  <|@  <|@
f <@~|@floating>@ <|@
tid i204 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 55]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
resultBits: 8
stamp: i8
=== Inputs ===
value: i203 
=== Succesors ===
=== Usages ===
v349 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i203  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: byte
location: Array: byte
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v525 
address: v858 
lastLocationAccess: - 
value: i204 
stateAfter: - 
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v339 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v525 address: v858 lastLocationAccess: - value: i204 stateAfter: - #next: v210  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v209 
=== Predecessor ===
v349 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v209 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v208 v210 
=== Succesors ===
next: a834 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v208 v210 #next: a834  <|@  <|@
f <@~|@floating>@ <|@
tid a267 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
op: Uncompress
stamp: a java.lang.Object[]
=== Inputs ===
value: a827 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a827  <|@  <|@
f <@~|@floating>@ <|@
tid j451 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
resultBits: 64
stamp: i64 [1 - 4294967295] bits:0...0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx1
=== Inputs ===
value: i216 
=== Succesors ===
=== Usages ===
v852 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@jdk.graal.compiler.nodes.calc.ZeroExtendNode>@ value: i216  <|@  <|@
f <@~|@floating>@ <|@
tid v852 <|@
result [v42|QWORD[.] + v39|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S4
=== Inputs ===
base: a267 
index: j451 
=== Succesors ===
=== Usages ===
a834 v312 v711 v713 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a267 index: j451  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a834 <|@
result v43|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v852 
lastLocationAccess: - 
=== Succesors ===
next: v722 
=== Usages ===
v873 v566 v717 v853 
=== Predecessor ===
v209 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v852 lastLocationAccess: - #next: v722  <|@  <|@
f <@~|@floating>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a834 
=== Succesors ===
=== Usages ===
v722 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
profileData: INJECTED designatedSuccessorProbability: 0.09999999999999998
stamp: void
=== Inputs ===
condition: v717 
=== Succesors ===
trueSuccessor: v720 
falseSuccessor: v721 
=== Usages ===
=== Predecessor ===
a834 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v717 #trueSuccessor: v720 #falseSuccessor: v721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@~|@floating>@ <|@
tid v724 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
rawvalue: null
stableDimension: 0
stamp: Klass* NULL
stampKind: Klass*
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v720 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
next: v835 
=== Usages ===
=== Predecessor ===
v722 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v835  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
result [v43|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v835 <|@
result v44|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v873 
lastLocationAccess: - 
=== Succesors ===
next: v719 
=== Usages ===
v728 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v873 lastLocationAccess: - #next: v719  <|@  <|@
f <@~|@floating>@ <|@
tid v728 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v835 
=== Succesors ===
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v835  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v723 
=== Predecessor ===
v835 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid v729 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: Klass*
valueDescription: Klass*
=== Inputs ===
merge: v723 
values: v724 v728 
=== Succesors ===
=== Usages ===
v547 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v723 values: v724 v728  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubOrNullIntrinsic(Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:137) [bci: 1] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v718 v719 
=== Succesors ===
next: v41 
=== Usages ===
v729 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v718 v719 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v547 v869 v591 v871 a741 a787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v547 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:138) [bci: 12] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(Object, KlassPointer, Object, Object, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 78]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v729 
y: v545 
=== Succesors ===
=== Usages ===
v75 v46 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v729 y: v545  <|@  <|@
f <@~|@floating>@ <|@
tid v853 <|@
result [v43|DWORD[_] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a834 
=== Succesors ===
=== Usages ===
a836 a837 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a834  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:582) [bci: 51]
profileData: PROFILED designatedSuccessorProbability: 0.9334230601943765
stamp: void
=== Inputs ===
condition: v16 
=== Succesors ===
trueSuccessor: v40 
falseSuccessor: v39 
=== Usages ===
=== Predecessor ===
v723 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v16 #trueSuccessor: v40 #falseSuccessor: v39  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:591) [bci: 135]
stamp: void
=== Inputs ===
=== Succesors ===
next: v75 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v75  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:591) [bci: 140]
profileData: PROFILED designatedSuccessorProbability: 0.017406949851320852
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v73 
falseSuccessor: v74 
=== Usages ===
=== Predecessor ===
v40 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v73 #falseSuccessor: v74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:592) [bci: 143]
stamp: void
=== Inputs ===
=== Succesors ===
next: a836 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a836  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a836 <|@
result v49|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 154]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v80 
=== Usages ===
a289 
=== Predecessor ===
v73 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: v80  <|@  <|@
f <@~|@floating>@ <|@
tid a289 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 154]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a836 
=== Succesors ===
=== Usages ===
v290 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a836  <|@  <|@
tid v290 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>
=== Inputs ===
arguments: a1 i3 a289 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 a289  <|@  <|@
tid ?658 <|@
d <@d|@=== Debug Properties ===
bci: 157
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 593
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
bci: 157
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.setRawValue
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v290 
stateDuring: ?658 
=== Succesors ===
next: v82 
=== Usages ===
=== Predecessor ===
a836 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v290 stateDuring: ?658 #next: v82  <|@  <|@
f <@*|@fixed>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v80 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
next: v72 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v72  <|@  <|@
f <@*|@fixed>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v74 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:583) [bci: 54]
stamp: void
=== Inputs ===
=== Succesors ===
next: v46 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v46  <|@  <|@
tid ?213 <|@
d <@d|@=== Debug Properties ===
bci: 38
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - - i14 
=== Succesors ===
=== Usages ===
?643 ?211 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - - i14  <|@  <|@
tid ?211 <|@
d <@d|@=== Debug Properties ===
bci: 111
bytecode: return
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
localsSize: 4
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 347
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?213 
=== Succesors ===
=== Usages ===
v846 v848 a741 a787 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?213  <|@  <|@
f <@~|@floating>@ <|@
tid v824 <|@
result meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
rawvalue: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v762 v805 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j264 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 1]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
rawvalue: 24
stableDimension: 0
stamp: i64 [24]
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j779 j733 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v46 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:584) [bci: 81]
profileData: PROFILED designatedSuccessorProbability: 0.15602381581763025
stamp: void
=== Inputs ===
condition: v547 
=== Succesors ===
trueSuccessor: v45 
falseSuccessor: v44 
=== Usages ===
=== Predecessor ===
v39 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v547 #trueSuccessor: v45 #falseSuccessor: v44  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v45 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:585) [bci: 84]
stamp: void
=== Inputs ===
=== Succesors ===
next: v774 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v774  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: j730 
=== Usages ===
=== Predecessor ===
v45 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j730  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j730 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j756 
=== Usages ===
v874 v875 
=== Predecessor ===
v774 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j756  <|@  <|@
f <@~|@floating>@ <|@
tid v874 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j730 
index: - 
=== Succesors ===
=== Usages ===
j756 v758 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j756 <|@
result v51|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
=== Succesors ===
next: j757 
=== Usages ===
j733 v876 v877 a740 v878 v879 v880 
=== Predecessor ===
j730 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - #next: j757  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j730 
index: - 
=== Succesors ===
=== Usages ===
j757 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j730 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j757 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v875 
lastLocationAccess: - 
=== Succesors ===
next: v737 
=== Usages ===
v734 
=== Predecessor ===
j756 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v875 lastLocationAccess: - #next: v737  <|@  <|@
f <@~|@floating>@ <|@
tid j733 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: i64
=== Inputs ===
x: j756 
y: j264 
=== Succesors ===
=== Usages ===
v734 v758 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j756 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j757 
y: j733 
=== Succesors ===
=== Usages ===
v737 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j757 y: j733  <|@  <|@
f <@*|@fixed>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v734 
=== Succesors ===
trueSuccessor: v736 
falseSuccessor: v735 
=== Usages ===
=== Predecessor ===
j757 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v734 #trueSuccessor: v736 #falseSuccessor: v735  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: a741 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a741 <|@
result v53|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?211 
arguments: v545 
=== Succesors ===
next: v846 
=== Usages ===
v846 a754 
=== Predecessor ===
v736 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?211 arguments: v545 #next: v846  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v846 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-197233|0xfffffffffffcfd8f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?211 
object: a741 
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
a741 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?211 object: a741 #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
v846 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
next: v758 
=== Usages ===
=== Predecessor ===
v737 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v758  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v758 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v874 
lastLocationAccess: - 
value: j733 
stateAfter: - 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v874 lastLocationAccess: - value: j733 stateAfter: - #next: v750  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
result [v51|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v750 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
address: v878 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v758 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v878 #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result [v51|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v759 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v876 
lastLocationAccess: - 
value: j428 
stateAfter: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v750 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v876 lastLocationAccess: - value: j428 stateAfter: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result [v51|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v880 
lastLocationAccess: - 
value: v824 
stateAfter: - 
=== Succesors ===
next: v763 
=== Usages ===
=== Predecessor ===
v759 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v880 lastLocationAccess: - value: v824 stateAfter: - #next: v763  <|@  <|@
f <@~|@floating>@ <|@
tid v877 <|@
result [v51|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v877 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v764 
=== Usages ===
=== Predecessor ===
v762 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v877 lastLocationAccess: - value: i15 stateAfter: - #next: v764  <|@  <|@
f <@~|@floating>@ <|@
tid v879 <|@
result [v51|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j756 
index: - 
=== Succesors ===
=== Usages ===
v764 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j756 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v764 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v879 
lastLocationAccess: - 
value: j411 
stateAfter: - 
=== Succesors ===
next: a740 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v879 lastLocationAccess: - value: j411 stateAfter: - #next: a740  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a740 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j756 
=== Succesors ===
next: v743 
=== Usages ===
a754 
=== Predecessor ===
v764 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j756 #next: v743  <|@  <|@
f <@*|@fixed>@ <|@
tid v743 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v744 
=== Predecessor ===
a740 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a754 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v744 
values: a740 a741 
=== Succesors ===
=== Usages ===
a559 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v744 values: a740 a741  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v743 v745 
=== Succesors ===
next: v560 
=== Usages ===
a754 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v743 v745 #next: v560  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v560 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a559 
=== Usages ===
=== Predecessor ===
v744 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a559  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a559 <|@
result v56|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
object: a754 
=== Succesors ===
next: a837 
=== Usages ===
v294 ?255 v295 
=== Predecessor ===
v560 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a754 #next: a837  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a837 <|@
result v57|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: EconomicMapImpl$CollisionLink.value
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 99]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v853 
lastLocationAccess: - 
=== Succesors ===
next: v53 
=== Usages ===
a293 
=== Predecessor ===
a559 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v853 lastLocationAccess: - #next: v53  <|@  <|@
f <@~|@floating>@ <|@
tid a293 <|@
result v58|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 99]
op: Uncompress
stamp: a java.lang.Object
=== Inputs ===
value: a837 
=== Succesors ===
=== Usages ===
v294 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a837  <|@  <|@
tid v294 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>, UnresolvedJavaType<Ljava/lang/Object;>, HotSpotResolvedPrimitiveType<int>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)>
=== Inputs ===
arguments: a559 a293 i14 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a559 a293 i14  <|@  <|@
tid a243 <|@
d <@d|@=== Debug Properties ===
fields: [HotSpotResolvedJavaFieldImpl<org.graalvm.collections.EconomicMapImpl$CollisionLink.next int:12>, HotSpotResolvedJavaFieldImpl<org.graalvm.collections.EconomicMapImpl$CollisionLink.value Object:16>]
hasIdentity: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 93]
objectId: 0
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
type: HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?255 ?659 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@jdk.graal.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?255 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a243 
materializedValue: a559 
=== Succesors ===
=== Usages ===
?659 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@jdk.graal.compiler.nodes.virtual.MaterializedObjectState>@ object: a243 materializedValue: a559  <|@  <|@
tid ?659 <|@
d <@d|@=== Debug Properties ===
bci: 104
bytecode: invokespecial
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 586
stackSize: 3
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i3 a243 
virtualObjectMappings: ?255 
=== Succesors ===
=== Usages ===
v53 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i3 a243 virtualObjectMappings: ?255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
bci: 104
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl$CollisionLink.<init>
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v294 
stateDuring: ?659 
=== Succesors ===
next: v56 
=== Usages ===
=== Predecessor ===
a837 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v294 stateDuring: ?659 #next: v56  <|@  <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>, HotSpotResolvedPrimitiveType<int>, UnresolvedJavaType<Ljava/lang/Object;>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>
=== Inputs ===
arguments: a1 i3 a559 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 i3 a559  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 107
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 586
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v56 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
bci: 107
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.setRawValue
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v295 
stateDuring: ?660 
=== Succesors ===
next: v69 
=== Usages ===
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v295 stateDuring: ?660 #next: v69  <|@  <|@
f <@*|@fixed>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v56 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v44 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 113]
stamp: void
=== Inputs ===
=== Succesors ===
next: v817 
=== Usages ===
=== Predecessor ===
v46 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: j776 
=== Usages ===
=== Predecessor ===
v44 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j776 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j799 
=== Usages ===
v881 v882 
=== Predecessor ===
v817 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j799  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j799 v801 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j799 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
=== Succesors ===
next: j800 
=== Usages ===
j779 v883 v884 a786 v885 v886 v887 
=== Predecessor ===
j776 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - #next: j800  <|@  <|@
f <@~|@floating>@ <|@
tid v882 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j776 
index: - 
=== Succesors ===
=== Usages ===
j800 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j776 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j800 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v882 
lastLocationAccess: - 
=== Succesors ===
next: v783 
=== Usages ===
v780 
=== Predecessor ===
j799 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v882 lastLocationAccess: - #next: v783  <|@  <|@
f <@~|@floating>@ <|@
tid j779 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: i64
=== Inputs ===
x: j799 
y: j264 
=== Succesors ===
=== Usages ===
v780 v801 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j799 y: j264  <|@  <|@
f <@~|@floating>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j800 
y: j779 
=== Succesors ===
=== Usages ===
v783 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j800 y: j779  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v780 
=== Succesors ===
trueSuccessor: v782 
falseSuccessor: v781 
=== Usages ===
=== Predecessor ===
j800 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v780 #trueSuccessor: v782 #falseSuccessor: v781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v782 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: a787 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a787 <|@
result v61|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?211 
arguments: v545 
=== Succesors ===
next: v848 
=== Usages ===
v848 a797 
=== Predecessor ===
v782 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?211 arguments: v545 #next: v848  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v848 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-208241|0xfffffffffffcd28f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?211 
object: a787 
=== Succesors ===
next: v791 
=== Usages ===
=== Predecessor ===
a787 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?211 object: a787 #next: v791  <|@  <|@
f <@*|@fixed>@ <|@
tid v791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
v848 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v781 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
next: v801 
=== Usages ===
=== Predecessor ===
v783 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v801  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v801 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v881 
lastLocationAccess: - 
value: j779 
stateAfter: - 
=== Succesors ===
next: v794 
=== Usages ===
=== Predecessor ===
v781 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v881 lastLocationAccess: - value: j779 stateAfter: - #next: v794  <|@  <|@
f <@~|@floating>@ <|@
tid v885 <|@
result [v59|QWORD + 280] <|@
d <@d|@=== Debug Properties ===
displacement: 280
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v794 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v794 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
address: v885 
=== Succesors ===
next: v802 
=== Usages ===
=== Predecessor ===
v801 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v885 #next: v802  <|@  <|@
f <@~|@floating>@ <|@
tid v883 <|@
result [v59|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v802 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v802 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v883 
lastLocationAccess: - 
value: j428 
stateAfter: - 
=== Succesors ===
next: v805 
=== Usages ===
=== Predecessor ===
v794 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v883 lastLocationAccess: - value: j428 stateAfter: - #next: v805  <|@  <|@
f <@~|@floating>@ <|@
tid v887 <|@
result [v59|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v805 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v805 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v887 
lastLocationAccess: - 
value: v824 
stateAfter: - 
=== Succesors ===
next: v806 
=== Usages ===
=== Predecessor ===
v802 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v887 lastLocationAccess: - value: v824 stateAfter: - #next: v806  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
result [v59|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v806 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v806 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v884 
lastLocationAccess: - 
value: i15 
stateAfter: - 
=== Succesors ===
next: v807 
=== Usages ===
=== Predecessor ===
v805 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v884 lastLocationAccess: - value: i15 stateAfter: - #next: v807  <|@  <|@
f <@~|@floating>@ <|@
tid v886 <|@
result [v59|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j799 
index: - 
=== Succesors ===
=== Usages ===
v807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j799 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v886 
lastLocationAccess: - 
value: j411 
stateAfter: - 
=== Succesors ===
next: a786 
=== Usages ===
=== Predecessor ===
v806 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v886 lastLocationAccess: - value: j411 stateAfter: - #next: a786  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a786 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j799 
=== Succesors ===
next: v789 
=== Usages ===
a797 
=== Predecessor ===
v807 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j799 #next: v789  <|@  <|@
f <@*|@fixed>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v790 
=== Predecessor ===
a786 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a797 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v790 
values: a786 a787 
=== Succesors ===
=== Usages ===
v867 a567 v866 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v790 values: a786 a787  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v790 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v789 v791 
=== Succesors ===
next: v566 
=== Usages ===
a797 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v789 v791 #next: v566  <|@  <|@
f <@~|@floating>@ <|@
tid v867 <|@
result [v64|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
v566 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v566 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v867 
lastLocationAccess: - 
value: a834 
stateAfter: - 
=== Succesors ===
next: v563 
=== Usages ===
=== Predecessor ===
v790 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v867 lastLocationAccess: - value: a834 stateAfter: - #next: v563  <|@  <|@
f <@~|@floating>@ <|@
tid v866 <|@
result [v64|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a797 
index: - 
=== Succesors ===
=== Usages ===
v563 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a797 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 115]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v866 
lastLocationAccess: - 
value: i14 
stateAfter: - 
=== Succesors ===
next: v568 
=== Usages ===
=== Predecessor ===
v566 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v866 lastLocationAccess: - value: i14 stateAfter: - #next: v568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v568 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: CONSTRUCTOR_FREEZE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a567 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a567 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean) [bci: -6] Placeholder
stamp: a!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
object: a797 
=== Succesors ===
next: v626 
=== Usages ===
a311 v713 
=== Predecessor ===
v568 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a797 #next: v626  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v626 <|@
d <@d|@=== Debug Properties ===
locations: [SecondarySuperCache]
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v838 
=== Usages ===
=== Predecessor ===
a567 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v888 <|@
result [v19|DWORD[_] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a827 
=== Succesors ===
=== Usages ===
v838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a827  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v838 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!(compressed base: 140154094223360 shift: 0)
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: CompressedHub:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v888 
lastLocationAccess: - 
=== Succesors ===
next: v839 
=== Usages ===
v821 
=== Predecessor ===
v626 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v888 lastLocationAccess: - #next: v839  <|@  <|@
f <@~|@floating>@ <|@
tid v821 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 140154094223360 shift: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v838 
=== Succesors ===
=== Usages ===
v854 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v838  <|@  <|@
f <@~|@floating>@ <|@
tid v854 <|@
result [v66|QWORD + 208] <|@
d <@d|@=== Debug Properties ===
displacement: 208
stamp: void*
stride: S1
=== Inputs ===
base: v821 
index: - 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v821 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v839 <|@
result v68|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*!
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: ObjArrayKlass::_element_klass:final
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*!
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v854 
lastLocationAccess: - 
=== Succesors ===
next: i620 
=== Usages ===
v624 v609 v868 v584 v591 
=== Predecessor ===
v838 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v854 lastLocationAccess: - #next: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v868 <|@
result [v68|QWORD + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: v839 
index: - 
=== Succesors ===
=== Usages ===
i620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v839 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i620 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: Klass::_super_check_offset:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:76) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v868 
lastLocationAccess: - 
=== Succesors ===
next: v840 
=== Usages ===
v581 j582 
=== Predecessor ===
v839 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v868 lastLocationAccess: - #next: v840  <|@  <|@
f <@~|@floating>@ <|@
tid j582 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i620 
=== Succesors ===
=== Usages ===
v869 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i620  <|@  <|@
f <@~|@floating>@ <|@
tid v869 <|@
result [v48|QWORD + v70|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: v545 
index: j582 
=== Succesors ===
=== Usages ===
v840 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v545 index: j582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v840 <|@
d <@d|@=== Debug Properties ===
accessStamp: Klass*
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: PrimarySupers:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 36]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v869 
lastLocationAccess: - 
=== Succesors ===
next: v587 
=== Usages ===
v584 
=== Predecessor ===
i620 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v869 lastLocationAccess: - #next: v587  <|@  <|@
f <@~|@floating>@ <|@
tid v584 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 40]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v840 
=== Succesors ===
=== Usages ===
v587 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v840  <|@  <|@
f <@*|@fixed>@ <|@
tid v587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:80) [bci: 43]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v584 
=== Succesors ===
trueSuccessor: v586 
falseSuccessor: v585 
=== Usages ===
=== Predecessor ===
v840 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v584 #trueSuccessor: v586 #falseSuccessor: v585  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v586 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:81) [bci: 46]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v630 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v630  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v586 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v590 
=== Usages ===
=== Predecessor ===
v587 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v590  <|@  <|@
f <@~|@floating>@ <|@
tid i580 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.secondarySuperCacheOffset(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 18]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
rawvalue: 32
stableDimension: 0
stamp: i32 [32]
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
v581 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v581 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:77) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i620 
y: i580 
=== Succesors ===
=== Usages ===
v590 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i620 y: i580  <|@  <|@
f <@*|@fixed>@ <|@
tid v590 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:90) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v581 
=== Succesors ===
trueSuccessor: v589 
falseSuccessor: v588 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v581 #trueSuccessor: v589 #falseSuccessor: v588  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v589 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v594 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v594  <|@  <|@
f <@~|@floating>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 2]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v839 
y: v545 
=== Succesors ===
=== Usages ===
v594 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v839 y: v545  <|@  <|@
f <@*|@fixed>@ <|@
tid v594 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:104) [bci: 5]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: UNKNOWN designatedSuccessorProbability: 0.5
stamp: void
=== Inputs ===
condition: v591 
=== Succesors ===
trueSuccessor: v593 
falseSuccessor: v592 
=== Usages ===
=== Predecessor ===
v589 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v591 #trueSuccessor: v593 #falseSuccessor: v592  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v593 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:105) [bci: 8]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v637 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v637  <|@  <|@
f <@*|@fixed>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v593 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v592 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v594 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@~|@floating>@ <|@
tid j651 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:109) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
rawvalue: 140154100615680
stableDimension: 0
stamp: i64 [140154100615680]
stampKind: i64
value: long[140154100615680|0x7f782b618a00]
=== Inputs ===
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
v592 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i599 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v598 
values: i15 i613 
=== Succesors ===
=== Usages ===
v600 j604 i613 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v598 values: i15 i613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
canEndsGuestSafepoint: false
canEndsSafepoint: false
canNeverOverflow: false
cloneFromNodeId: 42
compilerInverted: false
disableCounted: false
hasSpeculationFence: false
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
osrLoop: false
peelings: 0
rotated: false
splits: 0
stamp: void
stripMinedInner: false
stripMinedLimit: -1
stripMinedOuter: false
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
protectedNonOverflowingUnsigned: - 
overflowGuard: - 
interIterationAliasingGuard: - 
ends: v597 
=== Succesors ===
next: v603 
=== Usages ===
i599 v601 v610 v614 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@jdk.graal.compiler.nodes.LoopBeginNode>@ stateAfter: - protectedNonOverflowingUnsigned: - overflowGuard: - interIterationAliasingGuard: - ends: v597 #next: v603  <|@  <|@
f <@~|@floating>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i599 
y: i15 
=== Succesors ===
=== Usages ===
v603 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i599 y: i15  <|@  <|@
f <@*|@fixed>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 59]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v600 
=== Succesors ===
trueSuccessor: v602 
falseSuccessor: v601 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v600 #trueSuccessor: v602 #falseSuccessor: v601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 62]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: j623 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: j623  <|@  <|@
f <@~|@floating>@ <|@
tid j604 <|@
result v73|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i599 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i599  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
result [v71|QWORD + v73|QWORD * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S8
=== Inputs ===
base: j651 
index: j604 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j651 index: j604  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j623 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: SecondarySupersElement:final
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 21]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v870 
lastLocationAccess: - 
=== Succesors ===
next: v612 
=== Usages ===
v608 
=== Predecessor ===
v602 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v870 lastLocationAccess: - #next: v612  <|@  <|@
f <@~|@floating>@ <|@
tid v608 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.stubs.LookUpSecondarySupersTableStub.loadSecondarySupersElement(LookUpSecondarySupersTableStub.java:107) [bci: 27]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 70]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: Klass*
=== Inputs ===
input: j623 
=== Succesors ===
=== Usages ===
v609 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@jdk.graal.compiler.hotspot.word.PointerCastNode>@ input: j623  <|@  <|@
f <@~|@floating>@ <|@
tid v609 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 73]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v608 
y: v839 
=== Succesors ===
=== Usages ===
v612 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.PointerEqualsNode>@ x: v608 y: v839  <|@  <|@
f <@*|@fixed>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:114) [bci: 79]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
profileData: INJECTED designatedSuccessorProbability: 0.4
stamp: void
=== Inputs ===
condition: v609 
=== Succesors ===
trueSuccessor: v610 
falseSuccessor: v611 
=== Usages ===
=== Predecessor ===
j623 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v609 #trueSuccessor: v610 #falseSuccessor: v611  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v614 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v614  <|@  <|@
f <@~|@floating>@ <|@
tid i613 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 105]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: i32
=== Inputs ===
x: i599 
y: i12 
=== Succesors ===
=== Usages ===
i599 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i599 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v614 <|@
d <@d|@=== Debug Properties ===
canGuestSafepoint: false
canSafepoint: false
endIndex: 0
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:113) [bci: 55]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
loopBegin: v598 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v611 >@ <|@
instruction <@LoopEnd|@jdk.graal.compiler.nodes.LoopEndNode>@ loopBegin: v598  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 82]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v598 
=== Succesors ===
next: v624 
=== Usages ===
=== Predecessor ===
v612 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v598 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid v871 <|@
result [v48|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: v545 
index: - 
=== Succesors ===
=== Usages ===
v624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: v545 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: SecondarySuperCache
location: SecondarySuperCache
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:115) [bci: 93]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v871 
lastLocationAccess: - 
value: v839 
stateAfter: - 
=== Succesors ===
next: v636 
=== Usages ===
=== Predecessor ===
v610 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v871 lastLocationAccess: - value: v839 stateAfter: - #next: v636  <|@  <|@
f <@*|@fixed>@ <|@
tid v636 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v707 
=== Predecessor ===
v624 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v601 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkSelfAndSupers(TypeCheckSnippetUtils.java:120) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v598 
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@LoopExit|@jdk.graal.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v598 #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:95) [bci: 87]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v601 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v707 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v630 v636 v637 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v630 v636 v637 #next: v711  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
precise: true
stamp: void
=== Inputs ===
address: v852 
value: - 
stateBefore: - 
=== Succesors ===
next: v312 
=== Usages ===
=== Predecessor ===
v707 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v852 value: - stateBefore: - #next: v312  <|@  <|@
f <@~|@floating>@ <|@
tid a311 <|@
result v78|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
op: Compress
stamp: n!# org.graalvm.collections.EconomicMapImpl$CollisionLink
=== Inputs ===
value: a567 
=== Succesors ===
=== Usages ===
v312 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
barrierType: ARRAY
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Array: Object
location: Array: Object
memoryOrder: PLAIN
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: v513 
address: v852 
lastLocationAccess: - 
value: a311 
stateAfter: - 
=== Succesors ===
next: v713 
=== Usages ===
=== Predecessor ===
v711 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v513 address: v852 lastLocationAccess: - value: a311 stateAfter: - #next: v713  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
precise: true
stamp: void
=== Inputs ===
address: v852 
value: a567 
object: - 
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v312 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v852 value: a567 object: - #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v69 v71 v72 v82 
=== Succesors ===
next: v84 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v69 v71 v72 v82 #next: v84  <|@  <|@
f <@*|@fixed>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:596) [bci: 160]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v70 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.TypeCheckSnippetUtils.checkUnknownSubType(TypeCheckSnippetUtils.java:91) [bci: 75]
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(InstanceOfSnippets.java:220) [bci: 117] Substitution
at jdk.graal.compiler.hotspot.replacements.InstanceOfSnippets.instanceofDynamic(KlassPointer, Object, Object, Object, boolean, boolean, TypeCheckSnippetUtils$Counters) [bci: -1] Substitution
at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
next: v632 
=== Usages ===
=== Predecessor ===
v590 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v632  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v588 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v632 v638 
=== Succesors ===
next: v530 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v632 v638 #next: v530  <|@  <|@
tid ?643 <|@
d <@d|@=== Debug Properties ===
bci: 111
bytecode: return
code: ResolvedJavaMethodBytecode<EconomicMapImpl.setHashArray(int, int)>
localsSize: 4
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
sourceFile: EconomicMapImpl.java
sourceLine: 347
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?213 
=== Succesors ===
=== Usages ===
v530 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?213  <|@  <|@
f <@*|@fixed>@ <|@
tid v530 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 313
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setRawValue(EconomicMapImpl.java:816) [bci: 10]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:588) [bci: 129]
reason: ArrayStoreException
speculation: jdk.vm.ci.meta.SpeculationLog$NoSpeculationReason@21bb3a3d
stamp: void
=== Inputs ===
stateBefore: ?643 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?643  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v543 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:336) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v680 
=== Usages ===
=== Predecessor ===
v544 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v680  <|@  <|@
f <@~|@floating>@ <|@
tid j682 <|@
result long[3220|0xc94] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: 3220
stableDimension: 0
stamp: i64 [3220]
stampKind: i64
value: long[3220|0xc94]
=== Inputs ===
=== Succesors ===
=== Usages ===
j672 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i681 <|@
result int[-138515|0xfffffffffffde2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -138515
stableDimension: 0
stamp: i32 [-138515]
stampKind: i32
value: int[-138515|0xfffffffffffde2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v543 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v527 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:339) [bci: 56]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v678 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v678  <|@  <|@
f <@~|@floating>@ <|@
tid i679 <|@
result int[-87579|0xfffffffffffea9e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -87579
stableDimension: 0
stamp: i32 [-87579]
stampKind: i32
value: int[-87579|0xfffffffffffea9e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v527 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:338) [bci: 43]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
stamp: void
=== Inputs ===
=== Succesors ===
next: v676 
=== Usages ===
=== Predecessor ===
v524 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v676  <|@  <|@
f <@~|@floating>@ <|@
tid i677 <|@
result int[-85275|0xfffffffffffeb2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275]
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v523 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v515 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
next: v669 
=== Usages ===
=== Predecessor ===
v516 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v669  <|@  <|@
f <@~|@floating>@ <|@
tid i670 <|@
result int[-70939|0xfffffffffffeeae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
rawvalue: -70939
stableDimension: 0
stamp: i32 [-70939]
stampKind: i32
value: int[-70939|0xfffffffffffeeae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i671 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v669 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v668 
=== Predecessor ===
v515 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i671 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i32 [-138515 - -70939] bits:1...1xx1x1xxxxx1110x101
valueDescription: i32
=== Inputs ===
merge: v668 
values: i670 i675 i677 i679 i681 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v668 values: i670 i675 i677 i679 i681  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: i64 [0 - 3220] bits:0...0xx00x00x0x00
valueDescription: i64
=== Inputs ===
merge: v668 
values: j411 j411 j411 j411 j682 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v668 values: j411 j411 j411 j411 j682  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v668 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v669 v674 v676 v678 v680 
=== Succesors ===
next: v673 
=== Usages ===
i671 j672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v669 v674 v676 v678 v680 #next: v673  <|@  <|@
tid ?31 <|@
d <@d|@=== Debug Properties ===
bci: 32
bytecode: aload_0
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 580
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 - i3 - i117 i14 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i3 - i117 i14  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getRawValue(EconomicMapImpl.java:820) [bci: 9]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:581) [bci: 43]
stamp: void
=== Inputs ===
stateBefore: ?31 
actionAndReason: i671 
speculation: j672 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v668 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?31 actionAndReason: i671 speculation: j672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 27]
stamp: void
=== Inputs ===
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
v26 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v28  <|@  <|@
tid v274 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Lorg/graalvm/collections/EconomicMapImpl;, resolved>]
stamp: void
targetMethod: HotSpotMethod<EconomicMapImpl.createHash()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?657 <|@
d <@d|@=== Debug Properties ===
bci: 28
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<EconomicMapImpl.putHashEntry(Object, int, boolean)>
localsSize: 8
locksSize: 0
sourceFile: EconomicMapImpl.java
sourceLine: 577
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
=== Succesors ===
=== Usages ===
v28 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
bci: 28
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
polymorphic: false
stamp: void
targetMethod: Direct#EconomicMapImpl.createHash
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v274 
stateDuring: ?657 
=== Succesors ===
next: v30 
=== Usages ===
=== Predecessor ===
v21 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v274 stateDuring: ?657 #next: v30  <|@  <|@
f <@*|@fixed>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:578) [bci: 31]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v28 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:324) [bci: 29]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v704 
=== Usages ===
=== Predecessor ===
v540 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v704  <|@  <|@
f <@~|@floating>@ <|@
tid j706 <|@
result long[1940|0x794] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: 1940
stableDimension: 0
stamp: i64 [1940]
stampKind: i64
value: long[1940|0x794]
=== Inputs ===
=== Succesors ===
=== Usages ===
j698 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i705 <|@
result int[-137491|0xfffffffffffde6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -137491
stableDimension: 0
stamp: i32 [-137491]
stampKind: i32
value: int[-137491|0xfffffffffffde6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v539 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v511 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 53]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v702 
=== Usages ===
=== Predecessor ===
v512 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v702  <|@  <|@
f <@~|@floating>@ <|@
tid i703 <|@
result int[-96795|0xfffffffffffe85e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -96795
stableDimension: 0
stamp: i32 [-96795]
stampKind: i32
value: int[-96795|0xfffffffffffe85e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v511 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:326) [bci: 41]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v700 
=== Usages ===
=== Predecessor ===
v508 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v700  <|@  <|@
f <@~|@floating>@ <|@
tid i701 <|@
result int[-94235|0xfffffffffffe8fe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
rawvalue: -94235
stableDimension: 0
stamp: i32 [-94235]
stampKind: i32
value: int[-94235|0xfffffffffffe8fe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i697 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v694 
=== Predecessor ===
v507 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i697 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i32 [-137491 - -90907] bits:1...1xx1xxxx1xx1110x101
valueDescription: i32
=== Inputs ===
merge: v694 
values: i696 i701 i703 i705 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v694 values: i696 i701 i703 i705  <|@  <|@
f <@~|@floating>@ <|@
tid j698 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: i64 [0 - 1940] bits:0...0xxxx00x0x00
valueDescription: i64
=== Inputs ===
merge: v694 
values: j411 j411 j411 j706 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v694 values: j411 j411 j411 j706  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v695 v700 v702 v704 
=== Succesors ===
next: v699 
=== Usages ===
i697 j698 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v695 v700 v702 v704 #next: v699  <|@  <|@
tid ?115 <|@
d <@d|@=== Debug Properties ===
bci: 64
bytecode: iconst_1
code: ResolvedJavaMethodBytecode<EconomicMapImpl.getHashIndex(Object)>
localsSize: 3
locksSize: 0
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
sourceFile: EconomicMapImpl.java
sourceLine: 416
stackSize: 2
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: ?155 
values: i114 i153 
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: ?155 values: i114 i153  <|@  <|@
f <@*|@fixed>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashArray(EconomicMapImpl.java:323) [bci: 16]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:575) [bci: 10]
stamp: void
=== Inputs ===
stateBefore: ?115 
actionAndReason: i697 
speculation: j698 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v694 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?115 actionAndReason: i697 speculation: j698  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v647 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:534) [bci: 24]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
stamp: void
=== Inputs ===
=== Succesors ===
next: v889 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v889  <|@  <|@
f <@*|@fixed>@ <|@
tid v889 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 645
mayConvertToGuard: true
nodeSourcePosition: at org.graalvm.collections.EconomicMapImpl.getHashTableSize(EconomicMapImpl.java:532) [bci: 4]
at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 61]
at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
reason: UnreachedCode
speculation: {0x0000000000000514[index: 40, len: 20, hash: 0x49ee584f]: UnreachedCode@6[HotSpotMethod<EconomicMapImpl.getHashTableSize()>, 35]}
stamp: void
=== Inputs ===
stateBefore: ?111 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v647 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?111  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr   -1  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[144, 148[[920, 921[[1124, 1126[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1322[[1346, 1348[[1374, 1376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v50|q [0, 32[[146, 147[[918, 921[[1124, 1125[[1238, 1241[[1246, 1249[[1278, 1279[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 30[[146, 147[[916, 921[[1122, 1125[[1236, 1241[[1244, 1249[[1278, 1279[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[142, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 28[[140, 147[[914, 921[[1120, 1125[[1234, 1241[[1242, 1249[[1276, 1279[[1318, 1320[[1344, 1346[[1372, 1374[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1321[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [28, 532[[560, 874[[884, 914[[1080, 1242[[1252, 1276[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[[1580, 1601[28 MustHaveRegister 36 MustHaveRegister 220 MustHaveRegister 224 MustHaveRegister 914 ShouldHaveRegister 1242 ShouldHaveRegister 1276 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [30, 140[[152, 192[[1080, 1122[[1282, 1318[[1580, 1601[30 MustHaveRegister 102 MustHaveRegister 140 ShouldHaveRegister 166 MustHaveRegister 1122 ShouldHaveRegister 1318 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d rcx|- [32, 532[[560, 874[[884, 916[[1080, 1244[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[[1580, 1601[32 MustHaveRegister 342 ShouldHaveRegister 360 ShouldHaveRegister 916 ShouldHaveRegister 1244 ShouldHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d r8|- [34, 314[[560, 658[[1080, 1130[[1282, 1326[[1382, 1413[[1414, 1465[[1580, 1601[34 MustHaveRegister 658 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d -1 [36, 40[[50, 62[[1080, 1118[36 MustHaveRegister 38 MustHaveRegister 60 ShouldHaveRegister 1090 ShouldHaveRegister 1118 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[v5|d]" v5|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q v5|d [106, 136[106 MustHaveRegister 108 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [166, 186[166 MustHaveRegister 168 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[v9|q]" v9|q v8|q [168, 170[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v8|q [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[v11|d]" v11|d -1 [188, 201[188 MustHaveRegister 190 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d rax|q [1322, 1325[1322 MustHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[v13|q]" v13|q -1 [136, 142[136 MustHaveRegister 138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[v14|q]" v14|q -1 [138, 144[138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d rax|q [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q v4|d [1118, 1120[1118 MustHaveRegister 1120 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[v17|d]" v17|d rax|q [1126, 1129[1126 MustHaveRegister 1128 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[v18|d]" v18|d v15|d [202, 264[[622, 648[[1392, 1413[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[v19|d]" v19|d -1 [220, 520[[560, 776[[1326, 1354[220 MustHaveRegister 222 MustHaveRegister 464 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[v20|d]" v20|d -1 [222, 364[[390, 424[[560, 670[222 MustHaveRegister 228 ShouldHaveRegister 274 ShouldHaveRegister 346 MustHaveRegister 362 ShouldHaveRegister 424 ShouldHaveRegister 594 ShouldHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[v21|d]" v21|d -1 [224, 386[[390, 444[[560, 670[224 MustHaveRegister 226 MustHaveRegister 298 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[v22|d]" v22|d -1 [226, 374[[390, 412[[560, 670[226 MustHaveRegister 238 ShouldHaveRegister 286 MustHaveRegister 374 MustHaveRegister 400 MustHaveRegister 412 MustHaveRegister 570 MustHaveRegister 582 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[v23|d]" v23|d v22|d [644, 647[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[v24|d]" v24|d v23|d [240, 288[[560, 596[[1382, 1392[[1414, 1465[266 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[v25|d]" v25|d v18|d [262, 264[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[v26|d]" v26|d v18|d [264, 288[[560, 596[[1382, 1392[[1414, 1465[264 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[v27|d]" v27|d v24|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[v28|d]" v28|d v26|d [268, 386[[390, 426[[560, 622[[648, 670[[1466, 1486[[1496, 1516[[1548, 1579[268 MustHaveRegister 270 ShouldHaveRegister 286 ShouldHaveRegister 298 MustHaveRegister 374 ShouldHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[v29|d]" v29|d v28|d [270, 364[[390, 440[[560, 622[[648, 670[270 MustHaveRegister 272 ShouldHaveRegister 400 ShouldHaveRegister 440 MustHaveRegister 570 ShouldHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[v30|d]" v30|d v29|d [272, 364[[390, 444[[560, 622[[648, 670[272 MustHaveRegister 412 ShouldHaveRegister 444 MustHaveRegister 582 ShouldHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[v31|d]" v31|d v36|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[v32|d]" v32|d -1 [612, 614[612 MustHaveRegister 614 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[v33|d]" v33|d v32|d [614, 618[614 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[v34|d]" v34|d -1 [616, 618[616 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[v35|d]" v35|d v33|d [618, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[v36|d]" v36|d v31|d [302, 518[[648, 670[312 MustHaveRegister 340 ShouldHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[v37|d]" v37|d v36|d [340, 520[[670, 874[[1130, 1238[[1326, 1382[[1466, 1547[[1548, 1579[340 MustHaveRegister 774 MustHaveRegister 1238 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[v38|d]" v38|d v2|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[v39|d]" v39|d v38|d [344, 520[[670, 884[[924, 1074[[1326, 1354[344 MustHaveRegister 346 ShouldHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[v40|d]" v40|d v2|d [360, 386[[390, 442[360 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[v41|d]" v41|d v40|d [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[v42|q]" v42|q v19|d [464, 520[[670, 884[[924, 1074[[1326, 1354[464 MustHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[v43|d]" v43|d -1 [466, 532[[670, 772[[884, 910[[1130, 1230[[1326, 1382[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 772 MustHaveRegister 910 MustHaveRegister 1230 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[v44|d]" v44|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[v45|q]" v45|q v44|d [490, 493[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[v46|q]" v46|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[v47|q]" v47|q v45|q [504, 530[[670, 680[530 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[v48|q]" v48|q -1 [516, 530[[670, 874[[934, 944[[1130, 1154[[1326, 1372[516 MustHaveRegister 530 MustHaveRegister 680 MustHaveRegister 788 MustHaveRegister 812 MustHaveRegister 944 MustHaveRegister 1344 ShouldHaveRegister 1372 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[v49|d]" v49|d -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[v50|q]" v50|q v49|d [912, 918[912 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[v51|q]" v51|q -1 [1148, 1188[1148 MustHaveRegister 1150 MustHaveRegister 1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister 1184 MustHaveRegister 1186 MustHaveRegister 1188 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[v52|q]" v52|q -1 [1150, 1176[1150 MustHaveRegister 1152 MustHaveRegister 1176 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[v53|q]" v53|q rax|q [1376, 1381[1376 MustHaveRegister 1378 MustHaveRegister 1380 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[v55|q]" v55|q v51|q [1188, 1191[1188 MustHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[v56|q]" v56|q v55|q [1192, 1246[1234 ShouldHaveRegister 1246 ShouldHaveRegister  "NoSpillStore"
  v57|d DWORD "[v57|d]" v57|d -1 [1230, 1232[1230 MustHaveRegister 1232 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[v58|q]" v58|q v57|d [1232, 1236[1232 MustHaveRegister 1236 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[v59|q]" v59|q -1 [700, 740[700 MustHaveRegister 702 MustHaveRegister 730 MustHaveRegister 732 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[v60|q]" v60|q -1 [702, 728[702 MustHaveRegister 704 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[v61|q]" v61|q rax|q [1348, 1353[1348 MustHaveRegister 1350 MustHaveRegister 1352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[v63|q]" v63|q v59|q [740, 743[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[v64|q]" v64|q v63|q [744, 884[[924, 1077[772 MustHaveRegister 774 MustHaveRegister 1070 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[v65|d]" v65|d -1 [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[v66|q]" v66|q v65|d [780, 782[780 MustHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[v67|q]" v67|q -1 [778, 781[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[v68|q]" v68|q -1 [782, 874[[934, 944[782 MustHaveRegister 784 MustHaveRegister 788 MustHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 873 LiveAtLoopEnd 944 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[v69|d]" v69|d -1 [784, 800[784 MustHaveRegister 786 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[v70|q]" v70|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[v71|q]" v71|q -1 [824, 874[824 MustHaveRegister 856 MustHaveRegister 873 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[v72|d]" v72|d v75|d [828, 870[838 MustHaveRegister 854 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[v73|q]" v73|q -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[v74|q]" v74|q -1 [856, 858[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[v75|d]" v75|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[v76|q]" v76|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v77|q QWORD "[v77|q]" v77|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v78|d DWORD "[v78|d]" v78|d v64|q [1070, 1072[1070 MustHaveRegister 1072 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[v79|q]" v79|q -1 [1074, 1077[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[v80|q]" v80|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v81|q QWORD "[v81|q]" v81|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[v82|d]" v82|d -1 [1558, 1574[1574 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[v83|q]" v83|q -1 [1558, 1576[1576 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[v84|d]" v84|d -1 [1444, 1460[1460 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[v85|q]" v85|q -1 [1444, 1462[1462 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[144, 148[[920, 921[[1124, 1126[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1322[[1346, 1348[[1374, 1376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v50|q [0, 32[[146, 147[[918, 921[[1124, 1125[[1238, 1241[[1246, 1249[[1278, 1279[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 30[[146, 147[[916, 921[[1122, 1125[[1236, 1241[[1244, 1249[[1278, 1279[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[142, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 28[[140, 147[[914, 921[[1120, 1125[[1234, 1241[[1242, 1249[[1276, 1279[[1318, 1320[[1344, 1346[[1372, 1374[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1321[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 110[28 MustHaveRegister 36 MustHaveRegister  "SpillInDominator"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 140[[152, 192[[1080, 1122[[1282, 1318[[1580, 1601[30 MustHaveRegister 102 MustHaveRegister 140 ShouldHaveRegister 166 MustHaveRegister 1122 ShouldHaveRegister 1318 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 110[32 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [34, 110[34 MustHaveRegister  "SpillInDominator"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 40[[50, 62[[1080, 1118[36 MustHaveRegister 38 MustHaveRegister 60 ShouldHaveRegister 1090 ShouldHaveRegister 1118 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q v5|d [106, 136[106 MustHaveRegister 108 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [166, 186[166 MustHaveRegister 168 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [168, 170[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [188, 201[188 MustHaveRegister 190 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|q [1322, 1325[1322 MustHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [136, 142[136 MustHaveRegister 138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [138, 144[138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v4|d [1118, 1120[1118 MustHaveRegister 1120 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1126, 1129[1126 MustHaveRegister 1128 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [202, 264[[622, 648[[1392, 1413[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [220, 520[[560, 776[[1326, 1354[220 MustHaveRegister 222 MustHaveRegister 464 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [222, 364[[390, 424[[560, 670[222 MustHaveRegister 228 ShouldHaveRegister 274 ShouldHaveRegister 346 MustHaveRegister 362 ShouldHaveRegister 424 ShouldHaveRegister 594 ShouldHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [224, 386[[390, 444[[560, 670[224 MustHaveRegister 226 MustHaveRegister 298 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [226, 374[[390, 412[[560, 670[226 MustHaveRegister 238 ShouldHaveRegister 286 MustHaveRegister 374 MustHaveRegister 400 MustHaveRegister 412 MustHaveRegister 570 MustHaveRegister 582 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v22|d [644, 647[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [240, 288[[560, 596[[1382, 1392[[1414, 1465[266 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d v18|d [262, 264[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v18|d [264, 288[[560, 596[[1382, 1392[[1414, 1465[264 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d v24|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r9|d]" v28|d v26|d [268, 386[[390, 426[[560, 622[[648, 670[[1466, 1486[[1496, 1516[[1548, 1579[268 MustHaveRegister 270 ShouldHaveRegister 286 ShouldHaveRegister 298 MustHaveRegister 374 ShouldHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [270, 364[[390, 440[[560, 622[[648, 670[270 MustHaveRegister 272 ShouldHaveRegister 400 ShouldHaveRegister 440 MustHaveRegister 570 ShouldHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v29|d [272, 364[[390, 444[[560, 622[[648, 670[272 MustHaveRegister 412 ShouldHaveRegister 444 MustHaveRegister 582 ShouldHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v36|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [612, 614[612 MustHaveRegister 614 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r8|d]" v33|d v32|d [614, 618[614 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [616, 618[616 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v33|d [618, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d v31|d [302, 518[[648, 670[312 MustHaveRegister 340 ShouldHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [340, 520[[670, 874[[1130, 1238[[1326, 1382[[1466, 1547[[1548, 1579[340 MustHaveRegister 774 MustHaveRegister 1238 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d v2|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d v38|d [344, 520[[670, 884[[924, 1074[[1326, 1354[344 MustHaveRegister 346 ShouldHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v2|d [360, 386[[390, 442[360 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d v40|d [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v19|d [464, 520[[670, 884[[924, 1074[[1326, 1354[464 MustHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [466, 532[[670, 772[[884, 910[[1130, 1230[[1326, 1382[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 772 MustHaveRegister 910 MustHaveRegister 1230 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|d [490, 493[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [504, 530[[670, 680[530 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [516, 530[[670, 874[[934, 944[[1130, 1154[[1326, 1372[516 MustHaveRegister 530 MustHaveRegister 680 MustHaveRegister 788 MustHaveRegister 812 MustHaveRegister 944 MustHaveRegister 1344 ShouldHaveRegister 1372 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q v49|d [912, 918[912 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [1148, 1188[1148 MustHaveRegister 1150 MustHaveRegister 1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister 1184 MustHaveRegister 1186 MustHaveRegister 1188 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdx|q]" v52|q -1 [1150, 1176[1150 MustHaveRegister 1152 MustHaveRegister 1176 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [1376, 1381[1376 MustHaveRegister 1378 MustHaveRegister 1380 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v51|q [1188, 1191[1188 MustHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [1192, 1233[ "OneSpillStore"
  v57|d DWORD "[rdx|d]" v57|d -1 [1230, 1232[1230 MustHaveRegister 1232 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdx|q]" v58|q v57|d [1232, 1236[1232 MustHaveRegister 1236 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [700, 740[700 MustHaveRegister 702 MustHaveRegister 730 MustHaveRegister 732 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [702, 728[702 MustHaveRegister 704 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q rax|q [1348, 1353[1348 MustHaveRegister 1350 MustHaveRegister 1352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v59|q [740, 743[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdx|q]" v64|q v63|q [744, 884[[924, 1077[772 MustHaveRegister 774 MustHaveRegister 1070 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|d [780, 782[780 MustHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [778, 781[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q -1 [782, 874[[934, 944[782 MustHaveRegister 784 MustHaveRegister 788 MustHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 873 LiveAtLoopEnd 944 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [784, 800[784 MustHaveRegister 786 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r9|q]" v70|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r8|q]" v71|q -1 [824, 874[824 MustHaveRegister 856 MustHaveRegister 873 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r9|d]" v72|d v75|d [828, 870[838 MustHaveRegister 854 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbx|q]" v73|q -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rbx|q]" v74|q -1 [856, 858[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v77|q QWORD "[r10|q]" v77|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v78|d DWORD "[rsi|d]" v78|d v64|q [1070, 1072[1070 MustHaveRegister 1072 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1074, 1077[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v81|q QWORD "[r11|q]" v81|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1558, 1574[1574 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r11|q]" v83|q -1 [1558, 1576[1576 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [1444, 1460[1460 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r11|q]" v85|q -1 [1444, 1462[1462 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[vstack:0|q]" v0|q v0|q [110, 139[ "SpillInDominator"
  v87|d DWORD "[vstack:2|d]" v2|d v2|d [110, 145[ "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v3|d v3|d [110, 145[ "SpillInDominator"
  v89|q QWORD "[vstack:0|q]" v0|q v0|q [139, 145[ "SpillInDominator"
  v90|d DWORD "[vstack:2|d]" v2|d v2|d [145, 532[[560, 874[[884, 916[[1080, 1244[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[342 ShouldHaveRegister 360 ShouldHaveRegister 916 ShouldHaveRegister 1244 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:3|d]" v3|d v3|d [145, 314[[560, 648[ "SpillInDominator"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [145, 202[ "SpillInDominator"
  v93|q QWORD "[rsi|q]" v0|q v0|q [202, 532[[560, 874[[884, 914[[1080, 1092[220 MustHaveRegister 224 MustHaveRegister 914 ShouldHaveRegister  "SpillInDominator"
  v94|d DWORD "[rcx|d]" v2|d v2|d [1580, 1601[ "OneSpillStore"
  v95|d DWORD "[rax|d]" v3|d v3|d [648, 658[[1080, 1092[658 MustHaveRegister  "SpillInDominator"
  v96|q QWORD "[vstack:0|q]" v0|q v0|q [1092, 1119[ "SpillInDominator"
  v97|d DWORD "[vstack:3|d]" v3|d v3|d [1092, 1123[ "SpillInDominator"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [1119, 1123[ "SpillInDominator"
  v99|d DWORD "[vstack:3|d]" v3|d v3|d [1123, 1130[[1282, 1326[[1382, 1413[[1414, 1465[ "SpillInDominator"
  v100|q QWORD "[vstack:0|q]" v0|q v0|q [1123, 1242[[1252, 1276[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[1242 ShouldHaveRegister 1276 ShouldHaveRegister  "SpillInDominator"
  v101|q QWORD "[rsi|q]" v0|q v0|q [1580, 1601[ "SpillInDominator"
  v102|d DWORD "[r8|d]" v3|d v3|d [1580, 1601[ "SpillInDominator"
  v103|q QWORD "[r10|q]" v56|q v56|q [1233, 1239[1234 ShouldHaveRegister  "OneSpillStore"
  v104|q QWORD "[vstack:5|q]" v56|q v56|q [1239, 1246[1246 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = STACKMOVE (input: v86|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v88|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE (input: v96|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[144, 148[[920, 921[[1124, 1126[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1322[[1346, 1348[[1374, 1376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v50|q [0, 32[[146, 147[[918, 921[[1124, 1125[[1238, 1241[[1246, 1249[[1278, 1279[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 30[[146, 147[[916, 921[[1122, 1125[[1236, 1241[[1244, 1249[[1278, 1279[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[142, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 28[[140, 147[[914, 921[[1120, 1125[[1234, 1241[[1242, 1249[[1276, 1279[[1318, 1320[[1344, 1346[[1372, 1374[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1321[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 110[28 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 140[[152, 192[[1080, 1122[[1282, 1318[[1580, 1601[30 MustHaveRegister 102 MustHaveRegister 140 ShouldHaveRegister 166 MustHaveRegister 1122 ShouldHaveRegister 1318 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 110[32 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [34, 110[34 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 40[[50, 62[[1080, 1118[36 MustHaveRegister 38 MustHaveRegister 60 ShouldHaveRegister 1090 ShouldHaveRegister 1118 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q v5|d [106, 136[106 MustHaveRegister 108 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [166, 186[166 MustHaveRegister 168 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [168, 170[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [188, 201[188 MustHaveRegister 190 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|q [1322, 1325[1322 MustHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [136, 142[136 MustHaveRegister 138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [138, 144[138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v4|d [1118, 1120[1118 MustHaveRegister 1120 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1126, 1129[1126 MustHaveRegister 1128 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [202, 264[[622, 648[[1392, 1413[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [220, 520[[560, 776[[1326, 1354[220 MustHaveRegister 222 MustHaveRegister 464 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [222, 364[[390, 424[[560, 670[222 MustHaveRegister 228 ShouldHaveRegister 274 ShouldHaveRegister 346 MustHaveRegister 362 ShouldHaveRegister 424 ShouldHaveRegister 594 ShouldHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [224, 386[[390, 444[[560, 670[224 MustHaveRegister 226 MustHaveRegister 298 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [226, 374[[390, 412[[560, 670[226 MustHaveRegister 238 ShouldHaveRegister 286 MustHaveRegister 374 MustHaveRegister 400 MustHaveRegister 412 MustHaveRegister 570 MustHaveRegister 582 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v22|d [644, 647[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [240, 288[[560, 596[[1382, 1392[[1414, 1465[266 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d v18|d [262, 264[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v18|d [264, 288[[560, 596[[1382, 1392[[1414, 1465[264 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d v24|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r9|d]" v28|d v26|d [268, 386[[390, 426[[560, 622[[648, 670[[1466, 1486[[1496, 1516[[1548, 1579[268 MustHaveRegister 270 ShouldHaveRegister 286 ShouldHaveRegister 298 MustHaveRegister 374 ShouldHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [270, 364[[390, 440[[560, 622[[648, 670[270 MustHaveRegister 272 ShouldHaveRegister 400 ShouldHaveRegister 440 MustHaveRegister 570 ShouldHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v29|d [272, 364[[390, 444[[560, 622[[648, 670[272 MustHaveRegister 412 ShouldHaveRegister 444 MustHaveRegister 582 ShouldHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v36|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [612, 614[612 MustHaveRegister 614 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r8|d]" v33|d v32|d [614, 618[614 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [616, 618[616 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v33|d [618, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d v31|d [302, 518[[648, 670[312 MustHaveRegister 340 ShouldHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [340, 520[[670, 874[[1130, 1238[[1326, 1382[[1466, 1547[[1548, 1579[340 MustHaveRegister 774 MustHaveRegister 1238 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d v2|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d v38|d [344, 520[[670, 884[[924, 1074[[1326, 1354[344 MustHaveRegister 346 ShouldHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v2|d [360, 386[[390, 442[360 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d v40|d [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v19|d [464, 520[[670, 884[[924, 1074[[1326, 1354[464 MustHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [466, 532[[670, 772[[884, 910[[1130, 1230[[1326, 1382[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 772 MustHaveRegister 910 MustHaveRegister 1230 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|d [490, 493[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [504, 530[[670, 680[530 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [516, 530[[670, 874[[934, 944[[1130, 1154[[1326, 1372[516 MustHaveRegister 530 MustHaveRegister 680 MustHaveRegister 788 MustHaveRegister 812 MustHaveRegister 944 MustHaveRegister 1344 ShouldHaveRegister 1372 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q v49|d [912, 918[912 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [1148, 1188[1148 MustHaveRegister 1150 MustHaveRegister 1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister 1184 MustHaveRegister 1186 MustHaveRegister 1188 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdx|q]" v52|q -1 [1150, 1176[1150 MustHaveRegister 1152 MustHaveRegister 1176 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [1376, 1381[1376 MustHaveRegister 1378 MustHaveRegister 1380 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v51|q [1188, 1191[1188 MustHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [1192, 1233[ "OneSpillStore"
  v57|d DWORD "[rdx|d]" v57|d -1 [1230, 1232[1230 MustHaveRegister 1232 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdx|q]" v58|q v57|d [1232, 1236[1232 MustHaveRegister 1236 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [700, 740[700 MustHaveRegister 702 MustHaveRegister 730 MustHaveRegister 732 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [702, 728[702 MustHaveRegister 704 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q rax|q [1348, 1353[1348 MustHaveRegister 1350 MustHaveRegister 1352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v59|q [740, 743[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdx|q]" v64|q v63|q [744, 884[[924, 1077[772 MustHaveRegister 774 MustHaveRegister 1070 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|d [780, 782[780 MustHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [778, 781[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q -1 [782, 874[[934, 944[782 MustHaveRegister 784 MustHaveRegister 788 MustHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 873 LiveAtLoopEnd 944 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [784, 800[784 MustHaveRegister 786 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r9|q]" v70|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r8|q]" v71|q -1 [824, 874[824 MustHaveRegister 856 MustHaveRegister 873 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r9|d]" v72|d v75|d [828, 870[838 MustHaveRegister 854 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbx|q]" v73|q -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rbx|q]" v74|q -1 [856, 858[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v77|q QWORD "[r10|q]" v77|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v78|d DWORD "[rsi|d]" v78|d v64|q [1070, 1072[1070 MustHaveRegister 1072 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1074, 1077[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v81|q QWORD "[r11|q]" v81|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1558, 1574[1574 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r11|q]" v83|q -1 [1558, 1576[1576 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [1444, 1460[1460 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r11|q]" v85|q -1 [1444, 1462[1462 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[vstack:0|q]" v0|q v0|q [110, 139[ "StoreAtDefinition"
  v87|d DWORD "[vstack:2|d]" v2|d v2|d [110, 145[ "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v3|d v3|d [110, 145[ "StoreAtDefinition"
  v89|q QWORD "[vstack:0|q]" v0|q v0|q [139, 145[ "StoreAtDefinition"
  v90|d DWORD "[vstack:2|d]" v2|d v2|d [145, 532[[560, 874[[884, 916[[1080, 1244[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[342 ShouldHaveRegister 360 ShouldHaveRegister 916 ShouldHaveRegister 1244 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:3|d]" v3|d v3|d [145, 314[[560, 648[ "StoreAtDefinition"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [145, 202[ "StoreAtDefinition"
  v93|q QWORD "[rsi|q]" v0|q v0|q [202, 532[[560, 874[[884, 914[[1080, 1092[220 MustHaveRegister 224 MustHaveRegister 914 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[rcx|d]" v2|d v2|d [1580, 1601[ "OneSpillStore"
  v95|d DWORD "[rax|d]" v3|d v3|d [648, 658[[1080, 1092[658 MustHaveRegister  "StoreAtDefinition"
  v96|q QWORD "[vstack:0|q]" v0|q v0|q [1092, 1119[ "StoreAtDefinition"
  v97|d DWORD "[vstack:3|d]" v3|d v3|d [1092, 1123[ "StoreAtDefinition"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [1119, 1123[ "StoreAtDefinition"
  v99|d DWORD "[vstack:3|d]" v3|d v3|d [1123, 1130[[1282, 1326[[1382, 1413[[1414, 1465[ "StoreAtDefinition"
  v100|q QWORD "[vstack:0|q]" v0|q v0|q [1123, 1242[[1252, 1276[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[1242 ShouldHaveRegister 1276 ShouldHaveRegister  "StoreAtDefinition"
  v101|q QWORD "[rsi|q]" v0|q v0|q [1580, 1601[ "StoreAtDefinition"
  v102|d DWORD "[r8|d]" v3|d v3|d [1580, 1601[ "StoreAtDefinition"
  v103|q QWORD "[r10|q]" v56|q v56|q [1233, 1239[1234 ShouldHaveRegister  "OneSpillStore"
  v104|q QWORD "[vstack:5|q]" v56|q v56|q [1239, 1246[1246 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = STACKMOVE (input: v86|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v88|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [v15|DWORD] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [v11|DWORD] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [v22|DWORD] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [v31|DWORD] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [v45|QWORD] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [Object[null]] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [v35|DWORD] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [v23|DWORD] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [v63|QWORD[.]] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [int[0|0x0]] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [v75|DWORD] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE (input: v96|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [v17|DWORD] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [v55|QWORD[.]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [v12|DWORD] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [v61|QWORD[.]] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [v53|QWORD[.]] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [int[-96795|0xfffffffffffe85e5], long[0|0x0]] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [int[-94235|0xfffffffffffe8fe5], long[0|0x0]] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [int[-137491|0xfffffffffffde6ed], long[1940|0x794]] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [int[-90907|0xfffffffffffe9ce5], long[0|0x0]] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [int[-70939|0xfffffffffffeeae5], long[0|0x0]] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [int[-85275|0xfffffffffffeb2e5], long[0|0x0]] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [int[-138515|0xfffffffffffde2ed], long[3220|0xc94]] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [int[-81947|0xfffffffffffebfe5], long[0|0x0]] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [int[-87579|0xfffffffffffea9e5], long[0|0x0]] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v14|q [0, 1[[144, 148[[920, 921[[1124, 1126[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1322[[1346, 1348[[1374, 1376[ "NoOptimization"
  rcx|- fixed "[rcx|-]" rcx|- v50|q [0, 32[[146, 147[[918, 921[[1124, 1125[[1238, 1241[[1246, 1249[[1278, 1279[ "NoOptimization"
  rdx|- fixed "[rdx|-]" rdx|- v2|d [0, 30[[146, 147[[916, 921[[1122, 1125[[1236, 1241[[1244, 1249[[1278, 1279[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- v13|q [0, 1[[142, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 24[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v1|q [0, 28[[140, 147[[914, 921[[1120, 1125[[1234, 1241[[1242, 1249[[1276, 1279[[1318, 1320[[1344, 1346[[1372, 1374[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 34[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[[1320, 1321[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[146, 147[[920, 921[[1124, 1125[[1240, 1241[[1248, 1249[[1278, 1279[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [28, 110[28 MustHaveRegister 36 MustHaveRegister  "StoreAtDefinition"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [30, 140[[152, 192[[1080, 1122[[1282, 1318[[1580, 1601[30 MustHaveRegister 102 MustHaveRegister 140 ShouldHaveRegister 166 MustHaveRegister 1122 ShouldHaveRegister 1318 ShouldHaveRegister  "NoSpillStore"
  v2|d DWORD "[rcx|d]" v2|d rcx|- [32, 110[32 MustHaveRegister  "OneSpillStore"
  v3|d DWORD "[r8|d]" v3|d r8|- [34, 110[34 MustHaveRegister  "StoreAtDefinition"
  v4|d DWORD "[r10|d]" v4|d -1 [36, 40[[50, 62[[1080, 1118[36 MustHaveRegister 38 MustHaveRegister 60 ShouldHaveRegister 1090 ShouldHaveRegister 1118 MustHaveRegister  "NoSpillStore"
  v5|d DWORD "[rbx|d]" v5|d -1 [102, 106[102 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rbx|q]" v6|q v5|d [106, 136[106 MustHaveRegister 108 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rax|q]" v7|q -1 [104, 107[104 MustHaveRegister 106 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[rsi|q]" v8|q -1 [166, 186[166 MustHaveRegister 168 MustHaveRegister 186 MustHaveRegister  "NoSpillStore"
  v9|q QWORD "[rcx|q]" v9|q v8|q [168, 170[168 MustHaveRegister 170 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[rsi|q]" v10|q v8|q [186, 188[186 MustHaveRegister 188 ShouldHaveRegister  "NoSpillStore"
  v11|d DWORD "[rsi|d]" v11|d -1 [188, 201[188 MustHaveRegister 190 MustHaveRegister 200 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[rax|d]" v12|d rax|q [1322, 1325[1322 MustHaveRegister 1324 ShouldHaveRegister  "NoSpillStore"
  v13|q QWORD "[rbx|q]" v13|q -1 [136, 142[136 MustHaveRegister 138 MustHaveRegister 142 ShouldHaveRegister  "NoSpillStore"
  v14|q QWORD "[rax|q]" v14|q -1 [138, 144[138 MustHaveRegister 144 ShouldHaveRegister  "NoSpillStore"
  v15|d DWORD "[rax|d]" v15|d rax|q [148, 151[148 MustHaveRegister 150 ShouldHaveRegister  "NoSpillStore"
  v16|q QWORD "[r10|q]" v16|q v4|d [1118, 1120[1118 MustHaveRegister 1120 ShouldHaveRegister  "NoSpillStore"
  v17|d DWORD "[rax|d]" v17|d rax|q [1126, 1129[1126 MustHaveRegister 1128 ShouldHaveRegister  "NoSpillStore"
  v18|d DWORD "[rax|d]" v18|d v15|d [202, 264[[622, 648[[1392, 1413[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v19|d DWORD "[r10|d]" v19|d -1 [220, 520[[560, 776[[1326, 1354[220 MustHaveRegister 222 MustHaveRegister 464 MustHaveRegister 776 MustHaveRegister  "NoSpillStore"
  v20|d DWORD "[rdx|d]" v20|d -1 [222, 364[[390, 424[[560, 670[222 MustHaveRegister 228 ShouldHaveRegister 274 ShouldHaveRegister 346 MustHaveRegister 362 ShouldHaveRegister 424 ShouldHaveRegister 594 ShouldHaveRegister 632 ShouldHaveRegister  "NoSpillStore"
  v21|d DWORD "[rcx|d]" v21|d -1 [224, 386[[390, 444[[560, 670[224 MustHaveRegister 226 MustHaveRegister 298 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 444 MustHaveRegister 612 MustHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v22|d DWORD "[r11|d]" v22|d -1 [226, 374[[390, 412[[560, 670[226 MustHaveRegister 238 ShouldHaveRegister 286 MustHaveRegister 374 MustHaveRegister 400 MustHaveRegister 412 MustHaveRegister 570 MustHaveRegister 582 MustHaveRegister 644 ShouldHaveRegister  "NoSpillStore"
  v23|d DWORD "[r8|d]" v23|d v22|d [644, 647[644 MustHaveRegister 646 ShouldHaveRegister  "NoSpillStore"
  v24|d DWORD "[r8|d]" v24|d v23|d [240, 288[[560, 596[[1382, 1392[[1414, 1465[266 ShouldHaveRegister  "NoSpillStore"
  v25|d DWORD "[r9|d]" v25|d v18|d [262, 264[262 MustHaveRegister 264 ShouldHaveRegister  "NoSpillStore"
  v26|d DWORD "[rax|d]" v26|d v18|d [264, 288[[560, 596[[1382, 1392[[1414, 1465[264 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v27|d DWORD "[r9|d]" v27|d v24|d [266, 268[266 MustHaveRegister 268 ShouldHaveRegister  "NoSpillStore"
  v28|d DWORD "[r9|d]" v28|d v26|d [268, 386[[390, 426[[560, 622[[648, 670[[1466, 1486[[1496, 1516[[1548, 1579[268 MustHaveRegister 270 ShouldHaveRegister 286 ShouldHaveRegister 298 MustHaveRegister 374 ShouldHaveRegister 386 MustHaveRegister  "NoSpillStore"
  v29|d DWORD "[rbx|d]" v29|d v28|d [270, 364[[390, 440[[560, 622[[648, 670[270 MustHaveRegister 272 ShouldHaveRegister 400 ShouldHaveRegister 440 MustHaveRegister 570 ShouldHaveRegister 616 MustHaveRegister  "NoSpillStore"
  v30|d DWORD "[rdi|d]" v30|d v29|d [272, 364[[390, 444[[560, 622[[648, 670[272 MustHaveRegister 412 ShouldHaveRegister 444 MustHaveRegister 582 ShouldHaveRegister 612 MustHaveRegister  "NoSpillStore"
  v31|d DWORD "[r8|d]" v31|d v36|d [298, 301[298 MustHaveRegister 300 ShouldHaveRegister  "NoSpillStore"
  v32|d DWORD "[r8|d]" v32|d -1 [612, 614[612 MustHaveRegister 614 MustHaveRegister  "NoSpillStore"
  v33|d DWORD "[r8|d]" v33|d v32|d [614, 618[614 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v34|d DWORD "[rax|d]" v34|d -1 [616, 618[616 MustHaveRegister 618 ShouldHaveRegister  "NoSpillStore"
  v35|d DWORD "[r8|d]" v35|d v33|d [618, 621[618 MustHaveRegister 620 ShouldHaveRegister  "NoSpillStore"
  v36|d DWORD "[r8|d]" v36|d v31|d [302, 518[[648, 670[312 MustHaveRegister 340 ShouldHaveRegister 518 MustHaveRegister  "NoSpillStore"
  v37|d DWORD "[rbp|d]" v37|d v36|d [340, 520[[670, 874[[1130, 1238[[1326, 1382[[1466, 1547[[1548, 1579[340 MustHaveRegister 774 MustHaveRegister 1238 ShouldHaveRegister  "NoSpillStore"
  v38|d DWORD "[rax|d]" v38|d v2|d [342, 344[342 MustHaveRegister 344 ShouldHaveRegister  "NoSpillStore"
  v39|d DWORD "[r13|d]" v39|d v38|d [344, 520[[670, 884[[924, 1074[[1326, 1354[344 MustHaveRegister 346 ShouldHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v40|d DWORD "[rax|d]" v40|d v2|d [360, 386[[390, 442[360 MustHaveRegister 386 MustHaveRegister 440 MustHaveRegister 442 MustHaveRegister  "NoSpillStore"
  v41|d DWORD "[rax|d]" v41|d v40|d [442, 444[442 MustHaveRegister 444 MustHaveRegister  "NoSpillStore"
  v42|q QWORD "[r11|q]" v42|q v19|d [464, 520[[670, 884[[924, 1074[[1326, 1354[464 MustHaveRegister 466 MustHaveRegister 1068 MustHaveRegister 1072 MustHaveRegister 1074 MustHaveRegister  "NoSpillStore"
  v43|d DWORD "[r9|d]" v43|d -1 [466, 532[[670, 772[[884, 910[[1130, 1230[[1326, 1382[466 MustHaveRegister 468 MustHaveRegister 486 MustHaveRegister 772 MustHaveRegister 910 MustHaveRegister 1230 MustHaveRegister  "NoSpillStore"
  v44|d DWORD "[rdx|d]" v44|d -1 [486, 490[486 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v45|q QWORD "[rdx|q]" v45|q v44|d [490, 493[490 MustHaveRegister 492 ShouldHaveRegister  "NoSpillStore"
  v46|q QWORD "[rcx|q]" v46|q -1 [488, 491[488 MustHaveRegister 490 MustHaveRegister  "NoSpillStore"
  v47|q QWORD "[rdx|q]" v47|q v45|q [504, 530[[670, 680[530 ShouldHaveRegister 680 ShouldHaveRegister  "NoSpillStore"
  v48|q QWORD "[rcx|q]" v48|q -1 [516, 530[[670, 874[[934, 944[[1130, 1154[[1326, 1372[516 MustHaveRegister 530 MustHaveRegister 680 MustHaveRegister 788 MustHaveRegister 812 MustHaveRegister 944 MustHaveRegister 1344 ShouldHaveRegister 1372 ShouldHaveRegister  "NoSpillStore"
  v49|d DWORD "[rdx|d]" v49|d -1 [910, 912[910 MustHaveRegister 912 MustHaveRegister  "NoSpillStore"
  v50|q QWORD "[rcx|q]" v50|q v49|d [912, 918[912 MustHaveRegister 918 ShouldHaveRegister  "NoSpillStore"
  v51|q QWORD "[rsi|q]" v51|q -1 [1148, 1188[1148 MustHaveRegister 1150 MustHaveRegister 1178 MustHaveRegister 1180 MustHaveRegister 1182 MustHaveRegister 1184 MustHaveRegister 1186 MustHaveRegister 1188 ShouldHaveRegister  "NoSpillStore"
  v52|q QWORD "[rdx|q]" v52|q -1 [1150, 1176[1150 MustHaveRegister 1152 MustHaveRegister 1176 MustHaveRegister  "NoSpillStore"
  v53|q QWORD "[rax|q]" v53|q rax|q [1376, 1381[1376 MustHaveRegister 1378 MustHaveRegister 1380 ShouldHaveRegister  "NoSpillStore"
  v55|q QWORD "[rsi|q]" v55|q v51|q [1188, 1191[1188 MustHaveRegister 1190 ShouldHaveRegister  "NoSpillStore"
  v56|q QWORD "[rsi|q]" v56|q v55|q [1192, 1233[ "OneSpillStore"
  v57|d DWORD "[rdx|d]" v57|d -1 [1230, 1232[1230 MustHaveRegister 1232 MustHaveRegister  "NoSpillStore"
  v58|q QWORD "[rdx|q]" v58|q v57|d [1232, 1236[1232 MustHaveRegister 1236 ShouldHaveRegister  "NoSpillStore"
  v59|q QWORD "[rdx|q]" v59|q -1 [700, 740[700 MustHaveRegister 702 MustHaveRegister 730 MustHaveRegister 732 MustHaveRegister 734 MustHaveRegister 736 MustHaveRegister 738 MustHaveRegister 740 ShouldHaveRegister  "NoSpillStore"
  v60|q QWORD "[r8|q]" v60|q -1 [702, 728[702 MustHaveRegister 704 MustHaveRegister 728 MustHaveRegister  "NoSpillStore"
  v61|q QWORD "[rax|q]" v61|q rax|q [1348, 1353[1348 MustHaveRegister 1350 MustHaveRegister 1352 ShouldHaveRegister  "NoSpillStore"
  v63|q QWORD "[rdx|q]" v63|q v59|q [740, 743[740 MustHaveRegister 742 ShouldHaveRegister  "NoSpillStore"
  v64|q QWORD "[rdx|q]" v64|q v63|q [744, 884[[924, 1077[772 MustHaveRegister 774 MustHaveRegister 1070 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v65|d DWORD "[r10|d]" v65|d -1 [776, 780[776 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v66|q QWORD "[r10|q]" v66|q v65|d [780, 782[780 MustHaveRegister 782 MustHaveRegister  "NoSpillStore"
  v67|q QWORD "[r8|q]" v67|q -1 [778, 781[778 MustHaveRegister 780 MustHaveRegister  "NoSpillStore"
  v68|q QWORD "[r10|q]" v68|q -1 [782, 874[[934, 944[782 MustHaveRegister 784 MustHaveRegister 788 MustHaveRegister 812 ShouldHaveRegister 858 MustHaveRegister 873 LiveAtLoopEnd 944 MustHaveRegister  "NoSpillStore"
  v69|d DWORD "[r8|d]" v69|d -1 [784, 800[784 MustHaveRegister 786 ShouldHaveRegister 800 ShouldHaveRegister  "NoSpillStore"
  v70|q QWORD "[r9|q]" v70|q -1 [786, 788[786 MustHaveRegister 788 MustHaveRegister  "NoSpillStore"
  v71|q QWORD "[r8|q]" v71|q -1 [824, 874[824 MustHaveRegister 856 MustHaveRegister 873 LiveAtLoopEnd  "NoSpillStore"
  v72|d DWORD "[r9|d]" v72|d v75|d [828, 870[838 MustHaveRegister 854 ShouldHaveRegister 870 ShouldHaveRegister  "NoSpillStore"
  v73|q QWORD "[rbx|q]" v73|q -1 [854, 856[854 MustHaveRegister 856 MustHaveRegister  "NoSpillStore"
  v74|q QWORD "[rbx|q]" v74|q -1 [856, 858[856 MustHaveRegister 858 ShouldHaveRegister  "NoSpillStore"
  v75|d DWORD "[r9|d]" v75|d v72|d [870, 873[870 MustHaveRegister 872 ShouldHaveRegister  "NoSpillStore"
  v76|q QWORD "[rsi|q]" v76|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v77|q QWORD "[r10|q]" v77|q -1 [1068, 1069[1068 MustHaveRegister  "NoDefinitionFound"
  v78|d DWORD "[rsi|d]" v78|d v64|q [1070, 1072[1070 MustHaveRegister 1072 MustHaveRegister  "NoSpillStore"
  v79|q QWORD "[rsi|q]" v79|q -1 [1074, 1077[1074 MustHaveRegister 1076 MustHaveRegister  "NoSpillStore"
  v80|q QWORD "[r10|q]" v80|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v81|q QWORD "[r11|q]" v81|q -1 [1076, 1077[1076 MustHaveRegister  "NoDefinitionFound"
  v82|d DWORD "[r10|d]" v82|d -1 [1558, 1574[1574 MustHaveRegister  "NoSpillStore"
  v83|q QWORD "[r11|q]" v83|q -1 [1558, 1576[1576 MustHaveRegister  "NoSpillStore"
  v84|d DWORD "[r10|d]" v84|d -1 [1444, 1460[1460 MustHaveRegister  "NoSpillStore"
  v85|q QWORD "[r11|q]" v85|q -1 [1444, 1462[1462 MustHaveRegister  "NoSpillStore"
  v86|q QWORD "[vstack:0|q]" v0|q v0|q [110, 139[ "StoreAtDefinition"
  v87|d DWORD "[vstack:2|d]" v2|d v2|d [110, 145[ "OneSpillStore"
  v88|d DWORD "[vstack:3|d]" v3|d v3|d [110, 145[ "StoreAtDefinition"
  v89|q QWORD "[vstack:0|q]" v0|q v0|q [139, 145[ "StoreAtDefinition"
  v90|d DWORD "[vstack:2|d]" v2|d v2|d [145, 532[[560, 874[[884, 916[[1080, 1244[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[342 ShouldHaveRegister 360 ShouldHaveRegister 916 ShouldHaveRegister 1244 ShouldHaveRegister  "OneSpillStore"
  v91|d DWORD "[vstack:3|d]" v3|d v3|d [145, 314[[560, 648[ "StoreAtDefinition"
  v92|q QWORD "[vstack:0|q]" v0|q v0|q [145, 202[ "StoreAtDefinition"
  v93|q QWORD "[rsi|q]" v0|q v0|q [202, 532[[560, 874[[884, 914[[1080, 1092[220 MustHaveRegister 224 MustHaveRegister 914 ShouldHaveRegister  "StoreAtDefinition"
  v94|d DWORD "[rcx|d]" v2|d v2|d [1580, 1601[ "OneSpillStore"
  v95|d DWORD "[rax|d]" v3|d v3|d [648, 658[[1080, 1092[658 MustHaveRegister  "StoreAtDefinition"
  v96|q QWORD "[vstack:0|q]" v0|q v0|q [1092, 1119[ "StoreAtDefinition"
  v97|d DWORD "[vstack:3|d]" v3|d v3|d [1092, 1123[ "StoreAtDefinition"
  v98|q QWORD "[vstack:0|q]" v0|q v0|q [1119, 1123[ "StoreAtDefinition"
  v99|d DWORD "[vstack:3|d]" v3|d v3|d [1123, 1130[[1282, 1326[[1382, 1413[[1414, 1465[ "StoreAtDefinition"
  v100|q QWORD "[vstack:0|q]" v0|q v0|q [1123, 1242[[1252, 1276[[1282, 1413[[1414, 1465[[1466, 1547[[1548, 1579[1242 ShouldHaveRegister 1276 ShouldHaveRegister  "StoreAtDefinition"
  v101|q QWORD "[rsi|q]" v0|q v0|q [1580, 1601[ "StoreAtDefinition"
  v102|d DWORD "[r8|d]" v3|d v3|d [1580, 1601[ "StoreAtDefinition"
  v103|q QWORD "[r10|q]" v56|q v56|q [1233, 1239[1234 ShouldHaveRegister  "OneSpillStore"
  v104|q QWORD "[vstack:5|q]" v56|q v56|q [1239, 1246[1246 ShouldHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v88|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[.] = STACKMOVE (input: v86|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = STACKMOVE (input: v88|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = STACKMOVE (input: v89|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v91|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v92|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [v18|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [v24|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [v36|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [v47|QWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [v64|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [v72|DWORD] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v97|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v98|QWORD[.] = STACKMOVE (input: v96|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|DWORD = STACKMOVE (input: v97|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = STACKMOVE (input: v98|QWORD[.], ~backupSlot: vstack:1|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [v56|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] // MoveResolver resolve mapping <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] // MoveResolver resolve mapping <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [v84|DWORD, v85|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v100|QWORD[.] = MOVE input: v93|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [v82|DWORD, v83|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v90|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   30  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   32  <|@ instruction v2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction v3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction v4|DWORD[_] = MOV input: [v0|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: v4|DWORD[_], y: v4|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: v0|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v5|DWORD = MOV input: [v1|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction v7|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction v6|QWORD = UNCOMPRESSPOINTER (input: v5|DWORD, ~baseRegister: v7|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: v6|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v87|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction v13|QWORD = MOV input: [v6|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction v14|QWORD = MOV input: [v13|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr  142  <|@ instruction rbx|QWORD = MOVE input: v13|QWORD moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rax|QWORD = MOVE input: v14|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = STACKMOVE (input: v87|DWORD, ~backupSlot: vstack:4|QWORD) scratch: rax // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  148  <|@ instruction v15|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction v8|QWORD = MOV input: [v1|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction v9|QWORD = AND x: v8|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: v9|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction v10|QWORD = SHR x: v8|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction v11|DWORD = MOV value: v10|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: v11|DWORD, y: v11|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = MOVE input: v11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v92|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction v19|DWORD[_] = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v20|DWORD = MOV input: [v19|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction v21|DWORD[_] = MOV input: [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction v22|DWORD = MOV input: [v21|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|DWORD = MOVE input: v22|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction v25|DWORD = SHR x: v18|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction v26|DWORD = XOR (x: v18|DWORD, y: v25|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction v27|DWORD = DEC value: v24|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction v28|DWORD = AND (x: v26|DWORD, y: v27|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction v29|DWORD = SHL value: v28|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction v30|DWORD = INC value: v29|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction v31|DWORD = MOVZXB input: [v28|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction v37|DWORD = DEC value: v36|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction v38|DWORD = SHL value: v2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction v39|DWORD = INC value: v38|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: v20|DWORD, y: v39|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction v40|DWORD = INC value: v2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v28|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [v28|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [v29|DWORD + v21|DWORD[_] * 8 + 16], y: v40|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction v41|DWORD = SAR x: v40|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [v30|DWORD + v21|DWORD[_] * 8 + 16], y: reinterpret: v41|DWORD as: BYTE) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction v42|QWORD[.] = UNCOMPRESSPOINTER (input: v19|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction v43|DWORD[_] = MOV input: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: v43|DWORD[_], y: v43|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction v44|DWORD = MOV input: [v43|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction v46|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction v45|QWORD = UNCOMPRESSPOINTER (input: v44|DWORD, ~baseRegister: v46|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction v48|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: v36|DWORD, y: v36|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v29|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: v22|DWORD, y: v30|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction v32|DWORD = MOVZXB input: [v30|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction v33|DWORD = SHL x: v32|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction v34|DWORD = MOVZXB input: [v29|DWORD + v21|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction v35|DWORD = OR (x: v33|DWORD, y: v34|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: v20|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction v23|DWORD = SHR value: v22|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v91|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: v3|DWORD, y: v3|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v47|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction v59|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction v60|QWORD = LEA address: [v59|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: v60|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: v60|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [v59|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [v59|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [v59|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [v59|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [v59|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction v63|QWORD[.] = MOVE input: v59|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [v64|QWORD[.] + 16], y: v43|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [v64|QWORD[.] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction v65|DWORD = MOV input: [v19|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction v67|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction v66|QWORD = UNCOMPRESSPOINTER (input: v65|DWORD, ~baseRegister: v67|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction v68|QWORD = MOV input: [v66|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction v69|DWORD = MOV input: [v68|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction v70|QWORD = MOVSXD value: v69|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: v68|QWORD, y: [v48|QWORD + v70|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: v69|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: v48|QWORD, y: v68|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction v71|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: v72|DWORD, y: v72|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction v73|QWORD = MOVSXD value: v72|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction v74|QWORD = MOV input: [v71|QWORD + v73|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: v68|QWORD, y: v74|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction v75|DWORD = INC value: v72|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction v49|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction v50|QWORD[.] = UNCOMPRESSPOINTER (input: v49|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  914  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr  918  <|@ instruction rcx|QWORD[.] = MOVE input: v50|QWORD[.] moveKind: QWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [v48|QWORD + 32], y: v68|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v42|QWORD[.] + v39|DWORD * 4 + 16], ~expectedObject: -) {temp: v76|QWORD, temp2: v77|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction v78|DWORD[_] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [v42|QWORD[.] + v39|DWORD * 4 + 16], y: v78|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction v79|QWORD[.+] = LEA address: [v42|QWORD[.] + v39|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v79|QWORD[.+], ~newValue: v64|QWORD[.]) {temp: v80|QWORD, temp2: v81|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v95|DWORD = MOVE input: v3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v90|DWORD = MOVE input: v2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: v4|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction v16|QWORD[.] = UNCOMPRESSPOINTER (input: v4|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: v16|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1122  <|@ instruction rdx|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr 1126  <|@ instruction v17|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction v51|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction v52|QWORD = LEA address: [v51|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: v52|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: v52|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [v51|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [v51|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [v51|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [v51|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [v51|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction v55|QWORD[.] = MOVE input: v51|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction v57|DWORD[_] = MOV input: [v43|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction v58|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1236  <|@ instruction rdx|QWORD[.] = MOVE input: v58|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: v37|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = MOVE input: v103|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: v0|QWORD[.] v2|DWORD v56|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: v2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: v56|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: v0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr 1322  <|@ instruction v12|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1348  <|@ instruction v61|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v61|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE input: v61|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = MOVE input: v100|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: v48|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1376  <|@ instruction v53|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction NULLCHECK address: [v53|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction v56|QWORD[.] = MOVE input: v53|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] // MoveResolver resolve mapping <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: v0|QWORD[.] - v18|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v85|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] // MoveResolver resolve mapping <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v84|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v85|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: v26|DWORD v24|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: v0|QWORD[.] - v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: v0|QWORD[.] - v2|DWORD - - v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction <deleted> <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v82|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v83|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: v0|QWORD[.] - v2|DWORD - v28|DWORD v37|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVE input: v95|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = MOVE input: v90|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SHL value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = INC value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: vstack:0|QWORD[.] vstack:2|DWORD vstack:5|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] // MoveResolver resolve mapping <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: vstack:0|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] // MoveResolver resolve mapping <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   -1  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD // LSRAEliminateSpillMove: store at definition <|@ <|@
      nr   36  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   38  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   40  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction NOP <|@ <|@
      nr   46  <|@ instruction NOP <|@ <|@
      nr   48  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   50  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   62  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   72  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  104  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  106  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  108  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  138  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  140  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  150  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  168  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  170  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  188  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  190  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  200  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  202  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  222  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  224  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  226  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  228  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  230  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  238  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  264  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  268  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  270  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  272  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  274  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  314  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  342  <|@ instruction rax|DWORD = SHL value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  344  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  346  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  348  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction rax|DWORD = INC value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  362  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  402  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  442  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  444  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  446  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  450  <|@ instruction NOP <|@ <|@
      nr  452  <|@ instruction NOP <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction NOP <|@ <|@
      nr  462  <|@ instruction NOP <|@ <|@
      nr  464  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  466  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  468  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  470  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction NOP <|@ <|@
      nr  478  <|@ instruction NOP <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  488  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  490  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  492  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE input: Object[null] // MoveResolver resolve mapping <|@ <|@
      nr  502  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  518  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  522  <|@ instruction NOP <|@ <|@
      nr  524  <|@ instruction NOP <|@ <|@
      nr  526  <|@ instruction NOP <|@ <|@
      nr  528  <|@ instruction NOP <|@ <|@
      nr  530  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  532  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction NOP <|@ <|@
      nr  540  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  542  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction NOP <|@ <|@
      nr  550  <|@ instruction NOP <|@ <|@
      nr  552  <|@ instruction NOP <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  562  <|@ instruction NOP <|@ <|@
      nr  564  <|@ instruction NOP <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  572  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  574  <|@ instruction NOP <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  584  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction NOP <|@ <|@
      nr  592  <|@ instruction NOP <|@ <|@
      nr  594  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  596  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  598  <|@ instruction NOP <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction NOP <|@ <|@
      nr  612  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  614  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  616  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  618  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  620  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  622  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  624  <|@ instruction NOP <|@ <|@
      nr  626  <|@ instruction NOP <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  636  <|@ instruction NOP <|@ <|@
      nr  638  <|@ instruction NOP <|@ <|@
      nr  640  <|@ instruction NOP <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  646  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  648  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr  650  <|@ instruction NOP <|@ <|@
      nr  652  <|@ instruction NOP <|@ <|@
      nr  654  <|@ instruction NOP <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction NOP <|@ <|@
      nr  666  <|@ instruction NOP <|@ <|@
      nr  668  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction NOP <|@ <|@
      nr  678  <|@ instruction NOP <|@ <|@
      nr  680  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  682  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction NOP <|@ <|@
      nr  690  <|@ instruction NOP <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  702  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr  704  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr  706  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  708  <|@ instruction NOP <|@ <|@
      nr  710  <|@ instruction NOP <|@ <|@
      nr  712  <|@ instruction NOP <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr  730  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr  732  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr  734  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  736  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  738  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  740  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr  742  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  746  <|@ instruction NOP <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction NOP <|@ <|@
      nr  764  <|@ instruction NOP <|@ <|@
      nr  766  <|@ instruction NOP <|@ <|@
      nr  768  <|@ instruction NOP <|@ <|@
      nr  770  <|@ instruction NOP <|@ <|@
      nr  772  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr  774  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  776  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  778  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  780  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  782  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr  784  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr  786  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr  788  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction NOP <|@ <|@
      nr  798  <|@ instruction NOP <|@ <|@
      nr  800  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  814  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr   -1  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr  826  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  828  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  830  <|@ instruction NOP <|@ <|@
      nr  832  <|@ instruction NOP <|@ <|@
      nr  834  <|@ instruction NOP <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr  840  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  842  <|@ instruction NOP <|@ <|@
      nr  844  <|@ instruction NOP <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr  856  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr  858  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr  860  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  876  <|@ instruction NOP <|@ <|@
      nr  878  <|@ instruction NOP <|@ <|@
      nr  880  <|@ instruction NOP <|@ <|@
      nr  882  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction NOP <|@ <|@
      nr  900  <|@ instruction NOP <|@ <|@
      nr  902  <|@ instruction NOP <|@ <|@
      nr  904  <|@ instruction NOP <|@ <|@
      nr  906  <|@ instruction NOP <|@ <|@
      nr  908  <|@ instruction NOP <|@ <|@
      nr  910  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  912  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  916  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  920  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  922  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction NOP <|@ <|@
      nr  932  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr  934  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  936  <|@ instruction NOP <|@ <|@
      nr  938  <|@ instruction NOP <|@ <|@
      nr  940  <|@ instruction NOP <|@ <|@
      nr  942  <|@ instruction NOP <|@ <|@
      nr  944  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr  946  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr  948  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction NOP <|@ <|@
      nr  986  <|@ instruction NOP <|@ <|@
      nr  988  <|@ instruction NOP <|@ <|@
      nr  990  <|@ instruction NOP <|@ <|@
      nr  992  <|@ instruction NOP <|@ <|@
      nr  994  <|@ instruction NOP <|@ <|@
      nr  996  <|@ instruction NOP <|@ <|@
      nr  998  <|@ instruction NOP <|@ <|@
      nr 1000  <|@ instruction NOP <|@ <|@
      nr 1002  <|@ instruction NOP <|@ <|@
      nr 1004  <|@ instruction NOP <|@ <|@
      nr 1006  <|@ instruction NOP <|@ <|@
      nr 1008  <|@ instruction NOP <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction NOP <|@ <|@
      nr 1028  <|@ instruction NOP <|@ <|@
      nr 1030  <|@ instruction NOP <|@ <|@
      nr 1032  <|@ instruction NOP <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction NOP <|@ <|@
      nr 1052  <|@ instruction NOP <|@ <|@
      nr 1054  <|@ instruction NOP <|@ <|@
      nr 1056  <|@ instruction NOP <|@ <|@
      nr 1058  <|@ instruction NOP <|@ <|@
      nr 1060  <|@ instruction NOP <|@ <|@
      nr 1062  <|@ instruction NOP <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1070  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1072  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1076  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1078  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction NOP <|@ <|@
      nr 1086  <|@ instruction NOP <|@ <|@
      nr 1088  <|@ instruction NOP <|@ <|@
      nr 1090  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr 1092  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1094  <|@ instruction NOP <|@ <|@
      nr 1096  <|@ instruction NOP <|@ <|@
      nr 1098  <|@ instruction NOP <|@ <|@
      nr 1100  <|@ instruction NOP <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1120  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1124  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1128  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1130  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1132  <|@ instruction NOP <|@ <|@
      nr 1134  <|@ instruction NOP <|@ <|@
      nr 1136  <|@ instruction NOP <|@ <|@
      nr 1138  <|@ instruction NOP <|@ <|@
      nr 1140  <|@ instruction NOP <|@ <|@
      nr 1142  <|@ instruction NOP <|@ <|@
      nr 1144  <|@ instruction NOP <|@ <|@
      nr 1146  <|@ instruction NOP <|@ <|@
      nr 1148  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1150  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 1152  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1156  <|@ instruction NOP <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction NOP <|@ <|@
      nr 1168  <|@ instruction NOP <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1178  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr 1180  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1182  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1184  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1186  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1188  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr 1192  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction NOP <|@ <|@
      nr 1202  <|@ instruction NOP <|@ <|@
      nr 1204  <|@ instruction NOP <|@ <|@
      nr 1206  <|@ instruction NOP <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction NOP <|@ <|@
      nr 1218  <|@ instruction NOP <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr 1232  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1234  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: vstack:0|QWORD[.] vstack:2|DWORD vstack:5|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr 1242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1244  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1248  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction NOP <|@ <|@
      nr 1264  <|@ instruction NOP <|@ <|@
      nr 1266  <|@ instruction NOP <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction NOP <|@ <|@
      nr 1276  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1278  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1280  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr 1282  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr 1292  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr 1302  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1324  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1326  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1346  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1350  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1352  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr 1354  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1374  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1378  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr 1380  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1382  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] // MoveResolver resolve mapping <|@ <|@
      nr 1390  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1392  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction NOP <|@ <|@
      nr 1398  <|@ instruction NOP <|@ <|@
      nr 1400  <|@ instruction NOP <|@ <|@
      nr 1402  <|@ instruction NOP <|@ <|@
      nr 1404  <|@ instruction NOP <|@ <|@
      nr 1406  <|@ instruction NOP <|@ <|@
      nr 1408  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1410  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1412  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: vstack:0|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] // MoveResolver resolve mapping <|@ <|@
      nr 1422  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1424  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1426  <|@ instruction NOP <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] // MoveResolver resolve mapping <|@ <|@
      nr 1432  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1434  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1436  <|@ instruction NOP <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] // MoveResolver resolve mapping <|@ <|@
      nr 1442  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1444  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction NOP <|@ <|@
      nr 1454  <|@ instruction NOP <|@ <|@
      nr 1456  <|@ instruction NOP <|@ <|@
      nr 1458  <|@ instruction NOP <|@ <|@
      nr 1460  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1462  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1468  <|@ instruction NOP <|@ <|@
      nr 1470  <|@ instruction NOP <|@ <|@
      nr 1472  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] // MoveResolver resolve mapping <|@ <|@
      nr 1474  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1476  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction NOP <|@ <|@
      nr 1482  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] // MoveResolver resolve mapping <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1496  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1498  <|@ instruction NOP <|@ <|@
      nr 1500  <|@ instruction NOP <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] // MoveResolver resolve mapping <|@ <|@
      nr 1504  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1508  <|@ instruction NOP <|@ <|@
      nr 1510  <|@ instruction NOP <|@ <|@
      nr 1512  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] // MoveResolver resolve mapping <|@ <|@
      nr 1514  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction NOP <|@ <|@
      nr 1532  <|@ instruction NOP <|@ <|@
      nr 1534  <|@ instruction NOP <|@ <|@
      nr 1536  <|@ instruction NOP <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1544  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1546  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1548  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] // MoveResolver resolve mapping <|@ <|@
      nr 1556  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1560  <|@ instruction NOP <|@ <|@
      nr 1562  <|@ instruction NOP <|@ <|@
      nr 1564  <|@ instruction NOP <|@ <|@
      nr 1566  <|@ instruction NOP <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1576  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1578  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction NOP <|@ <|@
      nr 1590  <|@ instruction NOP <|@ <|@
      nr 1592  <|@ instruction NOP <|@ <|@
      nr 1594  <|@ instruction NOP <|@ <|@
      nr 1596  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr 1598  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr 1600  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction vstack:0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction vstack:3|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: vstack:2|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: vstack:3|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction vstack:2|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction vstack:5|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: vstack:0|QWORD[.] vstack:2|DWORD vstack:5|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: vstack:5|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: vstack:0|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: vstack:0|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: vstack:0|QWORD[.] - vstack:2|DWORD vstack:3|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: vstack:0|QWORD[.] - vstack:2|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: vstack:2|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [28, 1650[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[vstack:2|d]" vstack:2|d -1 [108, 1650[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[vstack:3|d]" vstack:3|d -1 [30, 1650[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[vstack:5|q]" vstack:5|q -1 [994, 1002[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:40|q]" vstack:0|q -1 [28, 1650[ "NOT_SUPPORTED"
  vstack:2|d DWORD "[stack:32|d]" vstack:2|d -1 [108, 1650[ "NOT_SUPPORTED"
  vstack:3|d DWORD "[stack:28|d]" vstack:3|d -1 [30, 1650[ "NOT_SUPPORTED"
  vstack:5|q QWORD "[stack:48|q]" vstack:5|q -1 [994, 1002[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  242  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  202  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  990  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  264  <|@ instruction r8|DWORD = MOVE input: rax|DWORD moveKind: DWORD <|@ <|@
      nr  266  <|@ instruction rcx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, r11:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [r9:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [rax:0, r9:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr   32  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   34  <|@ instruction TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B4" 
    xhandlers
    flags 
    probability 4605993955820171471
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B1" "B3" 
    successors "B5" "B11" 
    xhandlers
    flags 
    probability 4607086617347796097
    begin_IR
      LIR
      nr   68  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47]
locals: rsi|QWORD[.] Object[null] - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2] <|@ <|@
      nr  100  <|@ instruction rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  102  <|@ instruction rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  104  <|@ instruction AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B15" 
    xhandlers
    flags 
    probability 4603662938682496132
    begin_IR
      LIR
      nr  206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  208  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD <|@ <|@
      nr  236  <|@ instruction rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr  238  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2] <|@ <|@
      nr  244  <|@ instruction JUMP ~outgoingValues: [] destination: B11 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" "B8" "B11" "B10" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  324  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  320  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  344  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  346  <|@ instruction rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  348  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r10:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: rsi|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: rsi|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2] <|@ <|@
      nr  350  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B19" 
    xhandlers
    flags 
    probability 4606530941005636334
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD <|@ <|@
      nr  362  <|@ instruction JUMP ~outgoingValues: [] destination: B16 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B16" "B18" 
    successors "B20" "B23" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  390  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD <|@ <|@
      nr  414  <|@ instruction rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  416  <|@ instruction r9|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  418  <|@ instruction r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  420  <|@ instruction rbx|DWORD = SHL value: r9|DWORD size: DWORD <|@ <|@
      nr  422  <|@ instruction rdi|DWORD = INC value: rbx|DWORD size: DWORD <|@ <|@
      nr  424  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B21" "B22" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B27" 
    xhandlers
    flags 
    probability 4606520483790019457
    begin_IR
      LIR
      nr  438  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  450  <|@ instruction JUMP ~outgoingValues: [] destination: B21 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B21" "B26" 
    successors "B28" "B29" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  530  <|@ instruction NOP <|@ <|@
      nr  532  <|@ instruction NOP <|@ <|@
      nr  534  <|@ instruction NOP <|@ <|@
      nr  536  <|@ instruction NOP <|@ <|@
      nr  538  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B31" 
    xhandlers
    flags 
    probability 4606534193810532318
    begin_IR
      LIR
      nr  540  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  542  <|@ instruction NOP <|@ <|@
      nr  544  <|@ instruction NOP <|@ <|@
      nr  546  <|@ instruction NOP <|@ <|@
      nr  548  <|@ instruction JUMP ~outgoingValues: [] destination: B28 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B28" "B30" 
    successors "B32" "B73" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  574  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  576  <|@ instruction NOP <|@ <|@
      nr  578  <|@ instruction NOP <|@ <|@
      nr  580  <|@ instruction NOP <|@ <|@
      nr  582  <|@ instruction NOP <|@ <|@
      nr  584  <|@ instruction NOP <|@ <|@
      nr  586  <|@ instruction NOP <|@ <|@
      nr  588  <|@ instruction NOP <|@ <|@
      nr  590  <|@ instruction rbp|DWORD = DEC value: r8|DWORD size: DWORD <|@ <|@
      nr  592  <|@ instruction rax|DWORD = SHL value: stack:32|DWORD size: DWORD <|@ <|@
      nr  594  <|@ instruction r13|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr  596  <|@ instruction CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B33" "B36" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  598  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  600  <|@ instruction NOP <|@ <|@
      nr  602  <|@ instruction NOP <|@ <|@
      nr  604  <|@ instruction NOP <|@ <|@
      nr  606  <|@ instruction NOP <|@ <|@
      nr  608  <|@ instruction NOP <|@ <|@
      nr  610  <|@ instruction rax|DWORD = INC value: stack:32|DWORD size: DWORD <|@ <|@
      nr  612  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  614  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  616  <|@ instruction NOP <|@ <|@
      nr  618  <|@ instruction NOP <|@ <|@
      nr  620  <|@ instruction NOP <|@ <|@
      nr  622  <|@ instruction NOP <|@ <|@
      nr  624  <|@ instruction CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B40" 
    xhandlers
    flags 
    probability 4606306185285566565
    begin_IR
      LIR
      nr  626  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  628  <|@ instruction NOP <|@ <|@
      nr  630  <|@ instruction NOP <|@ <|@
      nr  632  <|@ instruction NOP <|@ <|@
      nr  634  <|@ instruction NOP <|@ <|@
      nr  636  <|@ instruction MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  638  <|@ instruction JUMP ~outgoingValues: [] destination: B34 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B34" "B39" 
    successors "B41" "B42" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  714  <|@ instruction NOP <|@ <|@
      nr  716  <|@ instruction NOP <|@ <|@
      nr  718  <|@ instruction NOP <|@ <|@
      nr  720  <|@ instruction NOP <|@ <|@
      nr  722  <|@ instruction NOP <|@ <|@
      nr  724  <|@ instruction NOP <|@ <|@
      nr  726  <|@ instruction NOP <|@ <|@
      nr  728  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  730  <|@ instruction r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  732  <|@ instruction TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4606234896718092978
    begin_IR
      LIR
      nr  746  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  748  <|@ instruction NOP <|@ <|@
      nr  750  <|@ instruction NOP <|@ <|@
      nr  752  <|@ instruction NOP <|@ <|@
      nr  754  <|@ instruction NOP <|@ <|@
      nr  756  <|@ instruction NOP <|@ <|@
      nr  758  <|@ instruction NOP <|@ <|@
      nr  760  <|@ instruction NOP <|@ <|@
      nr  762  <|@ instruction rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr  764  <|@ instruction rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr  766  <|@ instruction rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr  768  <|@ instruction JUMP ~outgoingValues: [] destination: B42 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" "B42" 
    successors "B44" "B47" 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  772  <|@ instruction NOP <|@ <|@
      nr  774  <|@ instruction NOP <|@ <|@
      nr  776  <|@ instruction NOP <|@ <|@
      nr  778  <|@ instruction NOP <|@ <|@
      nr  780  <|@ instruction NOP <|@ <|@
      nr  782  <|@ instruction rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>} <|@ <|@
      nr  784  <|@ instruction TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4606534206801753300
    begin_IR
      LIR
      nr  786  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  788  <|@ instruction NOP <|@ <|@
      nr  790  <|@ instruction NOP <|@ <|@
      nr  792  <|@ instruction NOP <|@ <|@
      nr  794  <|@ instruction NOP <|@ <|@
      nr  796  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4606388702329771977
    begin_IR
      LIR
      nr  834  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  836  <|@ instruction NOP <|@ <|@
      nr  838  <|@ instruction NOP <|@ <|@
      nr  840  <|@ instruction NOP <|@ <|@
      nr  842  <|@ instruction JUMP ~outgoingValues: [] destination: B46 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B51" "B66" "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 4607130416403961485
    begin_IR
      LIR
      nr 1408  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1410  <|@ instruction NOP <|@ <|@
      nr 1412  <|@ instruction NOP <|@ <|@
      nr 1414  <|@ instruction NOP <|@ <|@
      nr 1416  <|@ instruction NOP <|@ <|@
      nr 1418  <|@ instruction NOP <|@ <|@
      nr 1420  <|@ instruction NOP <|@ <|@
      nr 1422  <|@ instruction NOP <|@ <|@
      nr 1424  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4600518977248505849
    begin_IR
      LIR
      nr  106  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  108  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD <|@ <|@
      nr  124  <|@ instruction rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD <|@ <|@
      nr  126  <|@ instruction CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4600450503675199850
    begin_IR
      LIR
      nr  128  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|DWORD = MOV value: rsi|QWORD size: DWORD <|@ <|@
      nr  146  <|@ instruction TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B15" 
    xhandlers
    flags 
    probability 4600382714837626911
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD <|@ <|@
      nr  170  <|@ instruction JUMP ~outgoingValues: [] destination: B8 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" "B12" 
    xhandlers
    flags 
    probability 4593921872209919172
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" 
    xhandlers
    flags 
    probability 4593405712884161933
    begin_IR
      LIR
      nr   58  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B4 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" 
    successors "B43" 
    xhandlers
    flags 
    probability 4591828578150112982
    begin_IR
      LIR
      nr  734  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  736  <|@ instruction NOP <|@ <|@
      nr  738  <|@ instruction NOP <|@ <|@
      nr  740  <|@ instruction NOP <|@ <|@
      nr  742  <|@ instruction rdx|QWORD = MOVE input: Object[null] <|@ <|@
      nr  744  <|@ instruction JUMP ~outgoingValues: [] destination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B37" "B72" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  656  <|@ instruction NOP <|@ <|@
      nr  658  <|@ instruction NOP <|@ <|@
      nr  660  <|@ instruction NOP <|@ <|@
      nr  662  <|@ instruction NOP <|@ <|@
      nr  664  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" "B71" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  666  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  668  <|@ instruction NOP <|@ <|@
      nr  670  <|@ instruction NOP <|@ <|@
      nr  672  <|@ instruction NOP <|@ <|@
      nr  674  <|@ instruction NOP <|@ <|@
      nr  676  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" "B70" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  680  <|@ instruction NOP <|@ <|@
      nr  682  <|@ instruction NOP <|@ <|@
      nr  684  <|@ instruction NOP <|@ <|@
      nr  686  <|@ instruction NOP <|@ <|@
      nr  688  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B40" 
    xhandlers
    flags 
    probability 4591258269610324290
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  692  <|@ instruction NOP <|@ <|@
      nr  694  <|@ instruction NOP <|@ <|@
      nr  696  <|@ instruction NOP <|@ <|@
      nr  698  <|@ instruction NOP <|@ <|@
      nr  700  <|@ instruction NOP <|@ <|@
      nr  702  <|@ instruction NOP <|@ <|@
      nr  704  <|@ instruction MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE <|@ <|@
      nr  706  <|@ instruction rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD <|@ <|@
      nr  708  <|@ instruction MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE <|@ <|@
      nr  710  <|@ instruction JUMP ~outgoingValues: [] destination: B39 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B24" "B78" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  468  <|@ instruction NOP <|@ <|@
      nr  470  <|@ instruction NOP <|@ <|@
      nr  472  <|@ instruction NOP <|@ <|@
      nr  474  <|@ instruction NOP <|@ <|@
      nr  476  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B25" "B77" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  478  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  480  <|@ instruction NOP <|@ <|@
      nr  482  <|@ instruction NOP <|@ <|@
      nr  484  <|@ instruction NOP <|@ <|@
      nr  486  <|@ instruction NOP <|@ <|@
      nr  488  <|@ instruction CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B76" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  492  <|@ instruction NOP <|@ <|@
      nr  494  <|@ instruction NOP <|@ <|@
      nr  496  <|@ instruction NOP <|@ <|@
      nr  498  <|@ instruction NOP <|@ <|@
      nr  500  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" 
    xhandlers
    flags 
    probability 4589959900743148536
    begin_IR
      LIR
      nr  502  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  504  <|@ instruction NOP <|@ <|@
      nr  506  <|@ instruction NOP <|@ <|@
      nr  508  <|@ instruction NOP <|@ <|@
      nr  510  <|@ instruction NOP <|@ <|@
      nr  512  <|@ instruction NOP <|@ <|@
      nr  514  <|@ instruction NOP <|@ <|@
      nr  516  <|@ instruction NOP <|@ <|@
      nr  518  <|@ instruction r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  520  <|@ instruction r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD <|@ <|@
      nr  522  <|@ instruction rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction JUMP ~outgoingValues: [] destination: B26 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B80" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  364  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B19" 
    xhandlers
    flags 
    probability 4589876243018213520
    begin_IR
      LIR
      nr  376  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction r8|DWORD = SHR value: r11|DWORD size: DWORD <|@ <|@
      nr  388  <|@ instruction JUMP ~outgoingValues: [] destination: B18 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B27" 
    successors "B30" "B75" 
    xhandlers
    flags 
    probability 4589850220579045648
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  552  <|@ instruction rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD <|@ <|@
      nr  554  <|@ instruction NOP <|@ <|@
      nr  556  <|@ instruction NOP <|@ <|@
      nr  558  <|@ instruction NOP <|@ <|@
      nr  560  <|@ instruction NOP <|@ <|@
      nr  562  <|@ instruction TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" 
    xhandlers
    flags 
    probability 4589434201410598263
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  566  <|@ instruction NOP <|@ <|@
      nr  568  <|@ instruction NOP <|@ <|@
      nr  570  <|@ instruction NOP <|@ <|@
      nr  572  <|@ instruction JUMP ~outgoingValues: [] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B48" "B52" 
    xhandlers
    flags 
    probability 4589434097480830405
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  846  <|@ instruction NOP <|@ <|@
      nr  848  <|@ instruction NOP <|@ <|@
      nr  850  <|@ instruction NOP <|@ <|@
      nr  852  <|@ instruction NOP <|@ <|@
      nr  854  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1008  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1010  <|@ instruction NOP <|@ <|@
      nr 1012  <|@ instruction NOP <|@ <|@
      nr 1014  <|@ instruction NOP <|@ <|@
      nr 1016  <|@ instruction NOP <|@ <|@
      nr 1018  <|@ instruction NOP <|@ <|@
      nr 1020  <|@ instruction NOP <|@ <|@
      nr 1022  <|@ instruction NOP <|@ <|@
      nr 1024  <|@ instruction NOP <|@ <|@
      nr 1026  <|@ instruction rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr 1028  <|@ instruction r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD <|@ <|@
      nr 1030  <|@ instruction CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4588131298443700140
    begin_IR
      LIR
      nr 1062  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1064  <|@ instruction NOP <|@ <|@
      nr 1066  <|@ instruction NOP <|@ <|@
      nr 1068  <|@ instruction NOP <|@ <|@
      nr 1070  <|@ instruction NOP <|@ <|@
      nr 1072  <|@ instruction NOP <|@ <|@
      nr 1074  <|@ instruction NOP <|@ <|@
      nr 1076  <|@ instruction NOP <|@ <|@
      nr 1078  <|@ instruction NOP <|@ <|@
      nr 1080  <|@ instruction NOP <|@ <|@
      nr 1082  <|@ instruction NOP <|@ <|@
      nr 1084  <|@ instruction MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD <|@ <|@
      nr 1086  <|@ instruction AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0 <|@ <|@
      nr 1088  <|@ instruction MOV x: [rdx|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1090  <|@ instruction MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr 1092  <|@ instruction MOV x: [rdx|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr 1094  <|@ instruction MOV x: [rdx|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr 1096  <|@ instruction rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD <|@ <|@
      nr 1098  <|@ instruction JUMP ~outgoingValues: [] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1102  <|@ instruction NOP <|@ <|@
      nr 1104  <|@ instruction NOP <|@ <|@
      nr 1106  <|@ instruction NOP <|@ <|@
      nr 1108  <|@ instruction NOP <|@ <|@
      nr 1110  <|@ instruction NOP <|@ <|@
      nr 1112  <|@ instruction NOP <|@ <|@
      nr 1114  <|@ instruction NOP <|@ <|@
      nr 1116  <|@ instruction NOP <|@ <|@
      nr 1118  <|@ instruction NOP <|@ <|@
      nr 1120  <|@ instruction NOP <|@ <|@
      nr 1122  <|@ instruction NOP <|@ <|@
      nr 1124  <|@ instruction NOP <|@ <|@
      nr 1126  <|@ instruction NOP <|@ <|@
      nr 1128  <|@ instruction MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD <|@ <|@
      nr 1130  <|@ instruction MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 1132  <|@ instruction r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD <|@ <|@
      nr 1134  <|@ instruction r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000] <|@ <|@
      nr 1136  <|@ instruction r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0 <|@ <|@
      nr 1138  <|@ instruction r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD <|@ <|@
      nr 1140  <|@ instruction r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD <|@ <|@
      nr 1142  <|@ instruction r9|QWORD = MOVSXD value: r8|DWORD size: QWORD <|@ <|@
      nr 1144  <|@ instruction CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" "B68" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1156  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1158  <|@ instruction NOP <|@ <|@
      nr 1160  <|@ instruction NOP <|@ <|@
      nr 1162  <|@ instruction NOP <|@ <|@
      nr 1164  <|@ instruction NOP <|@ <|@
      nr 1166  <|@ instruction CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B59" "B60" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1168  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1170  <|@ instruction NOP <|@ <|@
      nr 1172  <|@ instruction NOP <|@ <|@
      nr 1174  <|@ instruction NOP <|@ <|@
      nr 1176  <|@ instruction NOP <|@ <|@
      nr 1178  <|@ instruction CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B61" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1190  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1192  <|@ instruction NOP <|@ <|@
      nr 1194  <|@ instruction NOP <|@ <|@
      nr 1196  <|@ instruction NOP <|@ <|@
      nr 1198  <|@ instruction NOP <|@ <|@
      nr 1200  <|@ instruction r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00] <|@ <|@
      nr 1202  <|@ instruction r9|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1204  <|@ instruction JUMP ~outgoingValues: [] destination: B60 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B64" "B63" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1218  <|@ instruction [] = LABEL alignment: 16 numbPhis: 0 label: ? <|@ <|@
      nr 1220  <|@ instruction NOP <|@ <|@
      nr 1222  <|@ instruction NOP <|@ <|@
      nr 1224  <|@ instruction NOP <|@ <|@
      nr 1226  <|@ instruction NOP <|@ <|@
      nr 1228  <|@ instruction NOP <|@ <|@
      nr 1230  <|@ instruction NOP <|@ <|@
      nr 1232  <|@ instruction rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD <|@ <|@
      nr 1234  <|@ instruction rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD <|@ <|@
      nr 1236  <|@ instruction CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B61" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4581695461868958562
    begin_IR
      LIR
      nr 1238  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1240  <|@ instruction NOP <|@ <|@
      nr 1242  <|@ instruction NOP <|@ <|@
      nr 1244  <|@ instruction NOP <|@ <|@
      nr 1246  <|@ instruction NOP <|@ <|@
      nr 1248  <|@ instruction r9|DWORD = INC value: r9|DWORD size: DWORD <|@ <|@
      nr 1250  <|@ instruction JUMP ~outgoingValues: [] destination: B63 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B62" "B65" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4585192688086239954
    begin_IR
      LIR
      nr 1206  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr 1208  <|@ instruction NOP <|@ <|@
      nr 1210  <|@ instruction NOP <|@ <|@
      nr 1212  <|@ instruction NOP <|@ <|@
      nr 1214  <|@ instruction NOP <|@ <|@
      nr 1216  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B66" 
    xhandlers
    flags 
    probability 4583708208689136772
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1148  <|@ instruction NOP <|@ <|@
      nr 1150  <|@ instruction NOP <|@ <|@
      nr 1152  <|@ instruction NOP <|@ <|@
      nr 1154  <|@ instruction JUMP ~outgoingValues: [] destination: B56 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B56" "B64" "B59" 
    successors "B67" 
    xhandlers
    flags 
    probability 4588211808316507268
    begin_IR
      LIR
      nr 1276  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1278  <|@ instruction NOP <|@ <|@
      nr 1280  <|@ instruction NOP <|@ <|@
      nr 1282  <|@ instruction NOP <|@ <|@
      nr 1284  <|@ instruction NOP <|@ <|@
      nr 1286  <|@ instruction NOP <|@ <|@
      nr 1288  <|@ instruction NOP <|@ <|@
      nr 1290  <|@ instruction NOP <|@ <|@
      nr 1292  <|@ instruction NOP <|@ <|@
      nr 1294  <|@ instruction NOP <|@ <|@
      nr 1296  <|@ instruction NOP <|@ <|@
      nr 1298  <|@ instruction NOP <|@ <|@
      nr 1300  <|@ instruction NOP <|@ <|@
      nr 1302  <|@ instruction NOP <|@ <|@
      nr 1304  <|@ instruction NOP <|@ <|@
      nr 1306  <|@ instruction NOP <|@ <|@
      nr 1308  <|@ instruction NOP <|@ <|@
      nr 1310  <|@ instruction NOP <|@ <|@
      nr 1312  <|@ instruction NOP <|@ <|@
      nr 1314  <|@ instruction NOP <|@ <|@
      nr 1316  <|@ instruction NOP <|@ <|@
      nr 1318  <|@ instruction NOP <|@ <|@
      nr 1320  <|@ instruction NOP <|@ <|@
      nr 1322  <|@ instruction NOP <|@ <|@
      nr 1324  <|@ instruction NOP <|@ <|@
      nr 1326  <|@ instruction NOP <|@ <|@
      nr 1328  <|@ instruction NOP <|@ <|@
      nr 1330  <|@ instruction NOP <|@ <|@
      nr 1332  <|@ instruction NOP <|@ <|@
      nr 1334  <|@ instruction NOP <|@ <|@
      nr 1336  <|@ instruction NOP <|@ <|@
      nr 1338  <|@ instruction NOP <|@ <|@
      nr 1340  <|@ instruction NOP <|@ <|@
      nr 1342  <|@ instruction NOP <|@ <|@
      nr 1344  <|@ instruction NOP <|@ <|@
      nr 1346  <|@ instruction NOP <|@ <|@
      nr 1348  <|@ instruction NOP <|@ <|@
      nr 1350  <|@ instruction NOP <|@ <|@
      nr 1352  <|@ instruction NOP <|@ <|@
      nr 1354  <|@ instruction NOP <|@ <|@
      nr 1356  <|@ instruction NOP <|@ <|@
      nr 1358  <|@ instruction NOP <|@ <|@
      nr 1360  <|@ instruction NOP <|@ <|@
      nr 1362  <|@ instruction NOP <|@ <|@
      nr 1364  <|@ instruction NOP <|@ <|@
      nr 1366  <|@ instruction NOP <|@ <|@
      nr 1368  <|@ instruction NOP <|@ <|@
      nr 1370  <|@ instruction NOP <|@ <|@
      nr 1372  <|@ instruction NOP <|@ <|@
      nr 1374  <|@ instruction NOP <|@ <|@
      nr 1376  <|@ instruction NOP <|@ <|@
      nr 1378  <|@ instruction NOP <|@ <|@
      nr 1380  <|@ instruction NOP <|@ <|@
      nr 1382  <|@ instruction NOP <|@ <|@
      nr 1384  <|@ instruction NOP <|@ <|@
      nr 1386  <|@ instruction NOP <|@ <|@
      nr 1388  <|@ instruction NOP <|@ <|@
      nr 1390  <|@ instruction NOP <|@ <|@
      nr 1392  <|@ instruction NOP <|@ <|@
      nr 1394  <|@ instruction NOP <|@ <|@
      nr 1396  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1398  <|@ instruction rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr 1400  <|@ instruction MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD <|@ <|@
      nr 1402  <|@ instruction rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr 1404  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51 <|@ <|@
      nr 1406  <|@ instruction JUMP ~outgoingValues: [] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580313364511826278
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  800  <|@ instruction NOP <|@ <|@
      nr  802  <|@ instruction NOP <|@ <|@
      nr  804  <|@ instruction NOP <|@ <|@
      nr  806  <|@ instruction NOP <|@ <|@
      nr  808  <|@ instruction NOP <|@ <|@
      nr  810  <|@ instruction NOP <|@ <|@
      nr  812  <|@ instruction NOP <|@ <|@
      nr  814  <|@ instruction NOP <|@ <|@
      nr  816  <|@ instruction NOP <|@ <|@
      nr  818  <|@ instruction NOP <|@ <|@
      nr  820  <|@ instruction NOP <|@ <|@
      nr  822  <|@ instruction NOP <|@ <|@
      nr  824  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  826  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  828  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr  830  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157] <|@ <|@
      nr  832  <|@ instruction JUMP ~outgoingValues: [] destination: B45 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1180  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1182  <|@ instruction NOP <|@ <|@
      nr 1184  <|@ instruction NOP <|@ <|@
      nr 1186  <|@ instruction NOP <|@ <|@
      nr 1188  <|@ instruction JUMP ~outgoingValues: [] destination: B59 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B66" 
    xhandlers
    flags 
    probability 4579204609061766276
    begin_IR
      LIR
      nr 1252  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1254  <|@ instruction NOP <|@ <|@
      nr 1256  <|@ instruction NOP <|@ <|@
      nr 1258  <|@ instruction NOP <|@ <|@
      nr 1260  <|@ instruction NOP <|@ <|@
      nr 1262  <|@ instruction MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD <|@ <|@
      nr 1264  <|@ instruction JUMP ~outgoingValues: [] destination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B13" "B14" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  248  <|@ instruction rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B15" 
    xhandlers
    flags 
    probability 4577284914723217368
    begin_IR
      LIR
      nr  288  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  316  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2] <|@ <|@
      nr  322  <|@ instruction JUMP ~outgoingValues: [] destination: B14 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  856  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  858  <|@ instruction NOP <|@ <|@
      nr  860  <|@ instruction NOP <|@ <|@
      nr  862  <|@ instruction NOP <|@ <|@
      nr  864  <|@ instruction NOP <|@ <|@
      nr  866  <|@ instruction NOP <|@ <|@
      nr  868  <|@ instruction NOP <|@ <|@
      nr  870  <|@ instruction NOP <|@ <|@
      nr  872  <|@ instruction NOP <|@ <|@
      nr  874  <|@ instruction rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr  876  <|@ instruction rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  878  <|@ instruction CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4577047552545341188
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  910  <|@ instruction NOP <|@ <|@
      nr  912  <|@ instruction NOP <|@ <|@
      nr  914  <|@ instruction NOP <|@ <|@
      nr  916  <|@ instruction NOP <|@ <|@
      nr  918  <|@ instruction NOP <|@ <|@
      nr  920  <|@ instruction NOP <|@ <|@
      nr  922  <|@ instruction NOP <|@ <|@
      nr  924  <|@ instruction NOP <|@ <|@
      nr  926  <|@ instruction NOP <|@ <|@
      nr  928  <|@ instruction NOP <|@ <|@
      nr  930  <|@ instruction MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  932  <|@ instruction AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0 <|@ <|@
      nr  934  <|@ instruction MOV x: [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  936  <|@ instruction MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed} <|@ <|@
      nr  938  <|@ instruction MOV x: [rsi|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  940  <|@ instruction MOV x: [rsi|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  942  <|@ instruction rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction JUMP ~outgoingValues: [] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B49" 
    successors "B67" 
    xhandlers
    flags 
    probability 4577107087199525913
    begin_IR
      LIR
      nr  946  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  948  <|@ instruction NOP <|@ <|@
      nr  950  <|@ instruction NOP <|@ <|@
      nr  952  <|@ instruction NOP <|@ <|@
      nr  954  <|@ instruction NOP <|@ <|@
      nr  956  <|@ instruction NOP <|@ <|@
      nr  958  <|@ instruction NOP <|@ <|@
      nr  960  <|@ instruction NOP <|@ <|@
      nr  962  <|@ instruction NOP <|@ <|@
      nr  964  <|@ instruction NOP <|@ <|@
      nr  966  <|@ instruction NOP <|@ <|@
      nr  968  <|@ instruction NOP <|@ <|@
      nr  970  <|@ instruction NOP <|@ <|@
      nr  972  <|@ instruction NOP <|@ <|@
      nr  974  <|@ instruction NOP <|@ <|@
      nr  976  <|@ instruction NOP <|@ <|@
      nr  978  <|@ instruction NOP <|@ <|@
      nr  980  <|@ instruction NOP <|@ <|@
      nr  982  <|@ instruction NOP <|@ <|@
      nr  984  <|@ instruction rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD <|@ <|@
      nr  986  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3 <|@ <|@
      nr  988  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  992  <|@ instruction rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ st <@st|@reference-map: [stack:16, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104]
stack: stack:40|QWORD[.] stack:32|DWORD stack:48|QWORD[.] 
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104] <|@ <|@
      nr  998  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1000  <|@ instruction rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD <|@ <|@
      nr 1002  <|@ instruction rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1004  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107] <|@ <|@
      nr 1006  <|@ instruction JUMP ~outgoingValues: [] destination: B51 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors 
    xhandlers
    flags 
    probability 4573306328848841096
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1538  <|@ instruction NOP <|@ <|@
      nr 1540  <|@ instruction NOP <|@ <|@
      nr 1542  <|@ instruction NOP <|@ <|@
      nr 1544  <|@ instruction NOP <|@ <|@
      nr 1546  <|@ instruction NOP <|@ <|@
      nr 1548  <|@ instruction NOP <|@ <|@
      nr 1550  <|@ instruction NOP <|@ <|@
      nr 1552  <|@ instruction NOP <|@ <|@
      nr 1554  <|@ instruction NOP <|@ <|@
      nr 1556  <|@ instruction NOP <|@ <|@
      nr 1558  <|@ instruction NOP <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1562  <|@ st <@st|@reference-map: []
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28]
locals: - - - - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28] <|@ <|@
      nr 1564  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570911039909480365
    begin_IR
      LIR
      nr  172  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction JUMP ~outgoingValues: [] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" 
    successors "B15" 
    xhandlers
    flags 
    probability 4575370816449935022
    begin_IR
      LIR
      nr  182  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  200  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48]
locals: stack:40|QWORD[.] - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2] <|@ <|@
      nr  204  <|@ instruction JUMP ~outgoingValues: [] destination: B10 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4570823393735648686
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction JUMP ~outgoingValues: [] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4558291855131227676
    begin_IR
      LIR
      nr 1032  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1034  <|@ instruction NOP <|@ <|@
      nr 1036  <|@ instruction NOP <|@ <|@
      nr 1038  <|@ instruction NOP <|@ <|@
      nr 1040  <|@ instruction NOP <|@ <|@
      nr 1042  <|@ instruction NOP <|@ <|@
      nr 1044  <|@ instruction NOP <|@ <|@
      nr 1046  <|@ instruction NOP <|@ <|@
      nr 1048  <|@ instruction NOP <|@ <|@
      nr 1050  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr 1052  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr 1054  <|@ st <@st|@reference-map: [rax:0, r9:0, r10:0, r11:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr 1056  <|@ instruction rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1060  <|@ instruction JUMP ~outgoingValues: [] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4547248860125104740
    begin_IR
      LIR
      nr  880  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  882  <|@ instruction NOP <|@ <|@
      nr  884  <|@ instruction NOP <|@ <|@
      nr  886  <|@ instruction NOP <|@ <|@
      nr  888  <|@ instruction NOP <|@ <|@
      nr  890  <|@ instruction NOP <|@ <|@
      nr  892  <|@ instruction NOP <|@ <|@
      nr  894  <|@ instruction NOP <|@ <|@
      nr  896  <|@ instruction NOP <|@ <|@
      nr  898  <|@ instruction rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD <|@ <|@
      nr  900  <|@ st <@st|@reference-map: [r9:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38] <|@ <|@
      nr  902  <|@ st <@st|@reference-map: [rax:0, r9:0, stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38] <|@ <|@
      nr  904  <|@ instruction rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~outgoingValues: [] destination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1502  <|@ instruction NOP <|@ <|@
      nr 1504  <|@ instruction NOP <|@ <|@
      nr 1506  <|@ instruction NOP <|@ <|@
      nr 1508  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1510  <|@ instruction r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5] <|@ <|@
      nr 1512  <|@ instruction JUMP ~outgoingValues: [] destination: B73 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" "B35" "B72" "B71" "B70" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1516  <|@ instruction NOP <|@ <|@
      nr 1518  <|@ instruction NOP <|@ <|@
      nr 1520  <|@ instruction NOP <|@ <|@
      nr 1522  <|@ instruction NOP <|@ <|@
      nr 1524  <|@ instruction NOP <|@ <|@
      nr 1526  <|@ instruction NOP <|@ <|@
      nr 1528  <|@ instruction NOP <|@ <|@
      nr 1530  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1532  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1534  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32]
locals: stack:40|QWORD[.] - stack:32|DWORD - r9|DWORD rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:32] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1582  <|@ instruction NOP <|@ <|@
      nr 1584  <|@ instruction NOP <|@ <|@
      nr 1586  <|@ instruction NOP <|@ <|@
      nr 1588  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1590  <|@ instruction r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5] <|@ <|@
      nr 1592  <|@ instruction JUMP ~outgoingValues: [] destination: B77 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B22" "B78" "B77" "B76" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr 1610  <|@ instruction NOP <|@ <|@
      nr 1612  <|@ instruction NOP <|@ <|@
      nr 1614  <|@ instruction NOP <|@ <|@
      nr 1616  <|@ instruction NOP <|@ <|@
      nr 1618  <|@ instruction NOP <|@ <|@
      nr 1620  <|@ instruction NOP <|@ <|@
      nr 1622  <|@ instruction NOP <|@ <|@
      nr 1624  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1626  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1628  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64]
stack: rax|DWORD r8|DWORD 
locals: - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:64, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1594  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1596  <|@ instruction NOP <|@ <|@
      nr 1598  <|@ instruction NOP <|@ <|@
      nr 1600  <|@ instruction NOP <|@ <|@
      nr 1602  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1604  <|@ instruction r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5] <|@ <|@
      nr 1606  <|@ instruction JUMP ~outgoingValues: [] destination: B78 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1460  <|@ instruction NOP <|@ <|@
      nr 1462  <|@ instruction NOP <|@ <|@
      nr 1464  <|@ instruction NOP <|@ <|@
      nr 1466  <|@ instruction r11|QWORD = MOVE input: long[3220|0xc94] <|@ <|@
      nr 1468  <|@ instruction r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed] <|@ <|@
      nr 1470  <|@ instruction JUMP ~outgoingValues: [] destination: B70 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1486  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1488  <|@ instruction NOP <|@ <|@
      nr 1490  <|@ instruction NOP <|@ <|@
      nr 1492  <|@ instruction NOP <|@ <|@
      nr 1494  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1496  <|@ instruction r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr 1498  <|@ instruction JUMP ~outgoingValues: [] destination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1568  <|@ instruction NOP <|@ <|@
      nr 1570  <|@ instruction NOP <|@ <|@
      nr 1572  <|@ instruction NOP <|@ <|@
      nr 1574  <|@ instruction r11|QWORD = MOVE input: long[1940|0x794] <|@ <|@
      nr 1576  <|@ instruction r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed] <|@ <|@
      nr 1578  <|@ instruction JUMP ~outgoingValues: [] destination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B20" 
    successors "B79" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  452  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  454  <|@ instruction NOP <|@ <|@
      nr  456  <|@ instruction NOP <|@ <|@
      nr  458  <|@ instruction NOP <|@ <|@
      nr  460  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  462  <|@ instruction r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5] <|@ <|@
      nr  464  <|@ instruction JUMP ~outgoingValues: [] destination: B22 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B61" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1268  <|@ instruction NOP <|@ <|@
      nr 1270  <|@ instruction NOP <|@ <|@
      nr 1272  <|@ instruction NOP <|@ <|@
      nr 1274  <|@ instruction JUMP ~outgoingValues: [] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" "B65" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 1436  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1438  <|@ instruction NOP <|@ <|@
      nr 1440  <|@ instruction NOP <|@ <|@
      nr 1442  <|@ instruction NOP <|@ <|@
      nr 1444  <|@ instruction NOP <|@ <|@
      nr 1446  <|@ instruction NOP <|@ <|@
      nr 1448  <|@ instruction NOP <|@ <|@
      nr 1450  <|@ instruction NOP <|@ <|@
      nr 1452  <|@ instruction MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV x: [r15|QWORD + 1168] y: 0 size: QWORD <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111]
locals: - - - - 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38]
locals: stack:40|QWORD[.] - stack:32|DWORD - - rbp|DWORD - - 
>@ <|@ instruction DEOPT info [bci:111, 38] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1472  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1474  <|@ instruction NOP <|@ <|@
      nr 1476  <|@ instruction NOP <|@ <|@
      nr 1478  <|@ instruction NOP <|@ <|@
      nr 1480  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5] <|@ <|@
      nr 1484  <|@ instruction JUMP ~outgoingValues: [] destination: B71 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B74" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  642  <|@ instruction NOP <|@ <|@
      nr  644  <|@ instruction NOP <|@ <|@
      nr  646  <|@ instruction NOP <|@ <|@
      nr  648  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  650  <|@ instruction r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5] <|@ <|@
      nr  652  <|@ instruction JUMP ~outgoingValues: [] destination: B35 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  262  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD <|@ <|@
      nr  284  <|@ instruction MOV x: [r15|QWORD + 1168] y: 20 size: QWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1630  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1632  <|@ instruction NOP <|@ <|@
      nr 1634  <|@ instruction NOP <|@ <|@
      nr 1636  <|@ instruction NOP <|@ <|@
      nr 1638  <|@ instruction NOP <|@ <|@
      nr 1640  <|@ instruction NOP <|@ <|@
      nr 1642  <|@ instruction NOP <|@ <|@
      nr 1644  <|@ instruction NOP <|@ <|@
      nr 1646  <|@ instruction MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD <|@ <|@
      nr 1648  <|@ instruction MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD <|@ <|@
      nr 1650  <|@ st <@st|@reference-map: [stack:24]
live-base-pointers: []
org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52]
locals: stack:40|QWORD[.] - rax|DWORD 
org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2]
locals: stack:40|QWORD[.] - stack:32|DWORD stack:28|DWORD - - - - 
>@ <|@ instruction DEOPT info [bci:52, 2] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B69" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr 1428  <|@ instruction NOP <|@ <|@
      nr 1430  <|@ instruction NOP <|@ <|@
      nr 1432  <|@ instruction NOP <|@ <|@
      nr 1434  <|@ instruction JUMP ~outgoingValues: [] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: aload_1       
     2: invokevirtual #32         // getHashIndex:(java.lang.Object)int
     5: istore        4
     7: aload_0       
     8: iload         4
    10: invokevirtual #33         // getHashArray:(int)int
    13: iconst_1      
    14: isub          
    15: istore        5
    17: iload         5
    19: iconst_m1     
    20: if_icmpeq     32
    23: iload_3       
    24: ifeq          32
    27: aload_0       
    28: invokevirtual #55         // createHash:()void
    31: return        
    32: aload_0       
    33: iload         4
    35: iload_2       
    36: iconst_1      
    37: iadd          
    38: invokevirtual #38         // setHashArray:(int, int)void
    41: aload_0       
    42: iload_2       
    43: invokevirtual #35         // getRawValue:(int)java.lang.Object
    46: astore        6
    48: iload         5
    50: iconst_m1     
    51: if_icmpeq     135
    54: getstatic     #49         // $assertionsDisabled:boolean
    57: ifne          76
    60: iload_2       
    61: iload         5
    63: if_icmpne     76
    66: new           #190        // java.lang.AssertionError
    69: dup           
    70: ldc           #228        // "this cannot happen and would create an endless collision link cycle"
    72: invokespecial #60         // java.lang.AssertionError.<init>:(java.lang.Object)void
    75: athrow        
    76: aload         6
    78: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    81: ifeq          113
    84: aload         6
    86: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    89: astore        7
    91: aload_0       
    92: iload_2       
    93: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
    96: dup           
    97: aload         7
    99: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   102: iload         5
   104: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   107: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   110: goto          160
   113: aload_0       
   114: iload_2       
   115: new           #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   118: dup           
   119: aload_0       
   120: iload_2       
   121: invokevirtual #35         // getRawValue:(int)java.lang.Object
   124: iload         5
   126: invokespecial #41         // org.graalvm.collections.EconomicMapImpl$CollisionLink.<init>:(java.lang.Object, int)void
   129: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   132: goto          160
   135: aload         6
   137: instanceof    #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   140: ifeq          160
   143: aload         6
   145: checkcast     #139        // org.graalvm.collections.EconomicMapImpl$CollisionLink
   148: astore        7
   150: aload_0       
   151: iload_2       
   152: aload         7
   154: getfield      #40         // org.graalvm.collections.EconomicMapImpl$CollisionLink.value:java.lang.Object
   157: invokevirtual #42         // setRawValue:(int, java.lang.Object)void
   160: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec389041817f20000000000f8589080000909090909090909090909048896c243048897424184489442424448b56204585d20f852602000090909090909090909090909090909090908b5a0848b80000002b787f0000488d1c18483b1d000000000f84bb010000483b1d000000000f84ae010000483b1d000000000f84a1010000483b1d000000000f8494010000483b1d000000000f8487010000894c2420909090909090909090909090488b9be0010000488b4340488bf2ffd00f1f840000000000488b7424189090909090909090448b5618428b14d50c0000008b4e1c448b1ccd0c00000081fa000200000f831b020000909090458bc390909090909090909090448bc841c1e9104133c1458bc841ffc94423c8418bd9d1e38bfbffc781fa000200000f839b01000090909090453bd90f869d06000090909090450fb644c910909090904585c00f85de01000090909090909090909090418be8ffcd8b442420d1e0448be841ffc5413bd50f86b305000090909090908b442420ffc081fa000200000f83fc00000090909090453bd90f869206000090909090418844c91090909090909090458bda49c1e303478b4cab104585c90f84bb00000090909090909090428b14cd0800000048b90000002b787f0000488d1411909090909048b9addeaddeaddeadde4585c00f855401000090909090483bca0f844803000090909090909090909090488b6c24304883c438493ba7500400000f878c060000c5f877c3894c2420909090909090488b32488bce4883e1034883f9010f857904000090909090909048c1ee088bf685f60f84840400009090908bc6e965feffff909090904181faaddeadde0f851e030000909090e9c4fdffff90909048c7c200000000e953ffffff90909090443bdb0f861b05000090909090443bdf0f86740500009090909081fa000002000f83ec0400009090909090908844cb10c1f8088844cf10e9dafeffff90909090443bdb0f86b704000090909090443bdf0f86780400009090909081fa000002000f83d304000090909090909090440fb644cf1041c1e0080fb644cb10440bc0e934feffff9090909081fa000002000f834a05000090909090458bc341d1e8e9ccfdffff8b4424249090909085c00f8543030000909090e90dfeffff90909090483bca0f84820200009090909090909090498b97b80100004c8d42184d3b87c80100000f876b030000909090909090909090904d8987b80100000f18821801000048c70201000000c74208addeaddec7420c0000000048c74210000000009090909090909090909090909044894a10896a0c468b14d50800000049b80000002b787f00004f8d14104d8b92d0000000458b42144d63c84e3b14090f847a000000909090904183f8200f859b04000090909090493bca0f84740100009090909049b8008a612b787f000041b900000000e9380000006666660f1f840000000000666666906666660f1f8400000000009090909090904963d9498b5cd8084c3bd30f84320100009090909041ffc1909090904585c97cd9e984030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842f000000478b54ab1049c1e2034d85d20f841d000000498b77284883fe000f84f20300004883ee0849897728490377384c8916488bf248c1ee03438974ab104b8d74ab104c8bd64c33d249c1ea160f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f849b0300004983eb084d895f484d035f584d8913e9bbfcffff909090909090909090909090428b14cd100000008bca48c1e1038b5424206690e8000000000f1f840000000000e989fcffff909090e9e6feffff909090904c895120e9d9feffff418bc0894c2420909090904181faaddeadde0f849902000090909090909090909090909049c1e203498bf248b8ffffffffffffffffe8000000000f1f840000000000e9effaffff9090909090909090498bb7b8010000488d5618493b97c80100000f871001000090909090909090909090498997b80100000f18861801000048c70601000000c74608addeaddec7460c0000000048c7461000000000909090909090909090909090909090909090428b14cd1000000048c1e2034c8bd68bcd4c8954241090e8000000000f1f840000000000488b7424188b542420488b4c241090e8000000000f1f840000000000e981fbffff9090909090909090909090488b7424186690e8000000000f1f840000000000488b6c24304883c438493ba7500400000f8727020000c5f877c390909090909090909090488bf2e8000000000f1f840000000000e9ebf9ffff909090ebdf9090909090909090488bf1e8000000000f1f8400000000008500488bd0488b742418e9a3fcffff9090909090909090488bf1e8000000000f1f8400000000008500488bf0e903ffffff90909049c7c30000000041bae5eafeff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c30000000041bae585feff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c30000000041bae58ffeffebcc90909049c7c3940c000041baede2fdffeb8890909049c7c30000000041bae5b2feffe973ffffff90909049c7c39407000041baede6fdffeb9390909049c7c30000000041bae59cfeffeb819090909090909090909041c78784040000d5c6feff49c7879004000000000000e8000000000f1f84000000000090909049c7c30000000041bae5a9feffe90dffffff90909049c7c30000000041bae5bffeffe9f8feffff9090909090909041c78784040000edeafdff49c7879004000014000000e8000000000f1f8400000000009090909090909041c78784040000ed7afdff49c7879004000014050000e8000000000f1f840000000000909090e950ffffff48896c2430e800000000e968f7fffff4488d0d60f9ffff49898f68040000e91af7fffff44c891424e800000000e90ffcfffff44c891424e800000000e966fcfffff4488d0dc5fdffff49898f68040000e9e8f6fffff441c78784040000f569feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f5f2feff49c7879004000000000000e8000000000f1f84000000000041c78784040000f518feff49c7879004000000000000e8000000000f1f84000000000041c787840400008fd2fcff49c7879004000000000000e8000000000f1f84000000000041c787840400008ffdfcff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD  <||@
  Comment 74 28 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 84 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 88 34 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 100 block B4 null  <||@
  Comment 100 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 70 NOP  <||@
  Comment 101 72 NOP  <||@
  Comment 102 74 NOP  <||@
  Comment 103 76 NOP  <||@
  Comment 104 78 NOP  <||@
  Comment 105 80 NOP  <||@
  Comment 106 82 NOP  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 NOP  <||@
  Comment 114 98 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2]  <||@
  Comment 114 [rdx:0, rsi:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 100 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 127 102 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 131 104 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 131 {DataSection[0x0]}  <||@
  Comment 144 {DataSection[0x8]}  <||@
  Comment 157 {DataSection[0x10]}  <||@
  Comment 170 {DataSection[0x18]}  <||@
  Comment 183 {DataSection[0x20]}  <||@
  Comment 196 block B11 null  <||@
  Comment 196 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 208 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 200 210 NOP  <||@
  Comment 201 212 NOP  <||@
  Comment 202 214 NOP  <||@
  Comment 203 216 NOP  <||@
  Comment 204 218 NOP  <||@
  Comment 205 220 NOP  <||@
  Comment 206 222 NOP  <||@
  Comment 207 224 NOP  <||@
  Comment 208 226 NOP  <||@
  Comment 209 228 NOP  <||@
  Comment 210 230 NOP  <||@
  Comment 211 232 NOP  <||@
  Comment 212 234 rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD  <||@
  Comment 219 236 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 223 238 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 226 240 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2]  <||@
  Comment 226 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 226 INLINE_INVOKE  <||@
  Comment 228 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 236 244 JUMP ~outgoingValues: [] destination: B11 -> B15  <||@
  Comment 236 block B15 null  <||@
  Comment 236 324 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 236 320 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 241 326 NOP  <||@
  Comment 242 328 NOP  <||@
  Comment 243 330 NOP  <||@
  Comment 244 332 NOP  <||@
  Comment 245 334 NOP  <||@
  Comment 246 336 NOP  <||@
  Comment 247 338 NOP  <||@
  Comment 248 340 NOP  <||@
  Comment 249 342 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 253 344 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 253 [rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 346 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 264 348 r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 264 [rcx:0, rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 264 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 272 350 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null  <||@
  Comment 284 block B16 null  <||@
  Comment 284 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 354 NOP  <||@
  Comment 285 356 NOP  <||@
  Comment 286 358 NOP  <||@
  Comment 287 360 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 290 362 JUMP ~outgoingValues: [] destination: B16 -> B19  <||@
  Comment 290 block B19 null  <||@
  Comment 290 390 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 290 392 NOP  <||@
  Comment 291 394 NOP  <||@
  Comment 292 396 NOP  <||@
  Comment 293 398 NOP  <||@
  Comment 294 400 NOP  <||@
  Comment 295 402 NOP  <||@
  Comment 296 404 NOP  <||@
  Comment 297 406 NOP  <||@
  Comment 298 408 NOP  <||@
  Comment 299 410 NOP  <||@
  Comment 300 412 r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD  <||@
  Comment 307 414 rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 310 416 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 316 418 r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 319 420 rbx|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 324 422 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 328 424 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null  <||@
  Comment 340 block B20 null  <||@
  Comment 340 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 428 NOP  <||@
  Comment 341 430 NOP  <||@
  Comment 342 432 NOP  <||@
  Comment 343 434 NOP  <||@
  Comment 344 436 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 353 block B21 null  <||@
  Comment 353 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 353 440 NOP  <||@
  Comment 354 442 NOP  <||@
  Comment 355 444 NOP  <||@
  Comment 356 446 NOP  <||@
  Comment 357 448 r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 363 450 JUMP ~outgoingValues: [] destination: B21 -> B27  <||@
  Comment 363 block B27 null  <||@
  Comment 363 528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 363 530 NOP  <||@
  Comment 364 532 NOP  <||@
  Comment 365 534 NOP  <||@
  Comment 366 536 NOP  <||@
  Comment 367 538 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 376 block B28 null  <||@
  Comment 376 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 376 542 NOP  <||@
  Comment 377 544 NOP  <||@
  Comment 378 546 NOP  <||@
  Comment 379 548 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 379 block B31 null  <||@
  Comment 379 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 379 576 NOP  <||@
  Comment 380 578 NOP  <||@
  Comment 381 580 NOP  <||@
  Comment 382 582 NOP  <||@
  Comment 383 584 NOP  <||@
  Comment 384 586 NOP  <||@
  Comment 385 588 NOP  <||@
  Comment 386 590 rbp|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 391 592 rax|DWORD = SHL value: stack:32|DWORD size: DWORD  <||@
  Comment 397 594 r13|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 403 596 CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD  <||@
  Comment 412 block B32 null  <||@
  Comment 412 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 600 NOP  <||@
  Comment 413 602 NOP  <||@
  Comment 414 604 NOP  <||@
  Comment 415 606 NOP  <||@
  Comment 416 608 NOP  <||@
  Comment 417 610 rax|DWORD = INC value: stack:32|DWORD size: DWORD  <||@
  Comment 423 612 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null  <||@
  Comment 435 block B33 null  <||@
  Comment 435 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 616 NOP  <||@
  Comment 436 618 NOP  <||@
  Comment 437 620 NOP  <||@
  Comment 438 622 NOP  <||@
  Comment 439 624 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 448 block B34 null  <||@
  Comment 448 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 628 NOP  <||@
  Comment 449 630 NOP  <||@
  Comment 450 632 NOP  <||@
  Comment 451 634 NOP  <||@
  Comment 452 636 MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 457 638 JUMP ~outgoingValues: [] destination: B34 -> B40  <||@
  Comment 457 block B40 null  <||@
  Comment 457 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 714 NOP  <||@
  Comment 458 716 NOP  <||@
  Comment 459 718 NOP  <||@
  Comment 460 720 NOP  <||@
  Comment 461 722 NOP  <||@
  Comment 462 724 NOP  <||@
  Comment 463 726 NOP  <||@
  Comment 464 728 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 471 730 r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 476 732 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 485 block B42 null  <||@
  Comment 485 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 748 NOP  <||@
  Comment 486 750 NOP  <||@
  Comment 487 752 NOP  <||@
  Comment 488 754 NOP  <||@
  Comment 489 756 NOP  <||@
  Comment 490 758 NOP  <||@
  Comment 491 760 NOP  <||@
  Comment 492 762 rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 500 764 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 510 766 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 514 768 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 514 block B43 null  <||@
  Comment 514 770 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 514 772 NOP  <||@
  Comment 515 774 NOP  <||@
  Comment 516 776 NOP  <||@
  Comment 517 778 NOP  <||@
  Comment 518 780 NOP  <||@
  Comment 519 782 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 519 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 529 784 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD  <||@
  Comment 538 block B44 null  <||@
  Comment 538 786 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 538 788 NOP  <||@
  Comment 539 790 NOP  <||@
  Comment 540 792 NOP  <||@
  Comment 541 794 NOP  <||@
  Comment 542 796 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 551 block B46 null  <||@
  Comment 551 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 551 836 NOP  <||@
  Comment 552 838 NOP  <||@
  Comment 553 840 NOP  <||@
  Comment 554 842 JUMP ~outgoingValues: [] destination: B46 -> B67  <||@
  Comment 554 block B67 null  <||@
  Comment 554 1408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 1410 NOP  <||@
  Comment 555 1412 NOP  <||@
  Comment 556 1414 NOP  <||@
  Comment 557 1416 NOP  <||@
  Comment 558 1418 NOP  <||@
  Comment 559 1420 NOP  <||@
  Comment 560 1422 NOP  <||@
  Comment 561 1424 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 570 POLL_RETURN_FAR  <||@
  Comment 587 block B5 null  <||@
  Comment 587 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 587 108 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 591 110 NOP  <||@
  Comment 592 112 NOP  <||@
  Comment 593 114 NOP  <||@
  Comment 594 116 NOP  <||@
  Comment 595 118 NOP  <||@
  Comment 596 120 NOP  <||@
  Comment 597 122 rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD  <||@
  Comment 600 124 rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD  <||@
  Comment 607 126 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null  <||@
  Comment 617 block B6 null  <||@
  Comment 617 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 130 NOP  <||@
  Comment 618 132 NOP  <||@
  Comment 619 134 NOP  <||@
  Comment 620 136 NOP  <||@
  Comment 621 138 NOP  <||@
  Comment 622 140 NOP  <||@
  Comment 623 142 rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD  <||@
  Comment 627 144 rsi|DWORD = MOV value: rsi|QWORD size: DWORD  <||@
  Comment 629 146 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 637 block B8 null  <||@
  Comment 637 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 160 NOP  <||@
  Comment 638 162 NOP  <||@
  Comment 639 164 NOP  <||@
  Comment 640 166 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 642 170 JUMP ~outgoingValues: [] destination: B8 -> B15  <||@
  Comment 647 block B2 null  <||@
  Comment 647 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 647 48 NOP  <||@
  Comment 648 50 NOP  <||@
  Comment 649 52 NOP  <||@
  Comment 650 54 NOP  <||@
  Comment 651 56 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 651 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 664 block B3 null  <||@
  Comment 664 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 664 60 NOP  <||@
  Comment 665 62 NOP  <||@
  Comment 666 64 NOP  <||@
  Comment 667 66 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 672 block B41 null  <||@
  Comment 672 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 672 736 NOP  <||@
  Comment 673 738 NOP  <||@
  Comment 674 740 NOP  <||@
  Comment 675 742 rdx|QWORD = MOVE input: Object[null]  <||@
  Comment 682 744 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 687 block B36 null  <||@
  Comment 687 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 656 NOP  <||@
  Comment 688 658 NOP  <||@
  Comment 689 660 NOP  <||@
  Comment 690 662 NOP  <||@
  Comment 691 664 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD  <||@
  Comment 700 block B37 null  <||@
  Comment 700 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 668 NOP  <||@
  Comment 701 670 NOP  <||@
  Comment 702 672 NOP  <||@
  Comment 703 674 NOP  <||@
  Comment 704 676 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD  <||@
  Comment 713 block B38 null  <||@
  Comment 713 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 713 680 NOP  <||@
  Comment 714 682 NOP  <||@
  Comment 715 684 NOP  <||@
  Comment 716 686 NOP  <||@
  Comment 717 688 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 729 block B39 null  <||@
  Comment 729 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 729 692 NOP  <||@
  Comment 730 694 NOP  <||@
  Comment 731 696 NOP  <||@
  Comment 732 698 NOP  <||@
  Comment 733 700 NOP  <||@
  Comment 734 702 NOP  <||@
  Comment 735 704 MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 739 706 rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD  <||@
  Comment 742 708 MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 746 710 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 751 block B23 null  <||@
  Comment 751 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 751 468 NOP  <||@
  Comment 752 470 NOP  <||@
  Comment 753 472 NOP  <||@
  Comment 754 474 NOP  <||@
  Comment 755 476 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD  <||@
  Comment 764 block B24 null  <||@
  Comment 764 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 480 NOP  <||@
  Comment 765 482 NOP  <||@
  Comment 766 484 NOP  <||@
  Comment 767 486 NOP  <||@
  Comment 768 488 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD  <||@
  Comment 777 block B25 null  <||@
  Comment 777 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 492 NOP  <||@
  Comment 778 494 NOP  <||@
  Comment 779 496 NOP  <||@
  Comment 780 498 NOP  <||@
  Comment 781 500 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 793 block B26 null  <||@
  Comment 793 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 504 NOP  <||@
  Comment 794 506 NOP  <||@
  Comment 795 508 NOP  <||@
  Comment 796 510 NOP  <||@
  Comment 797 512 NOP  <||@
  Comment 798 514 NOP  <||@
  Comment 799 516 NOP  <||@
  Comment 800 518 r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 806 520 r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD  <||@
  Comment 810 522 rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 815 524 r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 818 526 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 823 block B17 null  <||@
  Comment 823 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 366 NOP  <||@
  Comment 824 368 NOP  <||@
  Comment 825 370 NOP  <||@
  Comment 826 372 NOP  <||@
  Comment 827 374 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 839 block B18 null  <||@
  Comment 839 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 839 378 NOP  <||@
  Comment 840 380 NOP  <||@
  Comment 841 382 NOP  <||@
  Comment 842 384 NOP  <||@
  Comment 843 386 r8|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 849 388 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 854 block B29 null  <||@
  Comment 854 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 552 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 858 554 NOP  <||@
  Comment 859 556 NOP  <||@
  Comment 860 558 NOP  <||@
  Comment 861 560 NOP  <||@
  Comment 862 562 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD  <||@
  Comment 870 block B30 null  <||@
  Comment 870 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 566 NOP  <||@
  Comment 871 568 NOP  <||@
  Comment 872 570 NOP  <||@
  Comment 873 572 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 878 block B47 null  <||@
  Comment 878 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 878 846 NOP  <||@
  Comment 879 848 NOP  <||@
  Comment 880 850 NOP  <||@
  Comment 881 852 NOP  <||@
  Comment 882 854 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD  <||@
  Comment 891 block B52 null  <||@
  Comment 891 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 891 1010 NOP  <||@
  Comment 892 1012 NOP  <||@
  Comment 893 1014 NOP  <||@
  Comment 894 1016 NOP  <||@
  Comment 895 1018 NOP  <||@
  Comment 896 1020 NOP  <||@
  Comment 897 1022 NOP  <||@
  Comment 898 1024 NOP  <||@
  Comment 899 1026 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 906 1028 r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD  <||@
  Comment 910 1030 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 923 block B54 null  <||@
  Comment 923 1062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 923 1064 NOP  <||@
  Comment 924 1066 NOP  <||@
  Comment 925 1068 NOP  <||@
  Comment 926 1070 NOP  <||@
  Comment 927 1072 NOP  <||@
  Comment 928 1074 NOP  <||@
  Comment 929 1076 NOP  <||@
  Comment 930 1078 NOP  <||@
  Comment 931 1080 NOP  <||@
  Comment 932 1082 NOP  <||@
  Comment 933 1084 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 940 1086 AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0  <||@
  Comment 947 1088 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 954 1090 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 954 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 961 1092 MOV x: [rdx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 968 1094 MOV x: [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 976 1096 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 976 1098 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 976 block B55 null  <||@
  Comment 976 1100 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 976 1102 NOP  <||@
  Comment 977 1104 NOP  <||@
  Comment 978 1106 NOP  <||@
  Comment 979 1108 NOP  <||@
  Comment 980 1110 NOP  <||@
  Comment 981 1112 NOP  <||@
  Comment 982 1114 NOP  <||@
  Comment 983 1116 NOP  <||@
  Comment 984 1118 NOP  <||@
  Comment 985 1120 NOP  <||@
  Comment 986 1122 NOP  <||@
  Comment 987 1124 NOP  <||@
  Comment 988 1126 NOP  <||@
  Comment 989 1128 MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 993 1130 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 996 1132 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1004 1134 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1014 1136 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 1018 1138 r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD  <||@
  Comment 1025 1140 r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD  <||@
  Comment 1029 1142 r9|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 1032 1144 CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1042 block B57 null  <||@
  Comment 1042 1156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1042 1158 NOP  <||@
  Comment 1043 1160 NOP  <||@
  Comment 1044 1162 NOP  <||@
  Comment 1045 1164 NOP  <||@
  Comment 1046 1166 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null  <||@
  Comment 1056 block B58 null  <||@
  Comment 1056 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 1170 NOP  <||@
  Comment 1057 1172 NOP  <||@
  Comment 1058 1174 NOP  <||@
  Comment 1059 1176 NOP  <||@
  Comment 1060 1178 CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD  <||@
  Comment 1069 block B60 null  <||@
  Comment 1069 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1069 1192 NOP  <||@
  Comment 1070 1194 NOP  <||@
  Comment 1071 1196 NOP  <||@
  Comment 1072 1198 NOP  <||@
  Comment 1073 1200 r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00]  <||@
  Comment 1083 1202 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1089 1204 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 1094 block B62 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1094 1218 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1120 1220 NOP  <||@
  Comment 1121 1222 NOP  <||@
  Comment 1122 1224 NOP  <||@
  Comment 1123 1226 NOP  <||@
  Comment 1124 1228 NOP  <||@
  Comment 1125 1230 NOP  <||@
  Comment 1126 1232 rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 1129 1234 rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD  <||@
  Comment 1134 1236 CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD  <||@
  Comment 1143 block B63 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1143 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 1240 NOP  <||@
  Comment 1144 1242 NOP  <||@
  Comment 1145 1244 NOP  <||@
  Comment 1146 1246 NOP  <||@
  Comment 1147 1248 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 1150 1250 JUMP ~outgoingValues: [] destination: B63 -> B61  <||@
  Comment 1150 block B61 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1150 1206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1150 1208 NOP  <||@
  Comment 1151 1210 NOP  <||@
  Comment 1152 1212 NOP  <||@
  Comment 1153 1214 NOP  <||@
  Comment 1154 1216 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 1164 block B56 null  <||@
  Comment 1164 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 1148 NOP  <||@
  Comment 1165 1150 NOP  <||@
  Comment 1166 1152 NOP  <||@
  Comment 1167 1154 JUMP ~outgoingValues: [] destination: B56 -> B66  <||@
  Comment 1167 block B66 null  <||@
  Comment 1167 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 1278 NOP  <||@
  Comment 1168 1280 NOP  <||@
  Comment 1169 1282 NOP  <||@
  Comment 1170 1284 NOP  <||@
  Comment 1171 1286 NOP  <||@
  Comment 1172 1288 NOP  <||@
  Comment 1173 1290 NOP  <||@
  Comment 1174 1292 NOP  <||@
  Comment 1175 1294 NOP  <||@
  Comment 1176 1296 NOP  <||@
  Comment 1177 1298 NOP  <||@
  Comment 1178 1300 NOP  <||@
  Comment 1179 1302 NOP  <||@
  Comment 1180 1304 NOP  <||@
  Comment 1181 1306 NOP  <||@
  Comment 1182 1308 NOP  <||@
  Comment 1183 1310 NOP  <||@
  Comment 1184 1312 NOP  <||@
  Comment 1185 1314 NOP  <||@
  Comment 1186 1316 NOP  <||@
  Comment 1187 1318 NOP  <||@
  Comment 1188 1320 NOP  <||@
  Comment 1189 1322 NOP  <||@
  Comment 1190 1324 NOP  <||@
  Comment 1191 1326 NOP  <||@
  Comment 1192 1328 NOP  <||@
  Comment 1193 1330 NOP  <||@
  Comment 1194 1332 NOP  <||@
  Comment 1195 1334 NOP  <||@
  Comment 1196 1336 NOP  <||@
  Comment 1197 1338 NOP  <||@
  Comment 1198 1340 NOP  <||@
  Comment 1199 1342 NOP  <||@
  Comment 1200 1344 NOP  <||@
  Comment 1201 1346 NOP  <||@
  Comment 1202 1348 NOP  <||@
  Comment 1203 1350 NOP  <||@
  Comment 1204 1352 NOP  <||@
  Comment 1205 1354 NOP  <||@
  Comment 1206 1356 NOP  <||@
  Comment 1207 1358 NOP  <||@
  Comment 1208 1360 NOP  <||@
  Comment 1209 1362 NOP  <||@
  Comment 1210 1364 NOP  <||@
  Comment 1211 1366 NOP  <||@
  Comment 1212 1368 NOP  <||@
  Comment 1213 1370 NOP  <||@
  Comment 1214 1372 NOP  <||@
  Comment 1215 1374 NOP  <||@
  Comment 1216 1376 NOP  <||@
  Comment 1217 1378 NOP  <||@
  Comment 1218 1380 NOP  <||@
  Comment 1219 1382 NOP  <||@
  Comment 1220 1384 NOP  <||@
  Comment 1221 1386 NOP  <||@
  Comment 1222 1388 NOP  <||@
  Comment 1223 1390 NOP  <||@
  Comment 1224 1392 NOP  <||@
  Comment 1225 1394 NOP  <||@
  Comment 1226 1396 AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51  <||@
  Comment 1284 1398 rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1291 1400 MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1296 1402 rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1301 1404 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51  <||@
  Comment 1386 1406 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 1391 block B45 null  <||@
  Comment 1391 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1391 800 NOP  <||@
  Comment 1392 802 NOP  <||@
  Comment 1393 804 NOP  <||@
  Comment 1394 806 NOP  <||@
  Comment 1395 808 NOP  <||@
  Comment 1396 810 NOP  <||@
  Comment 1397 812 NOP  <||@
  Comment 1398 814 NOP  <||@
  Comment 1399 816 NOP  <||@
  Comment 1400 818 NOP  <||@
  Comment 1401 820 NOP  <||@
  Comment 1402 822 NOP  <||@
  Comment 1403 824 rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1411 826 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1417 828 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1421 830 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157]  <||@
  Comment 1423 {HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>}  <||@
  Comment 1423 INVOKESPECIAL  <||@
  Comment 1428 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1436 832 JUMP ~outgoingValues: [] destination: B45 -> B67  <||@
  Comment 1441 block B59 null  <||@
  Comment 1441 1180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1441 1182 NOP  <||@
  Comment 1442 1184 NOP  <||@
  Comment 1443 1186 NOP  <||@
  Comment 1444 1188 JUMP ~outgoingValues: [] destination: B59 -> B66  <||@
  Comment 1449 block B64 null  <||@
  Comment 1449 1252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 1254 NOP  <||@
  Comment 1450 1256 NOP  <||@
  Comment 1451 1258 NOP  <||@
  Comment 1452 1260 NOP  <||@
  Comment 1453 1262 MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD  <||@
  Comment 1457 1264 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 1462 block B12 null  <||@
  Comment 1462 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1462 248 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1465 250 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1469 252 NOP  <||@
  Comment 1470 254 NOP  <||@
  Comment 1471 256 NOP  <||@
  Comment 1472 258 NOP  <||@
  Comment 1473 260 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1473 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1486 block B14 null  <||@
  Comment 1486 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1486 290 NOP  <||@
  Comment 1487 292 NOP  <||@
  Comment 1488 294 NOP  <||@
  Comment 1489 296 NOP  <||@
  Comment 1490 298 NOP  <||@
  Comment 1491 300 NOP  <||@
  Comment 1492 302 NOP  <||@
  Comment 1493 304 NOP  <||@
  Comment 1494 306 NOP  <||@
  Comment 1495 308 NOP  <||@
  Comment 1496 310 NOP  <||@
  Comment 1497 312 NOP  <||@
  Comment 1498 314 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1502 316 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 318 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2]  <||@
  Comment 1505 INVOKEVIRTUAL  <||@
  Comment 1515 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1520 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1528 322 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1533 block B48 null  <||@
  Comment 1533 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 858 NOP  <||@
  Comment 1534 860 NOP  <||@
  Comment 1535 862 NOP  <||@
  Comment 1536 864 NOP  <||@
  Comment 1537 866 NOP  <||@
  Comment 1538 868 NOP  <||@
  Comment 1539 870 NOP  <||@
  Comment 1540 872 NOP  <||@
  Comment 1541 874 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1548 876 rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1552 878 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD  <||@
  Comment 1565 block B50 null  <||@
  Comment 1565 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 910 NOP  <||@
  Comment 1566 912 NOP  <||@
  Comment 1567 914 NOP  <||@
  Comment 1568 916 NOP  <||@
  Comment 1569 918 NOP  <||@
  Comment 1570 920 NOP  <||@
  Comment 1571 922 NOP  <||@
  Comment 1572 924 NOP  <||@
  Comment 1573 926 NOP  <||@
  Comment 1574 928 NOP  <||@
  Comment 1575 930 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1582 932 AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0  <||@
  Comment 1589 934 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1596 936 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1596 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1603 938 MOV x: [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1610 940 MOV x: [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1618 942 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1618 944 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 1618 block B51 null  <||@
  Comment 1618 946 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1618 948 NOP  <||@
  Comment 1619 950 NOP  <||@
  Comment 1620 952 NOP  <||@
  Comment 1621 954 NOP  <||@
  Comment 1622 956 NOP  <||@
  Comment 1623 958 NOP  <||@
  Comment 1624 960 NOP  <||@
  Comment 1625 962 NOP  <||@
  Comment 1626 964 NOP  <||@
  Comment 1627 966 NOP  <||@
  Comment 1628 968 NOP  <||@
  Comment 1629 970 NOP  <||@
  Comment 1630 972 NOP  <||@
  Comment 1631 974 NOP  <||@
  Comment 1632 976 NOP  <||@
  Comment 1633 978 NOP  <||@
  Comment 1634 980 NOP  <||@
  Comment 1635 982 NOP  <||@
  Comment 1636 984 rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1644 986 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1648 988 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1651 992 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1653 994 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 996 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104]  <||@
  Comment 1659 {HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)>}  <||@
  Comment 1659 INVOKESPECIAL  <||@
  Comment 1664 [stack:16, stack:24]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3  |4  |5  |6  |7 
     locals:  |-                  |-               |-                  |-  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |stack:32|DWORD  |stack:48|QWORD[.]  |   |   |   |   |    <||@
  Comment 1672 998 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 1000 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1681 1002 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1686 1004 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107]  <||@
  Comment 1687 {HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>}  <||@
  Comment 1687 INVOKESPECIAL  <||@
  Comment 1692 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1700 1006 JUMP ~outgoingValues: [] destination: B51 -> B67  <||@
  Comment 1705 block B75 null  <||@
  Comment 1705 1536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 1538 NOP  <||@
  Comment 1706 1540 NOP  <||@
  Comment 1707 1542 NOP  <||@
  Comment 1708 1544 NOP  <||@
  Comment 1709 1546 NOP  <||@
  Comment 1710 1548 NOP  <||@
  Comment 1711 1550 NOP  <||@
  Comment 1712 1552 NOP  <||@
  Comment 1713 1554 NOP  <||@
  Comment 1714 1556 NOP  <||@
  Comment 1715 1558 NOP  <||@
  Comment 1716 1560 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1721 1562 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28]  <||@
  Comment 1723 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1723 INVOKESPECIAL  <||@
  Comment 1728 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1736 1564 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1745 POLL_RETURN_FAR  <||@
  Comment 1762 block B9 null  <||@
  Comment 1762 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1762 174 NOP  <||@
  Comment 1763 176 NOP  <||@
  Comment 1764 178 NOP  <||@
  Comment 1765 180 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 1765 block B10 null  <||@
  Comment 1765 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1765 184 NOP  <||@
  Comment 1766 186 NOP  <||@
  Comment 1767 188 NOP  <||@
  Comment 1768 190 NOP  <||@
  Comment 1769 192 NOP  <||@
  Comment 1770 194 NOP  <||@
  Comment 1771 196 NOP  <||@
  Comment 1772 198 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1775 200 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2]  <||@
  Comment 1775 {Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 1780 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1788 204 JUMP ~outgoingValues: [] destination: B10 -> B15  <||@
  Comment 1793 block B7 null  <||@
  Comment 1793 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1793 150 NOP  <||@
  Comment 1794 152 NOP  <||@
  Comment 1795 154 NOP  <||@
  Comment 1796 156 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1798 block B53 null  <||@
  Comment 1798 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1798 1034 NOP  <||@
  Comment 1799 1036 NOP  <||@
  Comment 1800 1038 NOP  <||@
  Comment 1801 1040 NOP  <||@
  Comment 1802 1042 NOP  <||@
  Comment 1803 1044 NOP  <||@
  Comment 1804 1046 NOP  <||@
  Comment 1805 1048 NOP  <||@
  Comment 1806 1050 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1809 1052 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38]  <||@
  Comment 1809 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1814 [r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1822 1054 NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38]  <||@
  Comment 1822 [rax:0, r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1822 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1824 1056 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1058 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 1060 JUMP ~outgoingValues: [] destination: B53 -> B55  <||@
  Comment 1837 block B49 null  <||@
  Comment 1837 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1837 882 NOP  <||@
  Comment 1838 884 NOP  <||@
  Comment 1839 886 NOP  <||@
  Comment 1840 888 NOP  <||@
  Comment 1841 890 NOP  <||@
  Comment 1842 892 NOP  <||@
  Comment 1843 894 NOP  <||@
  Comment 1844 896 NOP  <||@
  Comment 1845 898 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1848 900 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38]  <||@
  Comment 1848 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1853 [r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1861 902 NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38]  <||@
  Comment 1861 [rax:0, r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1861 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 904 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 906 JUMP ~outgoingValues: [] destination: B49 -> B51  <||@
  Comment 1871 block B73 null  <||@
  Comment 1871 1500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 1502 NOP  <||@
  Comment 1872 1504 NOP  <||@
  Comment 1873 1506 NOP  <||@
  Comment 1874 1508 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1881 1510 r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5]  <||@
  Comment 1887 1512 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 1887 block B74 null  <||@
  Comment 1887 1514 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1887 1516 NOP  <||@
  Comment 1888 1518 NOP  <||@
  Comment 1889 1520 NOP  <||@
  Comment 1890 1522 NOP  <||@
  Comment 1891 1524 NOP  <||@
  Comment 1892 1526 NOP  <||@
  Comment 1893 1528 NOP  <||@
  Comment 1894 1530 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1901 1532 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1908 1534 DEOPT info [bci:32]  <||@
  Comment 1908 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1913 [stack:24]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4         |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |r9|DWORD  |rbp|DWORD  |-  |-   <||@
  Comment 1921 block B77 null  <||@
  Comment 1921 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1921 1582 NOP  <||@
  Comment 1922 1584 NOP  <||@
  Comment 1923 1586 NOP  <||@
  Comment 1924 1588 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1931 1590 r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5]  <||@
  Comment 1937 1592 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1937 block B79 null  <||@
  Comment 1937 1608 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1937 1610 NOP  <||@
  Comment 1938 1612 NOP  <||@
  Comment 1939 1614 NOP  <||@
  Comment 1940 1616 NOP  <||@
  Comment 1941 1618 NOP  <||@
  Comment 1942 1620 NOP  <||@
  Comment 1943 1622 NOP  <||@
  Comment 1944 1624 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1951 1626 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1958 1628 DEOPT info [bci:64, 2]  <||@
  Comment 1958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1963 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64, duringCall: false, rethrow: false]
              |0          |1         |2 
     locals:  |-          |-         |- 
     stack:   |rax|DWORD  |r8|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1971 block B78 null  <||@
  Comment 1971 1594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1971 1596 NOP  <||@
  Comment 1972 1598 NOP  <||@
  Comment 1973 1600 NOP  <||@
  Comment 1974 1602 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1981 1604 r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5]  <||@
  Comment 1987 1606 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1989 block B70 null  <||@
  Comment 1989 1458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1989 1460 NOP  <||@
  Comment 1990 1462 NOP  <||@
  Comment 1991 1464 NOP  <||@
  Comment 1992 1466 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 1999 1468 r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed]  <||@
  Comment 2005 1470 JUMP ~outgoingValues: [] destination: B70 -> B74  <||@
  Comment 2007 block B72 null  <||@
  Comment 2007 1486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2007 1488 NOP  <||@
  Comment 2008 1490 NOP  <||@
  Comment 2009 1492 NOP  <||@
  Comment 2010 1494 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2017 1496 r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 2023 1498 JUMP ~outgoingValues: [] destination: B72 -> B74  <||@
  Comment 2028 block B76 null  <||@
  Comment 2028 1566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2028 1568 NOP  <||@
  Comment 2029 1570 NOP  <||@
  Comment 2030 1572 NOP  <||@
  Comment 2031 1574 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2038 1576 r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed]  <||@
  Comment 2044 1578 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 2046 block B22 null  <||@
  Comment 2046 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2046 454 NOP  <||@
  Comment 2047 456 NOP  <||@
  Comment 2048 458 NOP  <||@
  Comment 2049 460 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2056 462 r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5]  <||@
  Comment 2062 464 JUMP ~outgoingValues: [] destination: B22 -> B79  <||@
  Comment 2064 block B65 null  <||@
  Comment 2064 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2064 1268 NOP  <||@
  Comment 2065 1270 NOP  <||@
  Comment 2066 1272 NOP  <||@
  Comment 2067 1274 JUMP ~outgoingValues: [] destination: B65 -> B69  <||@
  Comment 2067 block B69 null  <||@
  Comment 2067 1436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 1438 NOP  <||@
  Comment 2068 1440 NOP  <||@
  Comment 2069 1442 NOP  <||@
  Comment 2070 1444 NOP  <||@
  Comment 2071 1446 NOP  <||@
  Comment 2072 1448 NOP  <||@
  Comment 2073 1450 NOP  <||@
  Comment 2074 1452 MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD  <||@
  Comment 2085 1454 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2096 1456 DEOPT info [bci:111, 38]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2101 [stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2109 block B71 null  <||@
  Comment 2109 1472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2109 1474 NOP  <||@
  Comment 2110 1476 NOP  <||@
  Comment 2111 1478 NOP  <||@
  Comment 2112 1480 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2119 1482 r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5]  <||@
  Comment 2125 1484 JUMP ~outgoingValues: [] destination: B71 -> B74  <||@
  Comment 2130 block B35 null  <||@
  Comment 2130 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2130 642 NOP  <||@
  Comment 2131 644 NOP  <||@
  Comment 2132 646 NOP  <||@
  Comment 2133 648 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2140 650 r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 2146 652 JUMP ~outgoingValues: [] destination: B35 -> B74  <||@
  Comment 2151 block B13 null  <||@
  Comment 2151 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2151 268 NOP  <||@
  Comment 2152 270 NOP  <||@
  Comment 2153 272 NOP  <||@
  Comment 2154 274 NOP  <||@
  Comment 2155 276 NOP  <||@
  Comment 2156 278 NOP  <||@
  Comment 2157 280 NOP  <||@
  Comment 2158 282 MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD  <||@
  Comment 2169 284 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2180 286 DEOPT info [bci:0]  <||@
  Comment 2180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2185 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2193 block B80 null  <||@
  Comment 2193 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2193 1632 NOP  <||@
  Comment 2194 1634 NOP  <||@
  Comment 2195 1636 NOP  <||@
  Comment 2196 1638 NOP  <||@
  Comment 2197 1640 NOP  <||@
  Comment 2198 1642 NOP  <||@
  Comment 2199 1644 NOP  <||@
  Comment 2200 1646 MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD  <||@
  Comment 2211 1648 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2222 1650 DEOPT info [bci:52, 2]  <||@
  Comment 2222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2227 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:40|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2235 block B68 null  <||@
  Comment 2235 1426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2235 1428 NOP  <||@
  Comment 2236 1430 NOP  <||@
  Comment 2237 1432 NOP  <||@
  Comment 2238 1434 JUMP ~outgoingValues: [] destination: B68 -> B69  <||@
  Comment 2248 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2273 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2283 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2298 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2351 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2356 [rdx:0, rsi:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2386 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2391 [rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2426 [rcx:0, rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2456 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2461 [rax:0, r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2496 [rax:0, r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2504 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2504 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2510 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2510 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-7999[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  method "HotSpotCompilation-7999[org.graalvm.collections.EconomicMapImpl.putHashEntry(Object, int, boolean)]"
  date 1724269759261
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af2fee0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85835185fe66669089842400c0feff4883ec389041817f20000000000f8589080000909090909090909090909048896c243048897424184489442424448b56204585d20f852602000090909090909090909090909090909090908b5a0848b80000002b787f0000488d1c18483b1d36ffffff0f84bb010000483b1d31ffffff0f84ae010000483b1d2cffffff0f84a1010000483b1d27ffffff0f8494010000483b1d22ffffff0f8487010000894c2420909090909090909090909090488b9be0010000488b4340488bf2ffd00f1f840000000000488b7424189090909090909090448b5618428b14d50c0000008b4e1c448b1ccd0c00000081fa000200000f831b020000909090458bc390909090909090909090448bc841c1e9104133c1458bc841ffc94423c8418bd9d1e38bfbffc781fa000200000f839b01000090909090453bd90f869d06000090909090450fb644c910909090904585c00f85de01000090909090909090909090418be8ffcd8b442420d1e0448be841ffc5413bd50f86b305000090909090908b442420ffc081fa000200000f83fc00000090909090453bd90f869206000090909090418844c91090909090909090458bda49c1e303478b4cab104585c90f84bb00000090909090909090428b14cd0800000048b90000002b787f0000488d1411909090909048b918ac002c787f00004585c00f855401000090909090483bca0f844803000090909090909090909090488b6c24304883c438493ba7500400000f878c060000c5f877c3894c2420909090909090488b32488bce4883e1034883f9010f857904000090909090909048c1ee088bf685f60f84840400009090908bc6e965feffff909090904181fa86e8bac50f851e030000909090e9c4fdffff90909048c7c200000000e953ffffff90909090443bdb0f861b05000090909090443bdf0f86740500009090909081fa000002000f83ec0400009090909090908844cb10c1f8088844cf10e9dafeffff90909090443bdb0f86b704000090909090443bdf0f86780400009090909081fa000002000f83d304000090909090909090440fb644cf1041c1e0080fb644cb10440bc0e934feffff9090909081fa000002000f834a05000090909090458bc341d1e8e9ccfdffff8b4424249090909085c00f8543030000909090e90dfeffff90909090483bca0f84820200009090909090909090498b97b80100004c8d42184d3b87c80100000f876b030000909090909090909090904d8987b80100000f18821801000048c70201000000c7420818ac0001c7420c0000000048c74210000000009090909090909090909090909044894a10896a0c468b14d50800000049b80000002b787f00004f8d14104d8b92d0000000458b42144d63c84e3b14090f847a000000909090904183f8200f859b04000090909090493bca0f84740100009090909049b8008a612b787f000041b900000000e9380000006666660f1f840000000000666666906666660f1f8400000000009090909090904963d9498b5cd8084c3bd30f84320100009090909041ffc1909090904585c97cd9e984030000909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842f000000478b54ab1049c1e2034d85d20f841d000000498b77284883fe000f84f20300004883ee0849897728490377384c8916488bf248c1ee03438974ab104b8d74ab104c8bd64c33d249c1ea160f84450000004c8bd649c1ea0949bb00e0368d787f00004d03d341803a02742bf08304240041803a00742041c602004d8b5f484d85db0f849b0300004983eb084d895f484d035f584d8913e9bbfcffff909090909090909090909090428b14cd100000008bca48c1e1038b5424206690e80c4f85fe0f1f8400e4070004e989fcffff909090e9e6feffff909090904c895120e9d9feffff418bc0894c2420909090904181fa17c2bcc50f849902000090909090909090909090909049c1e203498bf248b8ffffffffffffffffe8b05185fe0f1f840040080005e9effaffff9090909090909090498bb7b8010000488d5618493b97c80100000f871001000090909090909090909090498997b80100000f18861801000048c70601000000c7460818ac0001c7460c0000000048c7461000000000909090909090909090909090909090909090428b14cd1000000048c1e2034c8bd68bcd4c8954241090e8204e85fe0f1f8400d0080006488b7424188b542420488b4c241090e8044e85fe0f1f8400ec080007e981fbffff9090909090909090909090488b7424186690e8e04d85fe0f1f840010090008488b6c24304883c438493ba7500400000f8727020000c5f877c390909090909090909090488bf2e8accf9afe0f1f840000000000e9ebf9ffff909090ebdf9090909090909090488bf1e88a7c9afe0f1f8400000000008500488bd0488b742418e9a3fcffff9090909090909090488bf1e8637c9afe0f1f8400000000008500488bf0e903ffffff90909049c7c30000000041bae5eafeff90909090909090458997840400004d899f90040000e821ab85fe0f1f84000000000090909049c7c30000000041bae585feff90909090909090458997840400004d899f90040000e8efaa85fe0f1f84000000000090909049c7c30000000041bae58ffeffebcc90909049c7c3940c000041baede2fdffeb8890909049c7c30000000041bae5b2feffe973ffffff90909049c7c39407000041baede6fdffeb9390909049c7c30000000041bae59cfeffeb819090909090909090909041c78784040000d5c6feff49c7879004000000000000e865aa85fe0f1f84000000000090909049c7c30000000041bae5a9feffe90dffffff90909049c7c30000000041bae5bffeffe9f8feffff9090909090909041c78784040000edeafdff49c7879004000014000000e811aa85fe0f1f8400000000009090909090909041c78784040000ed7afdff49c7879004000014050000e8e7a985fe0f1f840000000000909090e950ffffff48896c2430e873aa83fee968f7fffff4488d0d60f9ffff49898f68040000e93ab885fef44c891424e8307a99fee90ffcfffff44c891424e8a19b99fee966fcfffff4488d0dc5fdffff49898f68040000e908b885fef441c78784040000f569feff49c7879004000000000000e866a985fe0f1f84000000000041c78784040000f5f2feff49c7879004000000000000e843a985fe0f1f84000000000041c78784040000f518feff49c7879004000000000000e820a985fe0f1f84000000000041c787840400008fd2fcff49c7879004000000000000e8fda885fe0f1f84000000000041c787840400008ffdfcff49c7879004000000000000e8daa885fe0f1f840000000000e8534a99fef4e86da685fef4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 74 26 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@61ca5696 slotKind: QWORD  <||@
  Comment 74 28 stack:40|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 79 30 stack:28|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 84 32 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 32] size: DWORD  <||@
  Comment 88 34 TESTBRANCH (x: r10|DWORD[_], y: r10|DWORD[_]) trueDestinationProbability: 0.8680541035860417 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: DWORD  <||@
  Comment 97 block B1 null  <||@
  Comment 97 36 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 97 38 NOP  <||@
  Comment 98 40 NOP  <||@
  Comment 99 42 NOP  <||@
  Comment 100 44 JUMP ~outgoingValues: [] destination: B1 -> B4  <||@
  Comment 100 block B4 null  <||@
  Comment 100 68 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 70 NOP  <||@
  Comment 101 72 NOP  <||@
  Comment 102 74 NOP  <||@
  Comment 103 76 NOP  <||@
  Comment 104 78 NOP  <||@
  Comment 105 80 NOP  <||@
  Comment 106 82 NOP  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 NOP  <||@
  Comment 114 98 rbx|DWORD = MOV input: [rdx|QWORD[.] + 8] size: DWORD state [bci:47, 2]  <||@
  Comment 114 [rdx:0, rsi:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 114 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 117 100 rax|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 127 102 rbx|QWORD = UNCOMPRESSPOINTER (input: rbx|DWORD, ~baseRegister: rax|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 131 104 AMD64HOTSPOTSTRATEGYSWITCH ~key: rbx|QWORD scratch: - keyConstants: [meta{HotSpotType<Ljdk/graal/compiler/options/OptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/options/EnumMultiOptionKey;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$1;, resolved>}, meta{HotSpotType<Ljdk/graal/compiler/core/common/SpectrePHTMitigations$Options$2;, resolved>}] keyTargets: [B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5, B4 -> B5] defaultTarget: B4 -> B11 strategy: SequentialStrategy[avgEffort=-1.0]  <||@
  Comment 131 {DataSection[0x0]}  <||@
  Comment 144 {DataSection[0x8]}  <||@
  Comment 157 {DataSection[0x10]}  <||@
  Comment 170 {DataSection[0x18]}  <||@
  Comment 183 {DataSection[0x20]}  <||@
  Comment 196 block B11 null  <||@
  Comment 196 206 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 196 208 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 200 210 NOP  <||@
  Comment 201 212 NOP  <||@
  Comment 202 214 NOP  <||@
  Comment 203 216 NOP  <||@
  Comment 204 218 NOP  <||@
  Comment 205 220 NOP  <||@
  Comment 206 222 NOP  <||@
  Comment 207 224 NOP  <||@
  Comment 208 226 NOP  <||@
  Comment 209 228 NOP  <||@
  Comment 210 230 NOP  <||@
  Comment 211 232 NOP  <||@
  Comment 212 234 rbx|QWORD = MOV input: [rbx|QWORD + 480] size: QWORD  <||@
  Comment 219 236 rax|QWORD = MOV input: [rbx|QWORD + 64] size: QWORD  <||@
  Comment 223 238 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 226 240 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.]]) temps: [] callTarget: HotSpotMethod<Object.hashCode()> state [bci:48, 2]  <||@
  Comment 226 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 226 INLINE_INVOKE  <||@
  Comment 228 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 236 244 JUMP ~outgoingValues: [] destination: B11 -> B15  <||@
  Comment 236 block B15 null  <||@
  Comment 236 324 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 236 320 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 241 326 NOP  <||@
  Comment 242 328 NOP  <||@
  Comment 243 330 NOP  <||@
  Comment 244 332 NOP  <||@
  Comment 245 334 NOP  <||@
  Comment 246 336 NOP  <||@
  Comment 247 338 NOP  <||@
  Comment 248 340 NOP  <||@
  Comment 249 342 r10|DWORD[_] = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 253 344 rdx|DWORD = MOV input: [r10|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 253 [rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 253 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 261 346 rcx|DWORD[_] = MOV input: [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 264 348 r11|DWORD = MOV input: [rcx|DWORD[_] * 8 + 12] size: DWORD state [bci:52, 2]  <||@
  Comment 264 [rcx:0, rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 264 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 272 350 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9276714352646118 condition: |<| trueDestination: B15 -> B16 falseDestination: B15 -> B17 y: 512 size: DWORD inlinedY: null  <||@
  Comment 284 block B16 null  <||@
  Comment 284 352 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 284 354 NOP  <||@
  Comment 285 356 NOP  <||@
  Comment 286 358 NOP  <||@
  Comment 287 360 r8|DWORD = MOVE input: r11|DWORD moveKind: DWORD  <||@
  Comment 290 362 JUMP ~outgoingValues: [] destination: B16 -> B19  <||@
  Comment 290 block B19 null  <||@
  Comment 290 390 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 290 392 NOP  <||@
  Comment 291 394 NOP  <||@
  Comment 292 396 NOP  <||@
  Comment 293 398 NOP  <||@
  Comment 294 400 NOP  <||@
  Comment 295 402 NOP  <||@
  Comment 296 404 NOP  <||@
  Comment 297 406 NOP  <||@
  Comment 298 408 NOP  <||@
  Comment 299 410 NOP  <||@
  Comment 300 412 r9|DWORD = SHR x: rax|DWORD y: 16 size: DWORD  <||@
  Comment 307 414 rax|DWORD = XOR (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 310 416 r9|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 316 418 r9|DWORD = AND (x: rax|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 319 420 rbx|DWORD = SHL value: r9|DWORD size: DWORD  <||@
  Comment 324 422 rdi|DWORD = INC value: rbx|DWORD size: DWORD  <||@
  Comment 328 424 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9265104511094792 condition: |<| trueDestination: B19 -> B20 falseDestination: B19 -> B23 y: 512 size: DWORD inlinedY: null  <||@
  Comment 340 block B20 null  <||@
  Comment 340 426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 340 428 NOP  <||@
  Comment 341 430 NOP  <||@
  Comment 342 432 NOP  <||@
  Comment 343 434 NOP  <||@
  Comment 344 436 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B20 -> B21 falseDestination: B20 -> B22 size: DWORD  <||@
  Comment 353 block B21 null  <||@
  Comment 353 438 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 353 440 NOP  <||@
  Comment 354 442 NOP  <||@
  Comment 355 444 NOP  <||@
  Comment 356 446 NOP  <||@
  Comment 357 448 r8|DWORD = MOVZXB input: [r9|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 363 450 JUMP ~outgoingValues: [] destination: B21 -> B27  <||@
  Comment 363 block B27 null  <||@
  Comment 363 528 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 363 530 NOP  <||@
  Comment 364 532 NOP  <||@
  Comment 365 534 NOP  <||@
  Comment 366 536 NOP  <||@
  Comment 367 538 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9280325691536253 condition: = trueDestination: B27 -> B28 falseDestination: B27 -> B29 size: DWORD  <||@
  Comment 376 block B28 null  <||@
  Comment 376 540 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 376 542 NOP  <||@
  Comment 377 544 NOP  <||@
  Comment 378 546 NOP  <||@
  Comment 379 548 JUMP ~outgoingValues: [] destination: B28 -> B31  <||@
  Comment 379 block B31 null  <||@
  Comment 379 574 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 379 576 NOP  <||@
  Comment 380 578 NOP  <||@
  Comment 381 580 NOP  <||@
  Comment 382 582 NOP  <||@
  Comment 383 584 NOP  <||@
  Comment 384 586 NOP  <||@
  Comment 385 588 NOP  <||@
  Comment 386 590 rbp|DWORD = DEC value: r8|DWORD size: DWORD  <||@
  Comment 391 592 rax|DWORD = SHL value: stack:32|DWORD size: DWORD  <||@
  Comment 397 594 r13|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 403 596 CMPBRANCH (x: rdx|DWORD, y: r13|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B31 -> B32 falseDestination: B31 -> B73 size: DWORD  <||@
  Comment 412 block B32 null  <||@
  Comment 412 598 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 412 600 NOP  <||@
  Comment 413 602 NOP  <||@
  Comment 414 604 NOP  <||@
  Comment 415 606 NOP  <||@
  Comment 416 608 NOP  <||@
  Comment 417 610 rax|DWORD = INC value: stack:32|DWORD size: DWORD  <||@
  Comment 423 612 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 0.9079605807218463 condition: |<| trueDestination: B32 -> B33 falseDestination: B32 -> B36 y: 512 size: DWORD inlinedY: null  <||@
  Comment 435 block B33 null  <||@
  Comment 435 614 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 435 616 NOP  <||@
  Comment 436 618 NOP  <||@
  Comment 437 620 NOP  <||@
  Comment 438 622 NOP  <||@
  Comment 439 624 CMPBRANCH (x: r11|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B33 -> B34 falseDestination: B33 -> B35 size: DWORD  <||@
  Comment 448 block B34 null  <||@
  Comment 448 626 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 448 628 NOP  <||@
  Comment 449 630 NOP  <||@
  Comment 450 632 NOP  <||@
  Comment 451 634 NOP  <||@
  Comment 452 636 MOVB (x: [r9|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 457 638 JUMP ~outgoingValues: [] destination: B34 -> B40  <||@
  Comment 457 block B40 null  <||@
  Comment 457 712 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 457 714 NOP  <||@
  Comment 458 716 NOP  <||@
  Comment 459 718 NOP  <||@
  Comment 460 720 NOP  <||@
  Comment 461 722 NOP  <||@
  Comment 462 724 NOP  <||@
  Comment 463 726 NOP  <||@
  Comment 464 728 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 471 730 r9|DWORD[_] = MOV input: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: DWORD  <||@
  Comment 476 732 TESTBRANCH (x: r9|DWORD[_], y: r9|DWORD[_]) trueDestinationProbability: 0.09999999999999998 condition: = trueDestination: B40 -> B41 falseDestination: B40 -> B42 size: DWORD  <||@
  Comment 485 block B42 null  <||@
  Comment 485 746 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 485 748 NOP  <||@
  Comment 486 750 NOP  <||@
  Comment 487 752 NOP  <||@
  Comment 488 754 NOP  <||@
  Comment 489 756 NOP  <||@
  Comment 490 758 NOP  <||@
  Comment 491 760 NOP  <||@
  Comment 492 762 rdx|DWORD = MOV input: [r9|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 500 764 rcx|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 510 766 rdx|QWORD = UNCOMPRESSPOINTER (input: rdx|DWORD, ~baseRegister: rcx|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 514 768 JUMP ~outgoingValues: [] destination: B42 -> B43  <||@
  Comment 514 block B43 null  <||@
  Comment 514 770 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 514 772 NOP  <||@
  Comment 515 774 NOP  <||@
  Comment 516 776 NOP  <||@
  Comment 517 778 NOP  <||@
  Comment 518 780 NOP  <||@
  Comment 519 782 rcx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}  <||@
  Comment 519 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>}}  <||@
  Comment 529 784 TESTBRANCH (x: r8|DWORD, y: r8|DWORD) trueDestinationProbability: 0.9334230601943765 condition: = trueDestination: B43 -> B44 falseDestination: B43 -> B47 size: DWORD  <||@
  Comment 538 block B44 null  <||@
  Comment 538 786 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 538 788 NOP  <||@
  Comment 539 790 NOP  <||@
  Comment 540 792 NOP  <||@
  Comment 541 794 NOP  <||@
  Comment 542 796 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.017406949851320852 condition: = trueDestination: B44 -> B45 falseDestination: B44 -> B46 size: QWORD  <||@
  Comment 551 block B46 null  <||@
  Comment 551 834 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 551 836 NOP  <||@
  Comment 552 838 NOP  <||@
  Comment 553 840 NOP  <||@
  Comment 554 842 JUMP ~outgoingValues: [] destination: B46 -> B67  <||@
  Comment 554 block B67 null  <||@
  Comment 554 1408 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 554 1410 NOP  <||@
  Comment 555 1412 NOP  <||@
  Comment 556 1414 NOP  <||@
  Comment 557 1416 NOP  <||@
  Comment 558 1418 NOP  <||@
  Comment 559 1420 NOP  <||@
  Comment 560 1422 NOP  <||@
  Comment 561 1424 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 570 POLL_RETURN_FAR  <||@
  Comment 587 block B5 null  <||@
  Comment 587 106 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 587 108 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 591 110 NOP  <||@
  Comment 592 112 NOP  <||@
  Comment 593 114 NOP  <||@
  Comment 594 116 NOP  <||@
  Comment 595 118 NOP  <||@
  Comment 596 120 NOP  <||@
  Comment 597 122 rsi|QWORD = MOV input: [rdx|QWORD[.]] size: QWORD  <||@
  Comment 600 124 rcx|QWORD = AND x: rsi|QWORD y: 3 size: QWORD  <||@
  Comment 607 126 CMPCONSTBRANCH x: rcx|QWORD trueDestinationProbability: 0.99 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 y: 1 size: QWORD inlinedY: null  <||@
  Comment 617 block B6 null  <||@
  Comment 617 128 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 617 130 NOP  <||@
  Comment 618 132 NOP  <||@
  Comment 619 134 NOP  <||@
  Comment 620 136 NOP  <||@
  Comment 621 138 NOP  <||@
  Comment 622 140 NOP  <||@
  Comment 623 142 rsi|QWORD = SHR x: rsi|QWORD y: 8 size: QWORD  <||@
  Comment 627 144 rsi|DWORD = MOV value: rsi|QWORD size: DWORD  <||@
  Comment 629 146 TESTBRANCH (x: rsi|DWORD, y: rsi|DWORD) trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B6 -> B7 falseDestination: B6 -> B8 size: DWORD  <||@
  Comment 637 block B8 null  <||@
  Comment 637 158 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 637 160 NOP  <||@
  Comment 638 162 NOP  <||@
  Comment 639 164 NOP  <||@
  Comment 640 166 rax|DWORD = MOVE input: rsi|DWORD moveKind: DWORD  <||@
  Comment 642 170 JUMP ~outgoingValues: [] destination: B8 -> B15  <||@
  Comment 647 block B2 null  <||@
  Comment 647 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 647 48 NOP  <||@
  Comment 648 50 NOP  <||@
  Comment 649 52 NOP  <||@
  Comment 650 54 NOP  <||@
  Comment 651 56 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.919390461591214 condition: = trueDestination: B2 -> B3 falseDestination: B2 -> B12 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$1@811395695]  <||@
  Comment 651 {NarrowOop[Equivalence$1@811395695]}  <||@
  Comment 664 block B3 null  <||@
  Comment 664 58 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 664 60 NOP  <||@
  Comment 665 62 NOP  <||@
  Comment 666 64 NOP  <||@
  Comment 667 66 JUMP ~outgoingValues: [] destination: B3 -> B4  <||@
  Comment 672 block B41 null  <||@
  Comment 672 734 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 672 736 NOP  <||@
  Comment 673 738 NOP  <||@
  Comment 674 740 NOP  <||@
  Comment 675 742 rdx|QWORD = MOVE input: Object[null]  <||@
  Comment 682 744 JUMP ~outgoingValues: [] destination: B41 -> B43  <||@
  Comment 687 block B36 null  <||@
  Comment 687 654 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 687 656 NOP  <||@
  Comment 688 658 NOP  <||@
  Comment 689 660 NOP  <||@
  Comment 690 662 NOP  <||@
  Comment 691 664 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B36 -> B37 falseDestination: B36 -> B72 size: DWORD  <||@
  Comment 700 block B37 null  <||@
  Comment 700 666 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 700 668 NOP  <||@
  Comment 701 670 NOP  <||@
  Comment 702 672 NOP  <||@
  Comment 703 674 NOP  <||@
  Comment 704 676 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B37 -> B38 falseDestination: B37 -> B71 size: DWORD  <||@
  Comment 713 block B38 null  <||@
  Comment 713 678 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 713 680 NOP  <||@
  Comment 714 682 NOP  <||@
  Comment 715 684 NOP  <||@
  Comment 716 686 NOP  <||@
  Comment 717 688 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B38 -> B39 falseDestination: B38 -> B70 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 729 block B39 null  <||@
  Comment 729 690 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 729 692 NOP  <||@
  Comment 730 694 NOP  <||@
  Comment 731 696 NOP  <||@
  Comment 732 698 NOP  <||@
  Comment 733 700 NOP  <||@
  Comment 734 702 NOP  <||@
  Comment 735 704 MOVB (x: [rbx|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|DWORD) size: BYTE  <||@
  Comment 739 706 rax|DWORD = SAR x: rax|DWORD y: 8 size: DWORD  <||@
  Comment 742 708 MOVB (x: [rdi|DWORD + rcx|DWORD[_] * 8 + 16], y: rax|BYTE(DWORD)) size: BYTE  <||@
  Comment 746 710 JUMP ~outgoingValues: [] destination: B39 -> B40  <||@
  Comment 751 block B23 null  <||@
  Comment 751 466 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 751 468 NOP  <||@
  Comment 752 470 NOP  <||@
  Comment 753 472 NOP  <||@
  Comment 754 474 NOP  <||@
  Comment 755 476 CMPBRANCH (x: r11|DWORD, y: rbx|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B23 -> B24 falseDestination: B23 -> B78 size: DWORD  <||@
  Comment 764 block B24 null  <||@
  Comment 764 478 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 764 480 NOP  <||@
  Comment 765 482 NOP  <||@
  Comment 766 484 NOP  <||@
  Comment 767 486 NOP  <||@
  Comment 768 488 CMPBRANCH (x: r11|DWORD, y: rdi|DWORD) trueDestinationProbability: 1.0 condition: |>| trueDestination: B24 -> B25 falseDestination: B24 -> B77 size: DWORD  <||@
  Comment 777 block B25 null  <||@
  Comment 777 490 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 777 492 NOP  <||@
  Comment 778 494 NOP  <||@
  Comment 779 496 NOP  <||@
  Comment 780 498 NOP  <||@
  Comment 781 500 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B25 -> B26 falseDestination: B25 -> B76 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 793 block B26 null  <||@
  Comment 793 502 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 793 504 NOP  <||@
  Comment 794 506 NOP  <||@
  Comment 795 508 NOP  <||@
  Comment 796 510 NOP  <||@
  Comment 797 512 NOP  <||@
  Comment 798 514 NOP  <||@
  Comment 799 516 NOP  <||@
  Comment 800 518 r8|DWORD = MOVZXB input: [rdi|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 806 520 r8|DWORD = SHL x: r8|DWORD y: 8 size: DWORD  <||@
  Comment 810 522 rax|DWORD = MOVZXB input: [rbx|DWORD + rcx|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 815 524 r8|DWORD = OR (x: r8|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 818 526 JUMP ~outgoingValues: [] destination: B26 -> B27  <||@
  Comment 823 block B17 null  <||@
  Comment 823 364 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 823 366 NOP  <||@
  Comment 824 368 NOP  <||@
  Comment 825 370 NOP  <||@
  Comment 826 372 NOP  <||@
  Comment 827 374 CMPCONSTBRANCH x: rdx|DWORD trueDestinationProbability: 1.0 condition: |<| trueDestination: B17 -> B18 falseDestination: B17 -> B80 y: 131072 size: DWORD inlinedY: null  <||@
  Comment 839 block B18 null  <||@
  Comment 839 376 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 839 378 NOP  <||@
  Comment 840 380 NOP  <||@
  Comment 841 382 NOP  <||@
  Comment 842 384 NOP  <||@
  Comment 843 386 r8|DWORD = SHR value: r11|DWORD size: DWORD  <||@
  Comment 849 388 JUMP ~outgoingValues: [] destination: B18 -> B19  <||@
  Comment 854 block B29 null  <||@
  Comment 854 550 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 854 552 rax|DWORD = MOVE input: stack:28|DWORD moveKind: DWORD  <||@
  Comment 858 554 NOP  <||@
  Comment 859 556 NOP  <||@
  Comment 860 558 NOP  <||@
  Comment 861 560 NOP  <||@
  Comment 862 562 TESTBRANCH (x: rax|DWORD, y: rax|DWORD) trueDestinationProbability: 0.9197772426249248 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B75 size: DWORD  <||@
  Comment 870 block B30 null  <||@
  Comment 870 564 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 870 566 NOP  <||@
  Comment 871 568 NOP  <||@
  Comment 872 570 NOP  <||@
  Comment 873 572 JUMP ~outgoingValues: [] destination: B30 -> B31  <||@
  Comment 878 block B47 null  <||@
  Comment 878 844 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 878 846 NOP  <||@
  Comment 879 848 NOP  <||@
  Comment 880 850 NOP  <||@
  Comment 881 852 NOP  <||@
  Comment 882 854 CMPBRANCH (x: rcx|QWORD, y: rdx|QWORD) trueDestinationProbability: 0.15602381581763025 condition: = trueDestination: B47 -> B48 falseDestination: B47 -> B52 size: QWORD  <||@
  Comment 891 block B52 null  <||@
  Comment 891 1008 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 891 1010 NOP  <||@
  Comment 892 1012 NOP  <||@
  Comment 893 1014 NOP  <||@
  Comment 894 1016 NOP  <||@
  Comment 895 1018 NOP  <||@
  Comment 896 1020 NOP  <||@
  Comment 897 1022 NOP  <||@
  Comment 898 1024 NOP  <||@
  Comment 899 1026 rdx|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 906 1028 r8|QWORD = LEA address: [rdx|QWORD + 24] size: QWORD  <||@
  Comment 910 1030 CMPBRANCH (x: r8|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B54 size: QWORD  <||@
  Comment 923 block B54 null  <||@
  Comment 923 1062 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 923 1064 NOP  <||@
  Comment 924 1066 NOP  <||@
  Comment 925 1068 NOP  <||@
  Comment 926 1070 NOP  <||@
  Comment 927 1072 NOP  <||@
  Comment 928 1074 NOP  <||@
  Comment 929 1076 NOP  <||@
  Comment 930 1078 NOP  <||@
  Comment 931 1080 NOP  <||@
  Comment 932 1082 NOP  <||@
  Comment 933 1084 MOV (x: [r15|QWORD + 440], y: r8|QWORD) size: QWORD  <||@
  Comment 940 1086 AMD64PREFETCH ~address: [rdx|QWORD + 280] instr: 0  <||@
  Comment 947 1088 MOV x: [rdx|QWORD] y: 1 size: QWORD  <||@
  Comment 954 1090 MOV x: [rdx|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 954 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 961 1092 MOV x: [rdx|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 968 1094 MOV x: [rdx|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 976 1096 rdx|QWORD[.] = MOVE input: rdx|QWORD moveKind: QWORD  <||@
  Comment 976 1098 JUMP ~outgoingValues: [] destination: B54 -> B55  <||@
  Comment 976 block B55 null  <||@
  Comment 976 1100 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 976 1102 NOP  <||@
  Comment 977 1104 NOP  <||@
  Comment 978 1106 NOP  <||@
  Comment 979 1108 NOP  <||@
  Comment 980 1110 NOP  <||@
  Comment 981 1112 NOP  <||@
  Comment 982 1114 NOP  <||@
  Comment 983 1116 NOP  <||@
  Comment 984 1118 NOP  <||@
  Comment 985 1120 NOP  <||@
  Comment 986 1122 NOP  <||@
  Comment 987 1124 NOP  <||@
  Comment 988 1126 NOP  <||@
  Comment 989 1128 MOV (x: [rdx|QWORD[.] + 16], y: r9|DWORD[_]) size: DWORD  <||@
  Comment 993 1130 MOV (x: [rdx|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 996 1132 r10|DWORD = MOV input: [r10|DWORD[_] * 8 + 8] size: DWORD  <||@
  Comment 1004 1134 r8|QWORD = MOVE input: long[140154094223360|0x7f782b000000]  <||@
  Comment 1014 1136 r10|QWORD = UNCOMPRESSPOINTER (input: r10|DWORD, ~baseRegister: r8|QWORD) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 140154094223360 shift: 0  <||@
  Comment 1018 1138 r10|QWORD = MOV input: [r10|QWORD + 208] size: QWORD  <||@
  Comment 1025 1140 r8|DWORD = MOV input: [r10|QWORD + 20] size: DWORD  <||@
  Comment 1029 1142 r9|QWORD = MOVSXD value: r8|DWORD size: QWORD  <||@
  Comment 1032 1144 CMPBRANCH (x: r10|QWORD, y: [rcx|QWORD + r9|QWORD * 1]) trueDestinationProbability: 0.5 condition: = trueDestination: B55 -> B56 falseDestination: B55 -> B57 size: QWORD  <||@
  Comment 1042 block B57 null  <||@
  Comment 1042 1156 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1042 1158 NOP  <||@
  Comment 1043 1160 NOP  <||@
  Comment 1044 1162 NOP  <||@
  Comment 1045 1164 NOP  <||@
  Comment 1046 1166 CMPCONSTBRANCH x: r8|DWORD trueDestinationProbability: 1.0 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B68 y: 32 size: DWORD inlinedY: null  <||@
  Comment 1056 block B58 null  <||@
  Comment 1056 1168 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1056 1170 NOP  <||@
  Comment 1057 1172 NOP  <||@
  Comment 1058 1174 NOP  <||@
  Comment 1059 1176 NOP  <||@
  Comment 1060 1178 CMPBRANCH (x: rcx|QWORD, y: r10|QWORD) trueDestinationProbability: 0.5 condition: = trueDestination: B58 -> B59 falseDestination: B58 -> B60 size: QWORD  <||@
  Comment 1069 block B60 null  <||@
  Comment 1069 1190 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1069 1192 NOP  <||@
  Comment 1070 1194 NOP  <||@
  Comment 1071 1196 NOP  <||@
  Comment 1072 1198 NOP  <||@
  Comment 1073 1200 r8|QWORD = MOVE input: long[140154100615680|0x7f782b618a00]  <||@
  Comment 1083 1202 r9|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1089 1204 JUMP ~outgoingValues: [] destination: B60 -> B61  <||@
  Comment 1094 block B62 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1094 1218 [] = LABEL alignment: 32 numbPhis: 0 label: ?  <||@
  Comment 1120 1220 NOP  <||@
  Comment 1121 1222 NOP  <||@
  Comment 1122 1224 NOP  <||@
  Comment 1123 1226 NOP  <||@
  Comment 1124 1228 NOP  <||@
  Comment 1125 1230 NOP  <||@
  Comment 1126 1232 rbx|QWORD = MOVSXD value: r9|DWORD size: QWORD  <||@
  Comment 1129 1234 rbx|QWORD = MOV input: [r8|QWORD + rbx|QWORD * 8 + 8] size: QWORD  <||@
  Comment 1134 1236 CMPBRANCH (x: r10|QWORD, y: rbx|QWORD) trueDestinationProbability: 0.4 condition: = trueDestination: B62 -> B64 falseDestination: B62 -> B63 size: QWORD  <||@
  Comment 1143 block B63 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1143 1238 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1143 1240 NOP  <||@
  Comment 1144 1242 NOP  <||@
  Comment 1145 1244 NOP  <||@
  Comment 1146 1246 NOP  <||@
  Comment 1147 1248 r9|DWORD = INC value: r9|DWORD size: DWORD  <||@
  Comment 1150 1250 JUMP ~outgoingValues: [] destination: B63 -> B61  <||@
  Comment 1150 block B61 loop 0 depth 1 header:598|LoopBegin  <||@
  Comment 1150 1206 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1150 1208 NOP  <||@
  Comment 1151 1210 NOP  <||@
  Comment 1152 1212 NOP  <||@
  Comment 1153 1214 NOP  <||@
  Comment 1154 1216 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 1.0 condition: < trueDestination: B61 -> B62 falseDestination: B61 -> B65 size: DWORD  <||@
  Comment 1164 block B56 null  <||@
  Comment 1164 1146 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1164 1148 NOP  <||@
  Comment 1165 1150 NOP  <||@
  Comment 1166 1152 NOP  <||@
  Comment 1167 1154 JUMP ~outgoingValues: [] destination: B56 -> B66  <||@
  Comment 1167 block B66 null  <||@
  Comment 1167 1276 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1167 1278 NOP  <||@
  Comment 1168 1280 NOP  <||@
  Comment 1169 1282 NOP  <||@
  Comment 1170 1284 NOP  <||@
  Comment 1171 1286 NOP  <||@
  Comment 1172 1288 NOP  <||@
  Comment 1173 1290 NOP  <||@
  Comment 1174 1292 NOP  <||@
  Comment 1175 1294 NOP  <||@
  Comment 1176 1296 NOP  <||@
  Comment 1177 1298 NOP  <||@
  Comment 1178 1300 NOP  <||@
  Comment 1179 1302 NOP  <||@
  Comment 1180 1304 NOP  <||@
  Comment 1181 1306 NOP  <||@
  Comment 1182 1308 NOP  <||@
  Comment 1183 1310 NOP  <||@
  Comment 1184 1312 NOP  <||@
  Comment 1185 1314 NOP  <||@
  Comment 1186 1316 NOP  <||@
  Comment 1187 1318 NOP  <||@
  Comment 1188 1320 NOP  <||@
  Comment 1189 1322 NOP  <||@
  Comment 1190 1324 NOP  <||@
  Comment 1191 1326 NOP  <||@
  Comment 1192 1328 NOP  <||@
  Comment 1193 1330 NOP  <||@
  Comment 1194 1332 NOP  <||@
  Comment 1195 1334 NOP  <||@
  Comment 1196 1336 NOP  <||@
  Comment 1197 1338 NOP  <||@
  Comment 1198 1340 NOP  <||@
  Comment 1199 1342 NOP  <||@
  Comment 1200 1344 NOP  <||@
  Comment 1201 1346 NOP  <||@
  Comment 1202 1348 NOP  <||@
  Comment 1203 1350 NOP  <||@
  Comment 1204 1352 NOP  <||@
  Comment 1205 1354 NOP  <||@
  Comment 1206 1356 NOP  <||@
  Comment 1207 1358 NOP  <||@
  Comment 1208 1360 NOP  <||@
  Comment 1209 1362 NOP  <||@
  Comment 1210 1364 NOP  <||@
  Comment 1211 1366 NOP  <||@
  Comment 1212 1368 NOP  <||@
  Comment 1213 1370 NOP  <||@
  Comment 1214 1372 NOP  <||@
  Comment 1215 1374 NOP  <||@
  Comment 1216 1376 NOP  <||@
  Comment 1217 1378 NOP  <||@
  Comment 1218 1380 NOP  <||@
  Comment 1219 1382 NOP  <||@
  Comment 1220 1384 NOP  <||@
  Comment 1221 1386 NOP  <||@
  Comment 1222 1388 NOP  <||@
  Comment 1223 1390 NOP  <||@
  Comment 1224 1392 NOP  <||@
  Comment 1225 1394 NOP  <||@
  Comment 1226 1396 AMD64G1PREWRITEBARRIER (~address: [r11|QWORD[.] + r13|DWORD * 4 + 16], ~expectedObject: -) {temp: rsi|QWORD, temp2: r10|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51  <||@
  Comment 1284 1398 rsi|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1291 1400 MOV (x: [r11|QWORD[.] + r13|DWORD * 4 + 16], y: rsi|DWORD[_]) size: DWORD  <||@
  Comment 1296 1402 rsi|QWORD[.+] = LEA address: [r11|QWORD[.] + r13|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1301 1404 AMD64G1POSTWRITEBARRIER (~address: rsi|QWORD[.+], ~newValue: rdx|QWORD[.]) {temp: r10|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@50c13b51  <||@
  Comment 1386 1406 JUMP ~outgoingValues: [] destination: B66 -> B67  <||@
  Comment 1391 block B45 null  <||@
  Comment 1391 798 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1391 800 NOP  <||@
  Comment 1392 802 NOP  <||@
  Comment 1393 804 NOP  <||@
  Comment 1394 806 NOP  <||@
  Comment 1395 808 NOP  <||@
  Comment 1396 810 NOP  <||@
  Comment 1397 812 NOP  <||@
  Comment 1398 814 NOP  <||@
  Comment 1399 816 NOP  <||@
  Comment 1400 818 NOP  <||@
  Comment 1401 820 NOP  <||@
  Comment 1402 822 NOP  <||@
  Comment 1403 824 rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1411 826 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1417 828 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1421 830 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:157]  <||@
  Comment 1423 {HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>}  <||@
  Comment 1423 INVOKESPECIAL  <||@
  Comment 1428 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:593) [bci: 157, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1436 832 JUMP ~outgoingValues: [] destination: B45 -> B67  <||@
  Comment 1441 block B59 null  <||@
  Comment 1441 1180 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1441 1182 NOP  <||@
  Comment 1442 1184 NOP  <||@
  Comment 1443 1186 NOP  <||@
  Comment 1444 1188 JUMP ~outgoingValues: [] destination: B59 -> B66  <||@
  Comment 1449 block B64 null  <||@
  Comment 1449 1252 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1449 1254 NOP  <||@
  Comment 1450 1256 NOP  <||@
  Comment 1451 1258 NOP  <||@
  Comment 1452 1260 NOP  <||@
  Comment 1453 1262 MOV (x: [rcx|QWORD + 32], y: r10|QWORD) size: QWORD  <||@
  Comment 1457 1264 JUMP ~outgoingValues: [] destination: B64 -> B66  <||@
  Comment 1462 block B12 null  <||@
  Comment 1462 246 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1462 248 rax|DWORD = MOVE input: r8|DWORD moveKind: DWORD  <||@
  Comment 1465 250 stack:32|DWORD = MOVE input: rcx|DWORD moveKind: DWORD  <||@
  Comment 1469 252 NOP  <||@
  Comment 1470 254 NOP  <||@
  Comment 1471 256 NOP  <||@
  Comment 1472 258 NOP  <||@
  Comment 1473 260 CMPCONSTBRANCH x: r10|DWORD[_] trueDestinationProbability: 0.0 condition: = trueDestination: B12 -> B13 falseDestination: B12 -> B14 y: -559030611 size: DWORD inlinedY: NarrowOop[Equivalence$3@441713316]  <||@
  Comment 1473 {NarrowOop[Equivalence$3@441713316]}  <||@
  Comment 1486 block B14 null  <||@
  Comment 1486 288 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1486 290 NOP  <||@
  Comment 1487 292 NOP  <||@
  Comment 1488 294 NOP  <||@
  Comment 1489 296 NOP  <||@
  Comment 1490 298 NOP  <||@
  Comment 1491 300 NOP  <||@
  Comment 1492 302 NOP  <||@
  Comment 1493 304 NOP  <||@
  Comment 1494 306 NOP  <||@
  Comment 1495 308 NOP  <||@
  Comment 1496 310 NOP  <||@
  Comment 1497 312 NOP  <||@
  Comment 1498 314 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1502 316 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1505 318 rax|DWORD = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<Equivalence.hashCode(Object)> invokeKind: Virtual config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:40, 2]  <||@
  Comment 1505 INVOKEVIRTUAL  <||@
  Comment 1515 {HotSpotMethod<Equivalence.hashCode(Object)>}  <||@
  Comment 1520 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:410) [bci: 40, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1528 322 JUMP ~outgoingValues: [] destination: B14 -> B15  <||@
  Comment 1533 block B48 null  <||@
  Comment 1533 856 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1533 858 NOP  <||@
  Comment 1534 860 NOP  <||@
  Comment 1535 862 NOP  <||@
  Comment 1536 864 NOP  <||@
  Comment 1537 866 NOP  <||@
  Comment 1538 868 NOP  <||@
  Comment 1539 870 NOP  <||@
  Comment 1540 872 NOP  <||@
  Comment 1541 874 rsi|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 1548 876 rdx|QWORD = LEA address: [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1552 878 CMPBRANCH (x: rdx|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B48 -> B49 falseDestination: B48 -> B50 size: QWORD  <||@
  Comment 1565 block B50 null  <||@
  Comment 1565 908 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1565 910 NOP  <||@
  Comment 1566 912 NOP  <||@
  Comment 1567 914 NOP  <||@
  Comment 1568 916 NOP  <||@
  Comment 1569 918 NOP  <||@
  Comment 1570 920 NOP  <||@
  Comment 1571 922 NOP  <||@
  Comment 1572 924 NOP  <||@
  Comment 1573 926 NOP  <||@
  Comment 1574 928 NOP  <||@
  Comment 1575 930 MOV (x: [r15|QWORD + 440], y: rdx|QWORD) size: QWORD  <||@
  Comment 1582 932 AMD64PREFETCH ~address: [rsi|QWORD + 280] instr: 0  <||@
  Comment 1589 934 MOV x: [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1596 936 MOV x: [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}  <||@
  Comment 1596 {meta{HotSpotType<Lorg/graalvm/collections/EconomicMapImpl$CollisionLink;, resolved>;compressed}}  <||@
  Comment 1603 938 MOV x: [rsi|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 1610 940 MOV x: [rsi|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 1618 942 rsi|QWORD[.] = MOVE input: rsi|QWORD moveKind: QWORD  <||@
  Comment 1618 944 JUMP ~outgoingValues: [] destination: B50 -> B51  <||@
  Comment 1618 block B51 null  <||@
  Comment 1618 946 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 1618 948 NOP  <||@
  Comment 1619 950 NOP  <||@
  Comment 1620 952 NOP  <||@
  Comment 1621 954 NOP  <||@
  Comment 1622 956 NOP  <||@
  Comment 1623 958 NOP  <||@
  Comment 1624 960 NOP  <||@
  Comment 1625 962 NOP  <||@
  Comment 1626 964 NOP  <||@
  Comment 1627 966 NOP  <||@
  Comment 1628 968 NOP  <||@
  Comment 1629 970 NOP  <||@
  Comment 1630 972 NOP  <||@
  Comment 1631 974 NOP  <||@
  Comment 1632 976 NOP  <||@
  Comment 1633 978 NOP  <||@
  Comment 1634 980 NOP  <||@
  Comment 1635 982 NOP  <||@
  Comment 1636 984 rdx|DWORD[_] = MOV input: [r9|DWORD[_] * 8 + 16] size: DWORD  <||@
  Comment 1644 986 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@20f1b0f encoding: base: 0 shift: 3  <||@
  Comment 1648 988 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1651 992 rcx|DWORD = MOVE input: rbp|DWORD moveKind: DWORD  <||@
  Comment 1653 994 stack:48|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1658 996 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD] temps: [] callTarget: HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:104]  <||@
  Comment 1659 {HotSpotMethod<EconomicMapImpl$CollisionLink.<init>(Object, int)>}  <||@
  Comment 1659 INVOKESPECIAL  <||@
  Comment 1664 [stack:16, stack:24]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 104, duringCall: true, rethrow: false]
              |0                  |1               |2                  |3  |4  |5  |6  |7 
     locals:  |-                  |-               |-                  |-  |-  |-  |-  |- 
     stack:   |stack:40|QWORD[.]  |stack:32|DWORD  |stack:48|QWORD[.]  |   |   |   |   |    <||@
  Comment 1672 998 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1677 1000 rdx|DWORD = MOVE input: stack:32|DWORD moveKind: DWORD  <||@
  Comment 1681 1002 rcx|QWORD[.] = MOVE input: stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1686 1004 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|DWORD, rcx|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:107]  <||@
  Comment 1687 {HotSpotMethod<EconomicMapImpl.setRawValue(int, Object)>}  <||@
  Comment 1687 INVOKESPECIAL  <||@
  Comment 1692 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:586) [bci: 107, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1700 1006 JUMP ~outgoingValues: [] destination: B51 -> B67  <||@
  Comment 1705 block B75 null  <||@
  Comment 1705 1536 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1705 1538 NOP  <||@
  Comment 1706 1540 NOP  <||@
  Comment 1707 1542 NOP  <||@
  Comment 1708 1544 NOP  <||@
  Comment 1709 1546 NOP  <||@
  Comment 1710 1548 NOP  <||@
  Comment 1711 1550 NOP  <||@
  Comment 1712 1552 NOP  <||@
  Comment 1713 1554 NOP  <||@
  Comment 1714 1556 NOP  <||@
  Comment 1715 1558 NOP  <||@
  Comment 1716 1560 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1721 1562 - = CALL_DIRECT parameters: [rsi|QWORD[.]] temps: [] callTarget: HotSpotMethod<EconomicMapImpl.createHash()> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:28]  <||@
  Comment 1723 {HotSpotMethod<EconomicMapImpl.createHash()>}  <||@
  Comment 1723 INVOKESPECIAL  <||@
  Comment 1728 []at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:577) [bci: 28, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4  |5  |6  |7 
     locals:  |-  |-  |-  |-  |-  |-  |-  |-   <||@
  Comment 1736 1564 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 1745 POLL_RETURN_FAR  <||@
  Comment 1762 block B9 null  <||@
  Comment 1762 172 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1762 174 NOP  <||@
  Comment 1763 176 NOP  <||@
  Comment 1764 178 NOP  <||@
  Comment 1765 180 JUMP ~outgoingValues: [] destination: B9 -> B10  <||@
  Comment 1765 block B10 null  <||@
  Comment 1765 182 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1765 184 NOP  <||@
  Comment 1766 186 NOP  <||@
  Comment 1767 188 NOP  <||@
  Comment 1768 190 NOP  <||@
  Comment 1769 192 NOP  <||@
  Comment 1770 194 NOP  <||@
  Comment 1771 196 NOP  <||@
  Comment 1772 198 rsi|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1775 200 rax|DWORD = NEAR_FOREIGN_CALL parameters: [rsi|QWORD[.]] temps: [r10|ILLEGAL, rax|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL state [bci:48, 2]  <||@
  Comment 1775 {Stub<identity_hashcode(Object)int>@0x7f78998dd580:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=r10|ILLEGAL,rax|ILLEGAL}  <||@
  Comment 1780 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 48, duringCall: true, rethrow: false]
              |0                  |1  |2 
     locals:  |stack:40|QWORD[.]  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1788 204 JUMP ~outgoingValues: [] destination: B10 -> B15  <||@
  Comment 1793 block B7 null  <||@
  Comment 1793 148 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1793 150 NOP  <||@
  Comment 1794 152 NOP  <||@
  Comment 1795 154 NOP  <||@
  Comment 1796 156 JUMP ~outgoingValues: [] destination: B7 -> B10  <||@
  Comment 1798 block B53 null  <||@
  Comment 1798 1032 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1798 1034 NOP  <||@
  Comment 1799 1036 NOP  <||@
  Comment 1800 1038 NOP  <||@
  Comment 1801 1040 NOP  <||@
  Comment 1802 1042 NOP  <||@
  Comment 1803 1044 NOP  <||@
  Comment 1804 1046 NOP  <||@
  Comment 1805 1048 NOP  <||@
  Comment 1806 1050 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1809 1052 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38]  <||@
  Comment 1809 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1814 [r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1822 1054 NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38]  <||@
  Comment 1822 [rax:0, r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1822 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1824 1056 rdx|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1827 1058 rsi|QWORD[.] = MOVE input: stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1832 1060 JUMP ~outgoingValues: [] destination: B53 -> B55  <||@
  Comment 1837 block B49 null  <||@
  Comment 1837 880 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1837 882 NOP  <||@
  Comment 1838 884 NOP  <||@
  Comment 1839 886 NOP  <||@
  Comment 1840 888 NOP  <||@
  Comment 1841 890 NOP  <||@
  Comment 1842 892 NOP  <||@
  Comment 1843 894 NOP  <||@
  Comment 1844 896 NOP  <||@
  Comment 1845 898 rsi|QWORD = MOVE input: rcx|QWORD moveKind: QWORD  <||@
  Comment 1848 900 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:111, 38]  <||@
  Comment 1848 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 1853 [r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1861 902 NULLCHECK address: [rax|QWORD[.]] state [bci:111, 38]  <||@
  Comment 1861 [rax:0, r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 1861 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1863 904 rsi|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1866 906 JUMP ~outgoingValues: [] destination: B49 -> B51  <||@
  Comment 1871 block B73 null  <||@
  Comment 1871 1500 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1871 1502 NOP  <||@
  Comment 1872 1504 NOP  <||@
  Comment 1873 1506 NOP  <||@
  Comment 1874 1508 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1881 1510 r10|DWORD = MOVE input: int[-70939|0xfffffffffffeeae5]  <||@
  Comment 1887 1512 JUMP ~outgoingValues: [] destination: B73 -> B74  <||@
  Comment 1887 block B74 null  <||@
  Comment 1887 1514 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1887 1516 NOP  <||@
  Comment 1888 1518 NOP  <||@
  Comment 1889 1520 NOP  <||@
  Comment 1890 1522 NOP  <||@
  Comment 1891 1524 NOP  <||@
  Comment 1892 1526 NOP  <||@
  Comment 1893 1528 NOP  <||@
  Comment 1894 1530 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1901 1532 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1908 1534 DEOPT info [bci:32]  <||@
  Comment 1908 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1913 [stack:24]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 32, duringCall: false, rethrow: false]
              |0                  |1  |2               |3  |4         |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |r9|DWORD  |rbp|DWORD  |-  |-   <||@
  Comment 1921 block B77 null  <||@
  Comment 1921 1580 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1921 1582 NOP  <||@
  Comment 1922 1584 NOP  <||@
  Comment 1923 1586 NOP  <||@
  Comment 1924 1588 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1931 1590 r10|DWORD = MOVE input: int[-96795|0xfffffffffffe85e5]  <||@
  Comment 1937 1592 JUMP ~outgoingValues: [] destination: B77 -> B79  <||@
  Comment 1937 block B79 null  <||@
  Comment 1937 1608 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 1937 1610 NOP  <||@
  Comment 1938 1612 NOP  <||@
  Comment 1939 1614 NOP  <||@
  Comment 1940 1616 NOP  <||@
  Comment 1941 1618 NOP  <||@
  Comment 1942 1620 NOP  <||@
  Comment 1943 1622 NOP  <||@
  Comment 1944 1624 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 1951 1626 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 1958 1628 DEOPT info [bci:64, 2]  <||@
  Comment 1958 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 1963 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:416) [bci: 64, duringCall: false, rethrow: false]
              |0          |1         |2 
     locals:  |-          |-         |- 
     stack:   |rax|DWORD  |r8|DWORD  |  
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 1971 block B78 null  <||@
  Comment 1971 1594 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1971 1596 NOP  <||@
  Comment 1972 1598 NOP  <||@
  Comment 1973 1600 NOP  <||@
  Comment 1974 1602 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1981 1604 r10|DWORD = MOVE input: int[-94235|0xfffffffffffe8fe5]  <||@
  Comment 1987 1606 JUMP ~outgoingValues: [] destination: B78 -> B79  <||@
  Comment 1989 block B70 null  <||@
  Comment 1989 1458 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 1989 1460 NOP  <||@
  Comment 1990 1462 NOP  <||@
  Comment 1991 1464 NOP  <||@
  Comment 1992 1466 r11|QWORD = MOVE input: long[3220|0xc94]  <||@
  Comment 1999 1468 r10|DWORD = MOVE input: int[-138515|0xfffffffffffde2ed]  <||@
  Comment 2005 1470 JUMP ~outgoingValues: [] destination: B70 -> B74  <||@
  Comment 2007 block B72 null  <||@
  Comment 2007 1486 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2007 1488 NOP  <||@
  Comment 2008 1490 NOP  <||@
  Comment 2009 1492 NOP  <||@
  Comment 2010 1494 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2017 1496 r10|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 2023 1498 JUMP ~outgoingValues: [] destination: B72 -> B74  <||@
  Comment 2028 block B76 null  <||@
  Comment 2028 1566 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2028 1568 NOP  <||@
  Comment 2029 1570 NOP  <||@
  Comment 2030 1572 NOP  <||@
  Comment 2031 1574 r11|QWORD = MOVE input: long[1940|0x794]  <||@
  Comment 2038 1576 r10|DWORD = MOVE input: int[-137491|0xfffffffffffde6ed]  <||@
  Comment 2044 1578 JUMP ~outgoingValues: [] destination: B76 -> B79  <||@
  Comment 2046 block B22 null  <||@
  Comment 2046 452 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2046 454 NOP  <||@
  Comment 2047 456 NOP  <||@
  Comment 2048 458 NOP  <||@
  Comment 2049 460 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2056 462 r10|DWORD = MOVE input: int[-90907|0xfffffffffffe9ce5]  <||@
  Comment 2062 464 JUMP ~outgoingValues: [] destination: B22 -> B79  <||@
  Comment 2064 block B65 null  <||@
  Comment 2064 1266 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2064 1268 NOP  <||@
  Comment 2065 1270 NOP  <||@
  Comment 2066 1272 NOP  <||@
  Comment 2067 1274 JUMP ~outgoingValues: [] destination: B65 -> B69  <||@
  Comment 2067 block B69 null  <||@
  Comment 2067 1436 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2067 1438 NOP  <||@
  Comment 2068 1440 NOP  <||@
  Comment 2069 1442 NOP  <||@
  Comment 2070 1444 NOP  <||@
  Comment 2071 1446 NOP  <||@
  Comment 2072 1448 NOP  <||@
  Comment 2073 1450 NOP  <||@
  Comment 2074 1452 MOV x: [r15|QWORD + 1156] y: -80171 size: DWORD  <||@
  Comment 2085 1454 MOV x: [r15|QWORD + 1168] y: 0 size: QWORD  <||@
  Comment 2096 1456 DEOPT info [bci:111, 38]  <||@
  Comment 2096 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2101 [stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2109 block B71 null  <||@
  Comment 2109 1472 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2109 1474 NOP  <||@
  Comment 2110 1476 NOP  <||@
  Comment 2111 1478 NOP  <||@
  Comment 2112 1480 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2119 1482 r10|DWORD = MOVE input: int[-87579|0xfffffffffffea9e5]  <||@
  Comment 2125 1484 JUMP ~outgoingValues: [] destination: B71 -> B74  <||@
  Comment 2130 block B35 null  <||@
  Comment 2130 640 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2130 642 NOP  <||@
  Comment 2131 644 NOP  <||@
  Comment 2132 646 NOP  <||@
  Comment 2133 648 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2140 650 r10|DWORD = MOVE input: int[-81947|0xfffffffffffebfe5]  <||@
  Comment 2146 652 JUMP ~outgoingValues: [] destination: B35 -> B74  <||@
  Comment 2151 block B13 null  <||@
  Comment 2151 262 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2151 268 NOP  <||@
  Comment 2152 270 NOP  <||@
  Comment 2153 272 NOP  <||@
  Comment 2154 274 NOP  <||@
  Comment 2155 276 NOP  <||@
  Comment 2156 278 NOP  <||@
  Comment 2157 280 NOP  <||@
  Comment 2158 282 MOV x: [r15|QWORD + 1156] y: -136467 size: DWORD  <||@
  Comment 2169 284 MOV x: [r15|QWORD + 1168] y: 20 size: QWORD  <||@
  Comment 2180 286 DEOPT info [bci:0]  <||@
  Comment 2180 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2185 [rdx:0, rsi:0]at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2193 block B80 null  <||@
  Comment 2193 1630 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2193 1632 NOP  <||@
  Comment 2194 1634 NOP  <||@
  Comment 2195 1636 NOP  <||@
  Comment 2196 1638 NOP  <||@
  Comment 2197 1640 NOP  <||@
  Comment 2198 1642 NOP  <||@
  Comment 2199 1644 NOP  <||@
  Comment 2200 1646 MOV x: [r15|QWORD + 1156] y: -165139 size: DWORD  <||@
  Comment 2211 1648 MOV x: [r15|QWORD + 1168] y: 1300 size: QWORD  <||@
  Comment 2222 1650 DEOPT info [bci:52, 2]  <||@
  Comment 2222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2227 [stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:40|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1  |2               |3               |4  |5  |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2235 block B68 null  <||@
  Comment 2235 1426 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 2235 1428 NOP  <||@
  Comment 2236 1430 NOP  <||@
  Comment 2237 1432 NOP  <||@
  Comment 2238 1434 JUMP ~outgoingValues: [] destination: B68 -> B69  <||@
  Comment 2248 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 2273 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2283 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 2298 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 2323 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 2351 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2356 [rdx:0, rsi:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:413) [bci: 47, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |Object[null]  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2          |3         |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |rcx|DWORD  |r8|DWORD  |-  |-  |-  |-   <||@
  Comment 2386 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2391 [rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2421 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2426 [rcx:0, rsi:0, r10:0, stack:24]at org.graalvm.collections.EconomicMapImpl.getHashIndex(EconomicMapImpl.java:415) [bci: 52, duringCall: false, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |rax|DWORD 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:574) [bci: 2, duringCall: true, rethrow: false]
              |0             |1  |2               |3               |4  |5  |6  |7 
     locals:  |rsi|QWORD[.]  |-  |stack:32|DWORD  |stack:28|DWORD  |-  |-  |-  |-   <||@
  Comment 2456 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2461 [rax:0, r9:0, r10:0, r11:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2491 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 2496 [rax:0, r9:0, stack:24]at org.graalvm.collections.EconomicMapImpl.setHashArray(EconomicMapImpl.java:347) [bci: 111, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at org.graalvm.collections.EconomicMapImpl.putHashEntry(EconomicMapImpl.java:580) [bci: 38, duringCall: true, rethrow: false]
              |0                  |1  |2               |3  |4  |5          |6  |7 
     locals:  |stack:40|QWORD[.]  |-  |stack:32|DWORD  |-  |-  |rbp|DWORD  |-  |-   <||@
  Comment 2504 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 2504 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 2510 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 2510 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
