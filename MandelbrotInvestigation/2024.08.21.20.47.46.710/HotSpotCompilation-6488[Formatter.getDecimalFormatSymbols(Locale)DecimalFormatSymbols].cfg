begin_compilation
  name " HotSpotCompilation-6488[java.util.Formatter.getDecimalFormatSymbols(Locale)]"
  method "HotSpotCompilation-6488[java.util.Formatter.getDecimalFormatSymbols(Locale)]"
  date 1724269754422
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a64  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
rawvalue: Class:java.util.Formatter
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:java.util.Formatter]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a25 
index: - 
=== Succesors ===
=== Usages ===
a64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a25 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a64 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.text.DecimalFormatSymbols
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.DFS
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
stamp: n# java.text.DecimalFormatSymbols
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v68 
lastLocationAccess: - 
=== Succesors ===
next: a65 
=== Usages ===
a29 v69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v68 lastLocationAccess: - #next: a65  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: getstatic
code: ResolvedJavaMethodBytecode<Formatter.getDecimalFormatSymbols(Locale)>
localsSize: 2
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2026
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v71 a65 v67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a64 
=== Succesors ===
=== Usages ===
a65 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a65 <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.Locale
barrierType: NONE
deoptReasonAndAction: int[-11027|0xffffffffffffd4ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: DecimalFormatSymbols.locale
memoryOrder: PLAIN
nodeSourcePosition: at java.text.DecimalFormatSymbols.getLocale(DecimalFormatSymbols.java:197) [bci: 1]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 9]
stamp: n# java.util.Locale
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v69 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
a33 v70 
=== Predecessor ===
a64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v69 lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a65 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v70 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
a65 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v70 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.text.DecimalFormatSymbols.getLocale(DecimalFormatSymbols.java:197) [bci: 1]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 9]
op: Uncompress
stamp: a# java.util.Locale
=== Inputs ===
value: a65 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a65  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a33 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a33  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a29 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
op: Uncompress
stamp: a# java.text.DecimalFormatSymbols
=== Inputs ===
value: a64 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a64  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2028) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: a29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a29  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 47
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 5]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5fdbb341]: UnreachedCode@6[HotSpotMethod<Locale.equals(Object)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a64 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a64  <|@  <|@
f <@~|@floating>@ <|@
tid a25 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
rawvalue: Class:java.util.Formatter
stableDimension: 0
stamp: a!# java.lang.Class
stampKind: a java.lang.Object
value: Object[Class:java.util.Formatter]
=== Inputs ===
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v68 <|@
result [v1|QWORD[.] + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
stamp: void*
stride: S1
=== Inputs ===
base: a25 
index: - 
=== Succesors ===
=== Usages ===
a64 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a25 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a64 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.text.DecimalFormatSymbols
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Formatter.DFS
memoryOrder: PLAIN
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
stamp: n# java.text.DecimalFormatSymbols
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v68 
lastLocationAccess: - 
=== Succesors ===
next: a65 
=== Usages ===
a29 v69 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v68 lastLocationAccess: - #next: a65  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a# java.util.Locale
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 v20 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: getstatic
code: ResolvedJavaMethodBytecode<Formatter.getDecimalFormatSymbols(Locale)>
localsSize: 2
locksSize: 0
sourceFile: Formatter.java
sourceLine: 2026
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v71 a65 v67 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v69 <|@
result [v2|DWORD[_] * 8 + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a64 
=== Succesors ===
=== Usages ===
a65 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a64  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a65 <|@
result v3|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n# java.util.Locale
barrierType: NONE
deoptReasonAndAction: int[-11027|0xffffffffffffd4ed]
deoptSpeculation: long[20|0x14]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: DecimalFormatSymbols.locale
memoryOrder: PLAIN
nodeSourcePosition: at java.text.DecimalFormatSymbols.getLocale(DecimalFormatSymbols.java:197) [bci: 1]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 9]
stamp: n# java.util.Locale
usedAsNullCheck: true
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v69 
lastLocationAccess: - 
=== Succesors ===
next: v67 
=== Usages ===
a33 v70 
=== Predecessor ===
a64 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v69 lastLocationAccess: - #next: v67  <|@  <|@
f <@~|@floating>@ <|@
tid v70 <|@
result [v3|DWORD[_] * 8] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S8
=== Inputs ===
base: - 
index: a65 
=== Succesors ===
=== Usages ===
v67 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: - index: a65  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: [null]
deoptSpeculation: [null]
stamp: void
=== Inputs ===
stateBefore: ?2 
object: v70 
=== Succesors ===
next: v50 
=== Usages ===
=== Predecessor ===
a65 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2 object: v70 #next: v50  <|@  <|@
f <@~|@floating>@ <|@
tid a33 <|@
result v4|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.text.DecimalFormatSymbols.getLocale(DecimalFormatSymbols.java:197) [bci: 1]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 9]
op: Uncompress
stamp: a# java.util.Locale
=== Inputs ===
value: a65 
=== Succesors ===
=== Usages ===
v20 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a65  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a1 
y: a33 
=== Succesors ===
=== Usages ===
v50 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.ObjectEqualsNode>@ x: a1 y: a33  <|@  <|@
f <@*|@fixed>@ <|@
tid v50 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v20 
=== Succesors ===
trueSuccessor: v48 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v67 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v20 #trueSuccessor: v48 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v48 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2313) [bci: 5]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v16 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v16  <|@  <|@
f <@~|@floating>@ <|@
tid a29 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
op: Uncompress
stamp: a# java.text.DecimalFormatSymbols
=== Inputs ===
value: a64 
=== Succesors ===
=== Usages ===
v16 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a64  <|@  <|@
f <@*|@fixed>@ <|@
tid v16 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2028) [bci: 20]
stamp: void
=== Inputs ===
memoryMap: - 
result: a29 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v48 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a29  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.Locale.equals(Locale.java:2312) [bci: 2]
at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 13]
stamp: void
=== Inputs ===
=== Succesors ===
next: v71 
=== Usages ===
=== Predecessor ===
v50 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v71  <|@  <|@
f <@*|@fixed>@ <|@
tid v71 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 47
mayConvertToGuard: true
nodeSourcePosition: at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2027) [bci: 5]
reason: UnreachedCode
speculation: {0x0000000000000294[index: 20, len: 20, hash: 0x5fdbb341]: UnreachedCode@6[HotSpotMethod<Locale.equals(Object)>, 7]}
stamp: void
=== Inputs ===
stateBefore: ?2 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Deopt|@jdk.graal.compiler.nodes.DeoptimizeNode>@ stateBefore: ?2  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v5|q [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [32, 46[[74, 95[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [36, 68[36 MustHaveRegister 38 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [38, 42[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[v4|q]" v4|q v3|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q v2|d [68, 70[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v5|q [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 46[[74, 95[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [36, 68[36 MustHaveRegister 38 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 42[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [68, 70[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v5|q [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 46[[74, 95[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [36, 68[36 MustHaveRegister 38 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 42[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [68, 70[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v5|q [0, 1[[70, 72[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 28[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 32[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [32, 46[[74, 95[32 MustHaveRegister 44 ShouldHaveRegister  "NoSpillStore"
  v1|q QWORD "[rax|q]" v1|q -1 [34, 36[34 MustHaveRegister 36 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [36, 68[36 MustHaveRegister 38 MustHaveRegister 68 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[r10|d]" v3|d -1 [38, 42[38 MustHaveRegister 40 MustHaveRegister 42 MustHaveRegister  "NoSpillStore"
  v4|q QWORD "[r10|q]" v4|q v3|d [42, 44[42 MustHaveRegister 44 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[rax|q]" v5|q v2|d [68, 70[68 MustHaveRegister 70 ShouldHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   32  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction v1|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction v2|DWORD[_] = MOV input: [v1|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction v3|DWORD[_] = MOV input: [v2|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [v3|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction v4|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: v4|QWORD[.], y: v0|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction v5|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   70  <|@ instruction rax|QWORD[.] = MOVE input: v5|QWORD[.] moveKind: QWORD <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: v0|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   30  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD <|@ <|@
      nr   34  <|@ instruction rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter] <|@ <|@
      nr   36  <|@ instruction rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rax:0, rsi:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0] <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rax:0, rsi:0, r10:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0] <|@ <|@
      nr   42  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction NOP <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3 <|@ <|@
      nr   72  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   74  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r15|QWORD + 1168] y: 660 size: QWORD <|@ <|@
      nr   94  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0]
locals: rsi|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #0          // DFS:java.text.DecimalFormatSymbols
     3: astore_1      
     4: aload_1       
     5: ifnull        21
     8: aload_1       
     9: invokevirtual #1          // java.text.DecimalFormatSymbols.getLocale:()java.util.Locale
    12: aload_0       
    13: invokevirtual #2          // java.util.Locale.equals:(java.lang.Object)boolean
    16: ifeq          21
    19: aload_1       
    20: areturn       
    21: aload_0       
    22: invokestatic  #3          // java.text.DecimalFormatSymbols.getInstance:(java.util.Locale)java.text.DecimalFormatSymbols
    25: astore_1      
    26: aload_1       
    27: putstatic     #0          // DFS:java.text.DecimalFormatSymbols
    30: aload_1       
    31: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 89842400c0feff4883ec189041817f20000000000f858b0000009090909090909090909090909048896c241048b8addeaddeaddeadde8b4070448b14c540000000428504d50000000049c1e2034c3bd60f85250000009090909090909090909048c1e003488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edd0ffff49c7879004000094020000e8000000000f1f84000000000048896c2410e800000000e966fffffff4488d0db1ffffff49898f68040000e938fffffff441c78784040000edd4ffff49c7879004000014000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD  <||@
  Comment 44 34 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter]  <||@
  Comment 44 {Object[Class:java.util.Formatter]}  <||@
  Comment 54 36 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD  <||@
  Comment 57 38 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0]  <||@
  Comment 57 [rax:0, rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 40 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0]  <||@
  Comment 65 [rax:0, rsi:0, r10:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3  <||@
  Comment 77 44 CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 86 block B1 null  <||@
  Comment 86 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 48 NOP  <||@
  Comment 87 50 NOP  <||@
  Comment 88 52 NOP  <||@
  Comment 89 54 NOP  <||@
  Comment 90 56 NOP  <||@
  Comment 91 58 NOP  <||@
  Comment 92 60 NOP  <||@
  Comment 93 62 NOP  <||@
  Comment 94 64 NOP  <||@
  Comment 95 66 NOP  <||@
  Comment 96 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3  <||@
  Comment 100 72 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 109 POLL_RETURN_FAR  <||@
  Comment 123 block B2 null  <||@
  Comment 123 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 NOP  <||@
  Comment 125 80 NOP  <||@
  Comment 126 82 NOP  <||@
  Comment 127 84 NOP  <||@
  Comment 128 86 NOP  <||@
  Comment 129 88 NOP  <||@
  Comment 130 90 MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD  <||@
  Comment 141 92 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 152 94 DEOPT info [bci:0]  <||@
  Comment 152 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 157 [rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 170 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 195 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 228 [rax:0, rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 236 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 236 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 242 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 242 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-6488[java.util.Formatter.getDecimalFormatSymbols(Locale)]"
  method "HotSpotCompilation-6488[java.util.Formatter.getDecimalFormatSymbols(Locale)]"
  date 1724269754471
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789aefd880 89842400c0feff4883ec189041817f20000000000f858b0000009090909090909090909090909048896c241048b82845c9ff070000008b4070448b14c540000000428504d50000000049c1e2034c3bd60f85250000009090909090909090909048c1e003488b6c24104883c418493ba7500400000f873b000000c39090909090909041c78784040000edd0ffff49c7879004000094020000e85dd888fe0f1f84000000000048896c2410e8f1d886fee966fffffff4488d0db1ffffff49898f68040000e9b8e688fef441c78784040000edd4ffff49c7879004000014000000e816d888fe0f1f840000000000e88f799cfef4e8a9d588fef4  <||@
  Comment 0 [stack overflow check]  <||@
  Comment 0 VERIFIED_ENTRY  <||@
  Comment 12 FRAME_COMPLETE  <||@
  Comment 12 ENTRY_BARRIER_PATCH  <||@
  Comment 26 block B0 null  <||@
  Comment 26 0 [rsi|QWORD[.], rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 26 2 NOP  <||@
  Comment 27 4 NOP  <||@
  Comment 28 6 NOP  <||@
  Comment 29 8 NOP  <||@
  Comment 30 10 NOP  <||@
  Comment 31 12 NOP  <||@
  Comment 32 14 NOP  <||@
  Comment 33 16 NOP  <||@
  Comment 34 18 NOP  <||@
  Comment 35 20 NOP  <||@
  Comment 36 22 NOP  <||@
  Comment 37 24 NOP  <||@
  Comment 38 26 NOP  <||@
  Comment 39 28 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 44 30 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@f298bd4 slotKind: QWORD  <||@
  Comment 44 34 rax|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[Class:java.util.Formatter]  <||@
  Comment 44 {Object[Class:java.util.Formatter]}  <||@
  Comment 54 36 rax|DWORD[_] = MOV input: [rax|QWORD[.] + 112] size: DWORD  <||@
  Comment 57 38 r10|DWORD[_] = MOV input: [rax|DWORD[_] * 8 + 64] size: DWORD state [bci:0]  <||@
  Comment 57 [rax:0, rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 57 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 65 40 NULLCHECK address: [r10|DWORD[_] * 8] state [bci:0]  <||@
  Comment 65 [rax:0, rsi:0, r10:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 65 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 73 42 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3  <||@
  Comment 77 44 CMPBRANCH (x: r10|QWORD[.], y: rsi|QWORD[.]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 86 block B1 null  <||@
  Comment 86 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 86 48 NOP  <||@
  Comment 87 50 NOP  <||@
  Comment 88 52 NOP  <||@
  Comment 89 54 NOP  <||@
  Comment 90 56 NOP  <||@
  Comment 91 58 NOP  <||@
  Comment 92 60 NOP  <||@
  Comment 93 62 NOP  <||@
  Comment 94 64 NOP  <||@
  Comment 95 66 NOP  <||@
  Comment 96 68 rax|QWORD[.] = UNCOMPRESSPOINTER (input: rax|DWORD[_], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@4af266cc encoding: base: 0 shift: 3  <||@
  Comment 100 72 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 109 POLL_RETURN_FAR  <||@
  Comment 123 block B2 null  <||@
  Comment 123 74 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 123 76 NOP  <||@
  Comment 124 78 NOP  <||@
  Comment 125 80 NOP  <||@
  Comment 126 82 NOP  <||@
  Comment 127 84 NOP  <||@
  Comment 128 86 NOP  <||@
  Comment 129 88 NOP  <||@
  Comment 130 90 MOV x: [r15|QWORD + 1156] y: -12051 size: DWORD  <||@
  Comment 141 92 MOV x: [r15|QWORD + 1168] y: 660 size: QWORD  <||@
  Comment 152 94 DEOPT info [bci:0]  <||@
  Comment 152 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 157 [rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 170 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 195 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 228 [rax:0, rsi:0]at java.util.Formatter.getDecimalFormatSymbols(Formatter.java:2026) [bci: 0, duringCall: false, rethrow: false]
              |0             |1 
     locals:  |rsi|QWORD[.]  |-   <||@
  Comment 236 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 236 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 242 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 242 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
