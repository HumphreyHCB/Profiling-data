begin_compilation
  name " HotSpotCompilation-1731[java.nio.DirectByteBuffer.put(byte)]"
  method "HotSpotCompilation-1731[java.nio.DirectByteBuffer.put(byte)]"
  date 1724269719455
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a79 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a79  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.nio.DirectByteBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v28 v85 v83 v86 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a79 <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.segment
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
v56 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i22 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
a79 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:795) [bci: 18]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i80 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i80 v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i80 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:734) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: i81 
=== Usages ===
v31 i34 j15 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 7]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
v31 
=== Predecessor ===
i80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i81 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i80 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 21]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 23]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 24]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
=== Inputs ===
x: i80 
y: i33 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 25]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: j82 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - value: i34 stateAfter: - #next: j82  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j82 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.address
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:329) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 13]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
v87 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:329) [bci: 5]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 13]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i80 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j15 
index: j82 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j15 index: j82  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.misc.Unsafe.putByte(Object, long, byte) [bci: -1]
at jdk.internal.misc.ScopedMemoryAccess.putByteInternal(ScopedMemoryAccess.java:549) [bci: 15]
at jdk.internal.misc.ScopedMemoryAccess.putByte(ScopedMemoryAccess.java:537) [bci: 6]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: OFF_HEAP_LOCATION
location: OFF_HEAP_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.Unsafe.putByte(Object, long, byte) [bci: -1]
at jdk.internal.misc.ScopedMemoryAccess.putByteInternal(ScopedMemoryAccess.java:549) [bci: 15]
at jdk.internal.misc.ScopedMemoryAccess.putByte(ScopedMemoryAccess.java:537) [bci: 6]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
value: i22 
stateAfter: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - value: i22 stateAfter: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:366) [bci: 35]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: -16659
stableDimension: 0
stamp: i32 [-16659]
stampKind: i32
value: int[-16659|0xffffffffffffbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: -15635
stableDimension: 0
stamp: i32 [-15635]
stampKind: i32
value: int[-15635|0xffffffffffffc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: i32 [-16659 - -15635] bits:1...1xxxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v69 
values: i71 i77 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v69 values: i71 i77  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v69 
values: j72 j78 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v69 values: j72 j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v76 
=== Succesors ===
next: v75 
=== Usages ===
i73 j74 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v76 #next: v75  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: getstatic
code: ResolvedJavaMethodBytecode<DirectByteBuffer.put(byte)>
localsSize: 3
locksSize: 0
sourceFile: DirectByteBuffer.java
sourceLine: 362
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i73 
speculation: j74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i73 speculation: j74  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a79 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: a79  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! java.nio.DirectByteBuffer
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v28 v85 v83 v86 v84 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v83 <|@
result [v0|QWORD[.] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a79 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a79 <|@
result v2|DWORD[_] <|@
d <@d|@=== Debug Properties ===
accessStamp: n java.lang.Object
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.segment
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: n java.lang.Object
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v83 
lastLocationAccess: - 
=== Succesors ===
next: v64 
=== Usages ===
v56 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v83 lastLocationAccess: - #next: v64  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
nullConstant: Object[null]
stamp: void
=== Inputs ===
value: a79 
=== Succesors ===
=== Usages ===
v64 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@jdk.graal.compiler.nodes.calc.IsNullNode>@ value: a79  <|@  <|@
f <@~|@floating>@ <|@
tid i2 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 i22 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v64 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v62 
falseSuccessor: v63 
=== Usages ===
=== Predecessor ===
a79 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v62 #falseSuccessor: v63  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v62 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:795) [bci: 18]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: i80 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v84 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i80 v49 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i80 <|@
result v3|DWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:734) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
=== Succesors ===
next: i81 
=== Usages ===
v31 i34 j15 
=== Predecessor ===
v62 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - #next: i81  <|@  <|@
f <@~|@floating>@ <|@
tid v85 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i81 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i81 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.limit
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 7]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v85 
lastLocationAccess: - 
=== Succesors ===
next: v68 
=== Usages ===
v31 
=== Predecessor ===
i80 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v85 lastLocationAccess: - #next: v68  <|@  <|@
f <@~|@floating>@ <|@
tid v31 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
op: jdk.graal.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@406e677e
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i80 
y: i81 
=== Succesors ===
=== Usages ===
v68 
=== Predecessor ===
- >@ <|@
instruction <@<|@jdk.graal.compiler.nodes.calc.IntegerLessThanNode>@ x: i80 y: i81  <|@  <|@
f <@*|@fixed>@ <|@
tid v68 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
profileData: INJECTED designatedSuccessorProbability: 1.0
stamp: void
=== Inputs ===
condition: v31 
=== Succesors ===
trueSuccessor: v66 
falseSuccessor: v67 
=== Usages ===
=== Predecessor ===
i81 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v31 #trueSuccessor: v66 #falseSuccessor: v67  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 21]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v49 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v49  <|@  <|@
f <@~|@floating>@ <|@
tid i33 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 23]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 24]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: i32
=== Inputs ===
x: i80 
y: i33 
=== Succesors ===
=== Usages ===
v49 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i80 y: i33  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Buffer.position
location: Buffer.position
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:737) [bci: 25]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v84 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: j82 
=== Usages ===
=== Predecessor ===
v66 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v84 lastLocationAccess: - value: i34 stateAfter: - #next: j82  <|@  <|@
f <@~|@floating>@ <|@
tid v86 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j82 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j82 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: Buffer.address
memoryOrder: PLAIN
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:329) [bci: 1]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 13]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v86 
lastLocationAccess: - 
=== Succesors ===
next: v55 
=== Usages ===
v87 
=== Predecessor ===
v49 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v86 lastLocationAccess: - #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid j15 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at java.nio.DirectByteBuffer.ix(DirectByteBuffer.java:329) [bci: 5]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 13]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i80 
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@jdk.graal.compiler.nodes.calc.SignExtendNode>@ value: i80  <|@  <|@
f <@~|@floating>@ <|@
tid v87 <|@
result [v6|QWORD + v5|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j15 
index: j82 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j15 index: j82  <|@  <|@
f <@~|@floating>@ <|@
tid i22 <|@
d <@d|@=== Debug Properties ===
inputBits: 32
nodeSourcePosition: at jdk.internal.misc.Unsafe.putByte(Object, long, byte) [bci: -1]
at jdk.internal.misc.ScopedMemoryAccess.putByteInternal(ScopedMemoryAccess.java:549) [bci: 15]
at jdk.internal.misc.ScopedMemoryAccess.putByte(ScopedMemoryAccess.java:537) [bci: 6]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 17]
resultBits: 8
stamp: i8
=== Inputs ===
value: i2 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@jdk.graal.compiler.nodes.calc.NarrowNode>@ value: i2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: OFF_HEAP_LOCATION
location: OFF_HEAP_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.internal.misc.Unsafe.putByte(Object, long, byte) [bci: -1]
at jdk.internal.misc.ScopedMemoryAccess.putByteInternal(ScopedMemoryAccess.java:549) [bci: 15]
at jdk.internal.misc.ScopedMemoryAccess.putByte(ScopedMemoryAccess.java:537) [bci: 6]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 17]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v87 
lastLocationAccess: - 
value: i22 
stateAfter: - 
=== Succesors ===
next: v28 
=== Usages ===
=== Predecessor ===
j82 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v87 lastLocationAccess: - value: i22 stateAfter: - #next: v28  <|@  <|@
f <@*|@fixed>@ <|@
tid v28 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:366) [bci: 35]
stamp: void
=== Inputs ===
memoryMap: - 
result: a1 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: a1  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v67 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.nextPutIndex(Buffer.java:735) [bci: 10]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 10]
stamp: void
=== Inputs ===
=== Succesors ===
next: v76 
=== Usages ===
=== Predecessor ===
v68 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v76  <|@  <|@
f <@~|@floating>@ <|@
tid j78 <|@
result long[660|0x294] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: 660
stableDimension: 0
stamp: i64 [660]
stampKind: i64
value: long[660|0x294]
=== Inputs ===
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i77 <|@
result int[-16659|0xffffffffffffbeed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: -16659
stableDimension: 0
stamp: i32 [-16659]
stampKind: i32
value: int[-16659|0xffffffffffffbeed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v67 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
next: v70 
=== Usages ===
=== Predecessor ===
v64 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid j72 <|@
result long[20|0x14] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: 20
stableDimension: 0
stamp: i64 [20]
stampKind: i64
value: long[20|0x14]
=== Inputs ===
=== Succesors ===
=== Usages ===
j74 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result int[-15635|0xffffffffffffc2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
rawvalue: -15635
stableDimension: 0
stamp: i32 [-15635]
stampKind: i32
value: int[-15635|0xffffffffffffc2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i73 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v69 
=== Predecessor ===
v63 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i73 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: i32 [-16659 - -15635] bits:1...1xxxxx1011101101
valueDescription: i32
=== Inputs ===
merge: v69 
values: i71 i77 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v69 values: i71 i77  <|@  <|@
f <@~|@floating>@ <|@
tid j74 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: i64 [20 - 660] bits:0...0x0x0010100
valueDescription: i64
=== Inputs ===
merge: v69 
values: j72 j78 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v69 values: j72 j78  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v69 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v70 v76 
=== Succesors ===
next: v75 
=== Usages ===
i73 j74 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v70 v76 #next: v75  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: getstatic
code: ResolvedJavaMethodBytecode<DirectByteBuffer.put(byte)>
localsSize: 3
locksSize: 0
sourceFile: DirectByteBuffer.java
sourceLine: 362
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 i2 
=== Succesors ===
=== Usages ===
v75 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 i2  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.nio.Buffer.session(Buffer.java:792) [bci: 4]
at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 4]
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i73 
speculation: j74 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v69 >@ <|@
instruction <@DynamicDeoptimize|@jdk.graal.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i73 speculation: j74  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[86, 88[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[v0|q]" v0|q rsi|q [24, 86[[90, 131[24 MustHaveRegister 28 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[v1|d]" v1|d rdx|d [26, 84[[90, 131[26 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[v2|d]" v2|d -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[v3|d]" v3|d -1 [44, 82[44 MustHaveRegister 46 MustHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d v3|d [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [80, 84[80 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[v7|d]" v7|d -1 [110, 126[126 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q -1 [110, 128[128 MustHaveRegister  "NoSpillStore"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[86, 88[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 86[[90, 131[24 MustHaveRegister 28 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 84[[90, 131[26 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [44, 82[44 MustHaveRegister 46 MustHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v3|d [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [80, 84[80 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [110, 126[126 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [110, 128[128 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[86, 88[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 86[[90, 131[24 MustHaveRegister 28 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 84[[90, 131[26 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [44, 82[44 MustHaveRegister 46 MustHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v3|d [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [80, 84[80 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [110, 126[126 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [110, 128[128 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [int[-15635|0xffffffffffffc2ed], long[20|0x14]] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [int[-16659|0xffffffffffffbeed], long[660|0x294]] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q v0|q [0, 1[[86, 88[ "NoSpillStore"
  rdx|d fixed "[rdx|d]" rdx|d -1 [0, 26[ "NoSpillStore"
  rbp|q fixed "[rbp|q]" rbp|q -1 [0, 20[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q -1 [0, 24[ "NoSpillStore"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [24, 86[[90, 131[24 MustHaveRegister 28 MustHaveRegister 44 MustHaveRegister 46 MustHaveRegister 78 MustHaveRegister 80 MustHaveRegister 86 ShouldHaveRegister  "NoSpillStore"
  v1|d DWORD "[rdx|d]" v1|d rdx|d [26, 84[[90, 131[26 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v2|d DWORD "[rax|d]" v2|d -1 [28, 30[28 MustHaveRegister 30 MustHaveRegister  "NoSpillStore"
  v3|d DWORD "[rax|d]" v3|d -1 [44, 82[44 MustHaveRegister 46 MustHaveRegister 76 ShouldHaveRegister 82 ShouldHaveRegister  "NoSpillStore"
  v4|d DWORD "[r10|d]" v4|d v3|d [76, 78[76 MustHaveRegister 78 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [80, 84[80 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v6|q QWORD "[rax|q]" v6|q -1 [82, 84[82 MustHaveRegister 84 MustHaveRegister  "NoSpillStore"
  v7|d DWORD "[r10|d]" v7|d -1 [110, 126[126 MustHaveRegister  "NoSpillStore"
  v8|q QWORD "[r11|q]" v8|q -1 [110, 128[128 MustHaveRegister  "NoSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [v7|DWORD, v8|QWORD] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   24  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   26  <|@ instruction v1|DWORD = MOVE input: rdx|DWORD moveKind: DWORD <|@ <|@
      nr   28  <|@ instruction v2|DWORD[_] = MOV input: [v0|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: v2|DWORD[_], y: v2|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction v3|DWORD = MOV input: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: v3|DWORD, y: [v0|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction v4|DWORD = INC value: v3|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [v0|QWORD[.] + 24], y: v4|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction v5|QWORD = MOV input: [v0|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction v6|QWORD = MOVSXD value: v3|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [v6|QWORD + v5|QWORD * 1], y: reinterpret: v1|DWORD as: BYTE) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: v7|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: v8|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: v0|QWORD[.] v1|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B4" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   22  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD <|@ <|@
      nr   28  <|@ instruction rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD <|@ <|@
      nr   30  <|@ instruction TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   32  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   34  <|@ instruction NOP <|@ <|@
      nr   36  <|@ instruction NOP <|@ <|@
      nr   38  <|@ instruction NOP <|@ <|@
      nr   40  <|@ instruction NOP <|@ <|@
      nr   42  <|@ instruction NOP <|@ <|@
      nr   44  <|@ instruction rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   46  <|@ instruction CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   48  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction r10|DWORD = INC value: rax|DWORD size: DWORD <|@ <|@
      nr   78  <|@ instruction MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD <|@ <|@
      nr   80  <|@ instruction r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   82  <|@ instruction rax|QWORD = MOVSXD value: rax|DWORD size: QWORD <|@ <|@
      nr   84  <|@ instruction MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE <|@ <|@
      nr   86  <|@ instruction rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   88  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   90  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[20|0x14] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed] // MoveResolver resolve mapping <|@ <|@
      nr   98  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" "B3" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL alignment: 0 numbPhis: 2 label: ? <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD <|@ <|@
      nr  130  <|@ st <@st|@reference-map: [rsi:0]
live-base-pointers: []
java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0]
locals: rsi|QWORD[.] rdx|DWORD - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B5" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  100  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD = MOVE input: long[660|0x294] // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed] // MoveResolver resolve mapping <|@ <|@
      nr  108  <|@ instruction JUMP ~outgoingValues: [] destination: B3 -> B5 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: getstatic     #41         // java.nio.MappedByteBuffer.SCOPED_MEMORY_ACCESS:jdk.internal.misc.ScopedMemoryAccess
     3: aload_0       
     4: invokevirtual #36         // java.nio.Buffer.session:()jdk.internal.foreign.MemorySessionImpl
     7: aconst_null   
     8: aload_0       
     9: aload_0       
    10: invokevirtual #47         // java.nio.Buffer.nextPutIndex:()int
    13: invokevirtual #43         // ix:(int)long
    16: iload_1       
    17: invokevirtual #48         // jdk.internal.misc.ScopedMemoryAccess.putByte:(jdk.internal.foreign.MemorySessionImpl, java.lang.Object, long, byte)void
    20: aload_0       
    21: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    24: goto          34
    27: astore_2      
    28: aload_0       
    29: invokestatic  #45         // java.lang.ref.Reference.reachabilityFence:(java.lang.Object)void
    32: aload_2       
    33: athrow        
    34: aload_0       
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec189041817f20000000000f85aa00000090909090909090909048896c24108b462485c00f854d00000090909090908b46183b461c0f8d6e00000090909090909090909090909090448bd041ffc2448956184c8b56104863c042881410488bc6488b6c24104883c418493ba7500400000f8755000000c390909049c7c31400000041baedc2ffff90909090909090458997840400004d899f90040000e8000000000f1f84000000000090909049c7c39402000041baedbeffffebcc48896c2410e800000000e947fffffff4488d0d97ffffff49898f68040000e9f9fefffff4e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD  <||@
  Comment 72 28 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 75 30 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 83 block B1 null  <||@
  Comment 83 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 83 34 NOP  <||@
  Comment 84 36 NOP  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 NOP  <||@
  Comment 88 44 rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 91 46 CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 100 block B2 null  <||@
  Comment 100 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 50 NOP  <||@
  Comment 101 52 NOP  <||@
  Comment 102 54 NOP  <||@
  Comment 103 56 NOP  <||@
  Comment 104 58 NOP  <||@
  Comment 105 60 NOP  <||@
  Comment 106 62 NOP  <||@
  Comment 107 64 NOP  <||@
  Comment 108 66 NOP  <||@
  Comment 109 68 NOP  <||@
  Comment 110 70 NOP  <||@
  Comment 111 72 NOP  <||@
  Comment 112 74 NOP  <||@
  Comment 113 76 r10|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 119 78 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 123 80 r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 127 82 rax|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 130 84 MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE  <||@
  Comment 134 86 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 137 88 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 146 POLL_RETURN_FAR  <||@
  Comment 160 block B4 null  <||@
  Comment 160 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 92 NOP  <||@
  Comment 161 94 NOP  <||@
  Comment 162 96 NOP  <||@
  Comment 163 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 170 -1 r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed]  <||@
  Comment 176 98 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 176 block B5 null  <||@
  Comment 176 110 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 176 112 NOP  <||@
  Comment 177 114 NOP  <||@
  Comment 178 116 NOP  <||@
  Comment 179 118 NOP  <||@
  Comment 180 120 NOP  <||@
  Comment 181 122 NOP  <||@
  Comment 182 124 NOP  <||@
  Comment 183 126 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 190 128 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 197 130 DEOPT info [bci:0]  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 202 [rsi:0]at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 210 block B3 null  <||@
  Comment 210 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 102 NOP  <||@
  Comment 211 104 NOP  <||@
  Comment 212 106 NOP  <||@
  Comment 213 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 220 -1 r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed]  <||@
  Comment 226 108 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 233 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 258 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 264 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 264 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 270 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-1731[java.nio.DirectByteBuffer.put(byte)]"
  method "HotSpotCompilation-1731[java.nio.DirectByteBuffer.put(byte)]"
  date 1724269719594
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789ab95480 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3fbbefe66669089842400c0feff4883ec189041817f20000000000f85aa00000090909090909090909048896c24108b462485c00f854d00000090909090908b46183b461c0f8d6e00000090909090909090909090909090448bd041ffc2448956184c8b56104863c042881410488bc6488b6c24104883c418493ba7500400000f8755000000c390909049c7c31400000041baedc2ffff90909090909090458997840400004d899f90040000e8305cbffe0f1f84000000000090909049c7c39402000041baedbeffffebcc48896c2410e8b25cbdfee947fffffff4488d0d97ffffff49898f68040000e9796abffef4e873fdd2fef4e88d59bffef4f4f4f4f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 72 22 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@6cf5e325 slotKind: QWORD  <||@
  Comment 72 28 rax|DWORD[_] = MOV input: [rsi|QWORD[.] + 36] size: DWORD  <||@
  Comment 75 30 TESTBRANCH (x: rax|DWORD[_], y: rax|DWORD[_]) trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B4 size: DWORD  <||@
  Comment 83 block B1 null  <||@
  Comment 83 32 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 83 34 NOP  <||@
  Comment 84 36 NOP  <||@
  Comment 85 38 NOP  <||@
  Comment 86 40 NOP  <||@
  Comment 87 42 NOP  <||@
  Comment 88 44 rax|DWORD = MOV input: [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 91 46 CMPBRANCH (x: rax|DWORD, y: [rsi|QWORD[.] + 28]) trueDestinationProbability: 1.0 condition: < trueDestination: B1 -> B2 falseDestination: B1 -> B3 size: DWORD  <||@
  Comment 100 block B2 null  <||@
  Comment 100 48 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 100 50 NOP  <||@
  Comment 101 52 NOP  <||@
  Comment 102 54 NOP  <||@
  Comment 103 56 NOP  <||@
  Comment 104 58 NOP  <||@
  Comment 105 60 NOP  <||@
  Comment 106 62 NOP  <||@
  Comment 107 64 NOP  <||@
  Comment 108 66 NOP  <||@
  Comment 109 68 NOP  <||@
  Comment 110 70 NOP  <||@
  Comment 111 72 NOP  <||@
  Comment 112 74 NOP  <||@
  Comment 113 76 r10|DWORD = INC value: rax|DWORD size: DWORD  <||@
  Comment 119 78 MOV (x: [rsi|QWORD[.] + 24], y: r10|DWORD) size: DWORD  <||@
  Comment 123 80 r10|QWORD = MOV input: [rsi|QWORD[.] + 16] size: QWORD  <||@
  Comment 127 82 rax|QWORD = MOVSXD value: rax|DWORD size: QWORD  <||@
  Comment 130 84 MOVB (x: [rax|QWORD + r10|QWORD * 1], y: rdx|BYTE(DWORD)) size: BYTE  <||@
  Comment 134 86 rax|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 137 88 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 146 POLL_RETURN_FAR  <||@
  Comment 160 block B4 null  <||@
  Comment 160 90 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 160 92 NOP  <||@
  Comment 161 94 NOP  <||@
  Comment 162 96 NOP  <||@
  Comment 163 -1 r11|QWORD = MOVE input: long[20|0x14]  <||@
  Comment 170 -1 r10|DWORD = MOVE input: int[-15635|0xffffffffffffc2ed]  <||@
  Comment 176 98 JUMP ~outgoingValues: [] destination: B4 -> B5  <||@
  Comment 176 block B5 null  <||@
  Comment 176 110 [] = LABEL alignment: 0 numbPhis: 2 label: ?  <||@
  Comment 176 112 NOP  <||@
  Comment 177 114 NOP  <||@
  Comment 178 116 NOP  <||@
  Comment 179 118 NOP  <||@
  Comment 180 120 NOP  <||@
  Comment 181 122 NOP  <||@
  Comment 182 124 NOP  <||@
  Comment 183 126 MOV (x: [r15|QWORD + 1156], y: r10|DWORD) size: DWORD  <||@
  Comment 190 128 MOV (x: [r15|QWORD + 1168], y: r11|QWORD) size: QWORD  <||@
  Comment 197 130 DEOPT info [bci:0]  <||@
  Comment 197 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 202 [rsi:0]at java.nio.DirectByteBuffer.put(DirectByteBuffer.java:362) [bci: 0, duringCall: false, rethrow: false]
              |0             |1          |2 
     locals:  |rsi|QWORD[.]  |rdx|DWORD  |-   <||@
  Comment 210 block B3 null  <||@
  Comment 210 100 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 210 102 NOP  <||@
  Comment 211 104 NOP  <||@
  Comment 212 106 NOP  <||@
  Comment 213 -1 r11|QWORD = MOVE input: long[660|0x294]  <||@
  Comment 220 -1 r10|DWORD = MOVE input: int[-16659|0xffffffffffffbeed]  <||@
  Comment 226 108 JUMP ~outgoingValues: [] destination: B3 -> B5  <||@
  Comment 233 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 258 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 264 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 264 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 270 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 270 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
