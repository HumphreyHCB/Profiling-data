begin_compilation
  name " HotSpotCompilation-10063[java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)]"
  method "HotSpotCompilation-10063[java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)]"
  date 1724269762095
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.TreeMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v66 ?114 v182 v183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a105 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.util.TreeMap$Entry
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a109 v179 v119 v185 v184 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: new
code: ResolvedJavaMethodBytecode<TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)>
localsSize: 6
locksSize: 0
sourceFile: TreeMap.java
sourceLine: 800
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 i5 
=== Succesors ===
=== Usages ===
v179 v181 a135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-23051|0xffffffffffffa5f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a4 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a4 #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j122 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j122 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j152 
=== Usages ===
v190 v191 
=== Predecessor ===
v173 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j152  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j122 
index: - 
=== Succesors ===
=== Usages ===
j152 v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j152 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: j153 
=== Usages ===
j125 v192 v193 a134 v194 v195 v196 v197 v198 
=== Predecessor ===
j122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - #next: j153  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j122 
index: - 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
v126 
=== Predecessor ===
j152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v191 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
=== Inputs ===
x: j152 
y: j121 
=== Succesors ===
=== Usages ===
v126 v154 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j152 y: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j153 
y: j125 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j153 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v120 
=== Succesors ===
next: v181 
=== Usages ===
v181 a150 
=== Predecessor ===
v128 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v120 #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-43377|0xffffffffffff568f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a135 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a135 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
value: j125 
stateAfter: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - value: j125 stateAfter: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
address: v194 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v194 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j130 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
lastLocationAccess: - 
value: j130 
stateAfter: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 lastLocationAccess: - value: j130 stateAfter: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
lastLocationAccess: - 
value: v175 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v198 lastLocationAccess: - value: v175 stateAfter: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
lastLocationAccess: - 
value: i11 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 lastLocationAccess: - value: i11 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v161 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 lastLocationAccess: - value: j132 stateAfter: - #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 lastLocationAccess: - value: j132 stateAfter: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 lastLocationAccess: - value: j132 stateAfter: - #next: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j152 
=== Succesors ===
next: v137 
=== Usages ===
a150 
=== Predecessor ===
v163 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j152 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
a134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v138 
values: a134 a135 
=== Succesors ===
=== Usages ===
v189 a111 v186 v187 v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v138 values: a134 a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v139 
=== Succesors ===
next: v110 
=== Usages ===
a150 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v139 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n# java.util.TreeMap$Entry
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
value: a109 
stateAfter: - 
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - value: a109 stateAfter: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: a105 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: a105 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
value: a102 
stateAfter: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - value: a102 stateAfter: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: i113 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: i113 stateAfter: - #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a111 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean) [bci: -6] Placeholder
stamp: a!# java.util.TreeMap$Entry
=== Inputs ===
object: a150 
=== Succesors ===
next: v15 
=== Usages ===
a78 v66 v117 v119 
=== Predecessor ===
v112 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a150 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
op: Compress
stamp: n!# java.util.TreeMap$Entry
=== Inputs ===
value: a111 
=== Succesors ===
=== Usages ===
v81 v85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a111  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.7599944089636048
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
a111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v81 v115 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
precise: true
stamp: void
=== Inputs ===
address: v184 
value: - 
stateBefore: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v184 value: - stateBefore: - #next: v81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap$Entry.right
location: TreeMap$Entry.right
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: a78 stateAfter: - #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
precise: false
stamp: void
=== Inputs ===
address: v184 
value: a111 
object: a4 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v184 value: a111 object: a4 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v85 v118 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
precise: true
stamp: void
=== Inputs ===
address: v185 
value: - 
stateBefore: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v185 value: - stateBefore: - #next: v85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap$Entry.left
location: TreeMap$Entry.left
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: a78 stateAfter: - #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
precise: false
stamp: void
=== Inputs ===
address: v185 
value: a111 
object: a4 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v185 value: a111 object: a4 #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 #next: v26  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/TreeMap;, resolved>, UnresolvedJavaType<Ljava/util/TreeMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)>
=== Inputs ===
arguments: a1 a111 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a111  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)>
localsSize: 6
locksSize: 0
sourceFile: TreeMap.java
sourceLine: 805
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
bci: 35
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
polymorphic: false
stamp: void
targetMethod: Direct#TreeMap.fixAfterInsertion
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?114 
=== Succesors ===
next: i176 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?114 #next: i176  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i176 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: TreeMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 40]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
i30 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 44]
stamp: i32
=== Inputs ===
x: i176 
y: i29 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i176 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap.size
location: TreeMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 45]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
value: i30 
stateAfter: - 
=== Succesors ===
next: i177 
=== Usages ===
=== Predecessor ===
i176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - value: i30 stateAfter: - #next: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i177 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: TreeMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
i34 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 54]
stamp: i32
=== Inputs ===
x: i177 
y: i29 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i177 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap.modCount
location: TreeMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
i177 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: i34 stateAfter: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:808) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGeneration"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v179 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@jdk.graal.compiler.nodes.StartNode>@ stateAfter: - #next: v179  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# java.util.TreeMap
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v66 ?114 v182 v183 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a102 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a3 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: a java.lang.Object
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a105 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a# java.util.TreeMap$Entry
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 a109 v179 v119 v185 v184 v117 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i5 <|@
result v4|DWORD <|@
d <@d|@=== Debug Properties ===
index: 4
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?6 v12 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@jdk.graal.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?6 <|@
d <@d|@=== Debug Properties ===
bci: 0
bytecode: new
code: ResolvedJavaMethodBytecode<TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)>
localsSize: 6
locksSize: 0
sourceFile: TreeMap.java
sourceLine: 800
stackSize: 0
stackState: BeforePop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 a2 a3 a4 i5 
=== Succesors ===
=== Usages ===
v179 v181 a135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 a3 a4 i5  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v179 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-23051|0xffffffffffffa5f5]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a4 
=== Succesors ===
next: v173 
=== Usages ===
=== Predecessor ===
v0 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a4 #next: v173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
locations: [MarkWord, Hub:write, TlabTop, TlabEnd, PrototypeMarkWord]
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: j122 
=== Usages ===
=== Predecessor ===
v179 >@ <|@
instruction <@MemoryAnchor|@jdk.graal.compiler.nodes.memory.MemoryAnchorNode>@ #next: j122  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j122 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:777) [bci: 3]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getThread(HotSpotAllocationSnippets.java:462) [bci: 4]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.getTLABInfo(HotSpotAllocationSnippets.java:458) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:59) [bci: 1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j152 
=== Usages ===
v190 v191 
=== Predecessor ===
v173 >@ <|@
instruction <@ReadRegister|@jdk.graal.compiler.replacements.nodes.ReadRegisterNode>@ #next: j152  <|@  <|@
f <@~|@floating>@ <|@
tid v190 <|@
result [r15|QWORD + 440] <|@
d <@d|@=== Debug Properties ===
displacement: 440
stamp: void*
stride: S1
=== Inputs ===
base: j122 
index: - 
=== Succesors ===
=== Usages ===
j152 v154 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j152 <|@
result v5|QWORD <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:255) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabTop(HotSpotAllocationSnippets.java:472) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:60) [bci: 9]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
=== Succesors ===
next: j153 
=== Usages ===
j125 v192 v193 a134 v194 v195 v196 v197 v198 
=== Predecessor ===
j122 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - #next: j153  <|@  <|@
f <@~|@floating>@ <|@
tid v191 <|@
result [r15|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
stamp: void*
stride: S1
=== Inputs ===
base: j122 
index: - 
=== Succesors ===
=== Usages ===
j153 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j122 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j153 <|@
d <@d|@=== Debug Properties ===
accessStamp: i64
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: true
location: TlabEnd
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:259) [bci: 10]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.readTlabEnd(HotSpotAllocationSnippets.java:467) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:61) [bci: 17]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v191 
lastLocationAccess: - 
=== Succesors ===
next: v129 
=== Usages ===
v126 
=== Predecessor ===
j152 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v191 lastLocationAccess: - #next: v129  <|@  <|@
f <@~|@floating>@ <|@
tid j121 <|@
result long[40|0x28] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 40
stableDimension: 0
stamp: i64 [40]
stampKind: i64
value: long[40|0x28]
=== Inputs ===
=== Succesors ===
=== Usages ===
j125 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j125 <|@
result v6|QWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:62) [bci: 25]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: i64
=== Inputs ===
x: j152 
y: j121 
=== Succesors ===
=== Usages ===
v126 v154 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: j152 y: j121  <|@  <|@
f <@~|@floating>@ <|@
tid v126 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 63]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: jdk.graal.compiler.nodes.calc.IntegerBelowNode$BelowOp@49d00c99
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j153 
y: j125 
=== Succesors ===
=== Usages ===
v129 
=== Predecessor ===
- >@ <|@
instruction <@|<||@jdk.graal.compiler.nodes.calc.IntegerBelowNode>@ x: j153 y: j125  <|@  <|@
f <@~|@floating>@ <|@
tid i11 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
rawvalue: 0
stableDimension: 0
stamp: i32 [0]
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v12 v160 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v129 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:63) [bci: 69]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
profileData: INJECTED designatedSuccessorProbability: 0.010000000000000009
stamp: void
=== Inputs ===
condition: v126 
=== Succesors ===
trueSuccessor: v128 
falseSuccessor: v127 
=== Usages ===
=== Predecessor ===
j153 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v126 #trueSuccessor: v128 #falseSuccessor: v127  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:68) [bci: 111]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: a135 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: a135  <|@  <|@
f <@~|@floating>@ <|@
tid v120 <|@
result v7|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a135 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a135 <|@
result v8|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: HotSpotForeignCallDescriptor{new_instance_or_null(KlassPointer)Object, callSideEffect=NO_SIDE_EFFECT, canDeoptimize=true, isGuaranteedSafepoint=true, killedLocations=[TlabTop, TlabEnd], transition=SAFEPOINT}
descriptorName: new_instance_or_null
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.newInstanceOrNull(ForeignCallDescriptor, KlassPointer) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.callNewInstanceStub(HotSpotAllocationSnippets.java:340) [bci: 13]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:69) [bci: 126]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a java.lang.Object
validateDeoptFrameStates: true
=== Inputs ===
stateAfter: - 
stateDuring: ?6 
arguments: v120 
=== Succesors ===
next: v181 
=== Usages ===
v181 a150 
=== Predecessor ===
v128 >@ <|@
instruction <@ForeignCall|@jdk.graal.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?6 arguments: v120 #next: v181  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
deoptReasonAndAction: int[-43377|0xffffffffffff568f]
deoptSpeculation: long[0|0x0]
stamp: void
=== Inputs ===
stateBefore: ?6 
object: a135 
=== Succesors ===
next: v139 
=== Usages ===
=== Predecessor ===
a135 >@ <|@
instruction <@NullCheck|@jdk.graal.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?6 object: a135 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v127 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 72]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
next: v154 
=== Usages ===
=== Predecessor ===
v129 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v154  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v154 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TlabTop
location: TlabTop
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:263) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.writeTlabTop(HotSpotAllocationSnippets.java:477) [bci: 2]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:64) [bci: 77]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v190 
lastLocationAccess: - 
value: j125 
stateAfter: - 
=== Succesors ===
next: v144 
=== Usages ===
=== Predecessor ===
v127 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v190 lastLocationAccess: - value: j125 stateAfter: - #next: v144  <|@  <|@
f <@~|@floating>@ <|@
tid v194 <|@
result [v5|QWORD + 296] <|@
d <@d|@=== Debug Properties ===
displacement: 296
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v144 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at jdk.graal.compiler.replacements.AllocationSnippets.emitPrefetchAllocate(AllocationSnippets.java:333) [bci: 44]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:65) [bci: 84]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
address: v194 
=== Succesors ===
next: v155 
=== Usages ===
=== Predecessor ===
v154 >@ <|@
instruction <@PrefetchAllocate|@jdk.graal.compiler.nodes.PrefetchAllocateNode>@ address: v194 #next: v155  <|@  <|@
f <@~|@floating>@ <|@
tid v192 <|@
result [v5|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j130 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.defaultPrototypeMarkWord(GraalHotSpotVMConfig) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:421) [bci: 9]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i64 [1]
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v155 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v155 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: MarkWord
location: MarkWord
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:464) [bci: 11]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v192 
lastLocationAccess: - 
value: j130 
stateAfter: - 
=== Succesors ===
next: v159 
=== Usages ===
=== Predecessor ===
v144 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v192 lastLocationAccess: - value: j130 stateAfter: - #next: v159  <|@  <|@
f <@~|@floating>@ <|@
tid v198 <|@
result [v5|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v175 <|@
result meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 140154094223360 shift: 0)
stampKind: Klass*(compressed base: 140154094223360 shift: 0)
value: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v159 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: Hub:write
location: Hub:write
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at jdk.graal.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:465) [bci: 16]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.initializeObjectHeader(HotSpotAllocationSnippets.java:422) [bci: 25]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:274) [bci: 4]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v198 
lastLocationAccess: - 
value: v175 
stateAfter: - 
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v155 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v198 lastLocationAccess: - value: v175 stateAfter: - #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v193 <|@
result [v5|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:177) [bci: 59]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v193 
lastLocationAccess: - 
value: i11 
stateAfter: - 
=== Succesors ===
next: v161 
=== Usages ===
=== Predecessor ===
v159 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v193 lastLocationAccess: - value: i11 stateAfter: - #next: v161  <|@  <|@
f <@~|@floating>@ <|@
tid v195 <|@
result [v5|QWORD + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v161 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j132 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 1]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 0
stableDimension: 0
stamp: i64 [0]
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v163 v161 v162 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v161 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v195 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: v162 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v195 lastLocationAccess: - value: j132 stateAfter: - #next: v162  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
result [v5|QWORD + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v196 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: v163 
=== Usages ===
=== Predecessor ===
v161 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v196 lastLocationAccess: - value: j132 stateAfter: - #next: v163  <|@  <|@
f <@~|@floating>@ <|@
tid v197 <|@
result [v5|QWORD + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: j152 
index: - 
=== Succesors ===
=== Usages ===
v163 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: j152 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v163 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.fillMemoryAligned(AllocationSnippets.java:236) [bci: 137]
at jdk.graal.compiler.replacements.AllocationSnippets.fillMemory(AllocationSnippets.java:186) [bci: 190]
at jdk.graal.compiler.replacements.AllocationSnippets.zeroMemory(AllocationSnippets.java:162) [bci: 15]
at jdk.graal.compiler.replacements.AllocationSnippets.fillContents(AllocationSnippets.java:312) [bci: 22]
at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:276) [bci: 27]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v197 
lastLocationAccess: - 
value: j132 
stateAfter: - 
=== Succesors ===
next: a134 
=== Usages ===
=== Predecessor ===
v162 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v197 lastLocationAccess: - value: j132 stateAfter: - #next: a134  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a134 <|@
result v10|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.formatObject(AllocationSnippets.java:278) [bci: 37]
at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:66) [bci: 103]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a! java.lang.Object
trackedPointer: true
=== Inputs ===
input: j152 
=== Succesors ===
next: v137 
=== Usages ===
a150 
=== Predecessor ===
v163 >@ <|@
instruction <@WordCast|@jdk.graal.compiler.word.WordCastNode>@ input: j152 #next: v137  <|@  <|@
f <@*|@fixed>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v138 
=== Predecessor ===
a134 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a150 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: a! java.lang.Object
valueDescription: a java.lang.Object
=== Inputs ===
merge: v138 
values: a134 a135 
=== Succesors ===
=== Usages ===
v189 a111 v186 v187 v188 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@jdk.graal.compiler.nodes.ValuePhiNode>@ merge: v138 values: a134 a135  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v138 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at jdk.graal.compiler.replacements.AllocationSnippets.allocateInstanceImpl(AllocationSnippets.java:71) [bci: 131]
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(HotSpotAllocationSnippets.java:149) [bci: 20] Substitution
at jdk.graal.compiler.hotspot.replacements.HotSpotAllocationSnippets.allocateInstance(KlassPointer, long, boolean, AllocationSnippets$FillContent, boolean, HotSpotAllocationSnippets$HotSpotAllocationProfilingData, boolean) [bci: -1] Substitution
at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v137 v139 
=== Succesors ===
next: v110 
=== Usages ===
a150 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v137 v139 #next: v110  <|@  <|@
f <@~|@floating>@ <|@
tid v189 <|@
result [v11|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a109 <|@
result v12|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n# java.util.TreeMap$Entry
=== Inputs ===
value: a4 
=== Succesors ===
=== Usages ===
v110 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a4  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v110 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v189 
lastLocationAccess: - 
value: a109 
stateAfter: - 
=== Succesors ===
next: v106 
=== Usages ===
=== Predecessor ===
v138 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v189 lastLocationAccess: - value: a109 stateAfter: - #next: v106  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
result [v11|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a105 <|@
result v13|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a3 
=== Succesors ===
=== Usages ===
v106 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v106 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v188 
lastLocationAccess: - 
value: a105 
stateAfter: - 
=== Succesors ===
next: v103 
=== Usages ===
=== Predecessor ===
v110 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v188 lastLocationAccess: - value: a105 stateAfter: - #next: v103  <|@  <|@
f <@~|@floating>@ <|@
tid v187 <|@
result [v11|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a102 <|@
result v14|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
op: Compress
stamp: n java.lang.Object
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v103 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v103 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v187 
lastLocationAccess: - 
value: a102 
stateAfter: - 
=== Succesors ===
next: v99 
=== Usages ===
=== Predecessor ===
v106 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v187 lastLocationAccess: - value: a102 stateAfter: - #next: v99  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
result [v11|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
stamp: void*
stride: S1
=== Inputs ===
base: a150 
index: - 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a150 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i113 <|@
result byte[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
rawvalue: 1
stableDimension: 0
stamp: i8 [1]
stampKind: i8
value: byte[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: INIT_LOCATION
location: INIT_LOCATION
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v186 
lastLocationAccess: - 
value: i113 
stateAfter: - 
=== Succesors ===
next: v112 
=== Usages ===
=== Predecessor ===
v103 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v186 lastLocationAccess: - value: i113 stateAfter: - #next: v112  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v112 <|@
d <@d|@=== Debug Properties ===
barriersString: STORE_STORE
fence: ALLOCATION_INIT
location: INIT_LOCATION
nodeSourcePosition: at java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean) [bci: -6] Placeholder
stamp: void
=== Inputs ===
=== Succesors ===
next: a111 
=== Usages ===
=== Predecessor ===
v99 >@ <|@
instruction <@Membar|@jdk.graal.compiler.nodes.extended.MembarNode>@ #next: a111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a111 <|@
result v11|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean) [bci: -6] Placeholder
stamp: a!# java.util.TreeMap$Entry
=== Inputs ===
object: a150 
=== Succesors ===
next: v15 
=== Usages ===
a78 v66 v117 v119 
=== Predecessor ===
v112 >@ <|@
instruction <@FixedValueAnchor|@jdk.graal.compiler.nodes.extended.FixedValueAnchorNode>@ object: a150 #next: v15  <|@  <|@
f <@~|@floating>@ <|@
tid a78 <|@
result v15|DWORD[_] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
op: Compress
stamp: n!# java.util.TreeMap$Entry
=== Inputs ===
value: a111 
=== Succesors ===
=== Usages ===
v81 v85 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@jdk.graal.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a111  <|@  <|@
f <@~|@floating>@ <|@
tid v12 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i5 
y: i11 
=== Succesors ===
=== Usages ===
v15 
=== Predecessor ===
- >@ <|@
instruction <@==|@jdk.graal.compiler.nodes.calc.IntegerEqualsNode>@ x: i5 y: i11  <|@  <|@
f <@*|@fixed>@ <|@
tid v15 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:801) [bci: 14]
profileData: PROFILED designatedSuccessorProbability: 0.7599944089636048
stamp: void
=== Inputs ===
condition: v12 
=== Succesors ===
trueSuccessor: v14 
falseSuccessor: v13 
=== Usages ===
=== Predecessor ===
a111 >@ <|@
instruction <@If|@jdk.graal.compiler.nodes.IfNode>@ condition: v12 #trueSuccessor: v14 #falseSuccessor: v13  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v14 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v184 <|@
result [v3|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v81 v115 v117 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
precise: true
stamp: void
=== Inputs ===
address: v184 
value: - 
stateBefore: - 
=== Succesors ===
next: v81 
=== Usages ===
=== Predecessor ===
v14 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v184 value: - stateBefore: - #next: v81  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap$Entry.right
location: TreeMap$Entry.right
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v184 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v117 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v184 lastLocationAccess: - value: a78 stateAfter: - #next: v117  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:804) [bci: 29]
precise: false
stamp: void
=== Inputs ===
address: v184 
value: a111 
object: a4 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v81 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v184 value: a111 object: a4 #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v117 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v13 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 17]
stamp: void
=== Inputs ===
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v15 >@ <|@
instruction <@Begin|@jdk.graal.compiler.nodes.BeginNode>@ #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid v185 <|@
result [v3|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v85 v118 v119 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
doLoad: true
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
precise: true
stamp: void
=== Inputs ===
address: v185 
value: - 
stateBefore: - 
=== Succesors ===
next: v85 
=== Usages ===
=== Predecessor ===
v13 >@ <|@
instruction <@G1PreWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PreWriteBarrierNode>@ address: v185 value: - stateBefore: - #next: v85  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v85 <|@
d <@d|@=== Debug Properties ===
barrierType: FIELD
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap$Entry.left
location: TreeMap$Entry.left
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v185 
lastLocationAccess: - 
value: a78 
stateAfter: - 
=== Succesors ===
next: v119 
=== Usages ===
=== Predecessor ===
v118 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v185 lastLocationAccess: - value: a78 stateAfter: - #next: v119  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v119 <|@
d <@d|@=== Debug Properties ===
alwaysNull: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:802) [bci: 20]
precise: false
stamp: void
=== Inputs ===
address: v185 
value: a111 
object: a4 
=== Succesors ===
next: v21 
=== Usages ===
=== Predecessor ===
v85 >@ <|@
instruction <@G1PostWriteBarrier|@jdk.graal.compiler.nodes.gc.G1PostWriteBarrierNode>@ address: v185 value: a111 object: a4 #next: v21  <|@  <|@
f <@*|@fixed>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v22 
=== Predecessor ===
v119 >@ <|@
instruction <@EndNode|@jdk.graal.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
hasSpeculationFence: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v21 v23 
=== Succesors ===
next: v26 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@jdk.graal.compiler.nodes.MergeNode>@ stateAfter: - ends: v21 v23 #next: v26  <|@  <|@
tid v66 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
referencedType: [null]
returnStamp: void
signature: [HotSpotType<Ljava/util/TreeMap;, resolved>, UnresolvedJavaType<Ljava/util/TreeMap$Entry;>]
stamp: void
targetMethod: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)>
=== Inputs ===
arguments: a1 a111 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@jdk.graal.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1 a111  <|@  <|@
tid ?114 <|@
d <@d|@=== Debug Properties ===
bci: 35
bytecode: invokevirtual
code: ResolvedJavaMethodBytecode<TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)>
localsSize: 6
locksSize: 0
sourceFile: TreeMap.java
sourceLine: 805
stackSize: 0
stackState: AfterPop
validForDeoptimization: true
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v26 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@jdk.graal.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v26 <|@
d <@d|@=== Debug Properties ===
bci: 35
identity: ANY_LOCATION
inlineControl: Normal
isInOOMETry: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
polymorphic: false
stamp: void
targetMethod: Direct#TreeMap.fixAfterInsertion
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v66 
stateDuring: ?114 
=== Succesors ===
next: i176 
=== Usages ===
=== Predecessor ===
v22 >@ <|@
instruction <@Invoke|@jdk.graal.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v66 stateDuring: ?114 #next: i176  <|@  <|@
f <@~|@floating>@ <|@
tid v182 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i176 v70 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i176 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: TreeMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 40]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
=== Succesors ===
next: v70 
=== Usages ===
i30 
=== Predecessor ===
v26 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - #next: v70  <|@  <|@
f <@~|@floating>@ <|@
tid i29 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 43]
rawvalue: 1
stableDimension: 0
stamp: i32 [1]
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i30 i34 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@jdk.graal.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i30 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 44]
stamp: i32
=== Inputs ===
x: i176 
y: i29 
=== Succesors ===
=== Usages ===
v70 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i176 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v70 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap.size
location: TreeMap.size
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:806) [bci: 45]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v182 
lastLocationAccess: - 
value: i30 
stateAfter: - 
=== Succesors ===
next: i177 
=== Usages ===
=== Predecessor ===
i176 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v182 lastLocationAccess: - value: i30 stateAfter: - #next: i177  <|@  <|@
f <@~|@floating>@ <|@
tid v183 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
stamp: void*
stride: S1
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i177 v74 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@jdk.graal.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i177 <|@
d <@d|@=== Debug Properties ===
accessStamp: i32
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
extendKind: DEFAULT zero? false sign? false extendSize 0
forceFixed: false
location: TreeMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 50]
stamp: i32
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
=== Succesors ===
next: v74 
=== Usages ===
i34 
=== Predecessor ===
v70 >@ <|@
instruction <@Read|@jdk.graal.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i34 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 54]
stamp: i32
=== Inputs ===
x: i177 
y: i29 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@+|@jdk.graal.compiler.nodes.calc.AddNode>@ x: i177 y: i29  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
deoptReasonAndAction: [null]
deoptSpeculation: [null]
killedLocationIdentity: TreeMap.modCount
location: TreeMap.modCount
memoryOrder: PLAIN
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:807) [bci: 55]
stamp: void
usedAsNullCheck: false
=== Inputs ===
stateBefore: - 
guard: - 
address: v183 
lastLocationAccess: - 
value: i34 
stateAfter: - 
=== Succesors ===
next: v37 
=== Usages ===
=== Predecessor ===
i177 >@ <|@
instruction <@Write|@jdk.graal.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v183 lastLocationAccess: - value: i34 stateAfter: - #next: v37  <|@  <|@
f <@*|@fixed>@ <|@
tid v37 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.TreeMap.addEntry(TreeMap.java:808) [bci: 58]
stamp: void
=== Inputs ===
memoryMap: - 
result: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Return|@jdk.graal.compiler.nodes.ReturnNode>@ memoryMap: - result: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIRGTSlowdown"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ConstantLoadOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SaveCalleeSaveRegisters"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After MarkBasePointers"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr   -1  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "Before register allocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanLifetimeAnalysis"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "Before register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[420, 421[[452, 454[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 42[[420, 421[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 40[[418, 421[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 34[[420, 421[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 38[[416, 421[[450, 452[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 44[[420, 421[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 46[[420, 421[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  v0|q QWORD "[v0|q]" v0|q rsi|q [38, 424[[428, 460[38 MustHaveRegister 416 ShouldHaveRegister 422 MustHaveRegister 424 MustHaveRegister  "NoSpillStore"
  v1|q QWORD "[v1|q]" v1|q rdx|- [40, 136[[428, 460[40 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[v2|q]" v2|q rcx|- [42, 132[[428, 460[42 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[v3|q]" v3|q r8|- [44, 263[[266, 383[[428, 460[44 MustHaveRegister 48 MustHaveRegister 128 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[v4|d]" v4|d r9|- [46, 144[[428, 460[46 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[v5|q]" v5|q -1 [50, 98[50 MustHaveRegister 52 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[v6|q]" v6|q -1 [52, 82[52 MustHaveRegister 54 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[v7|q]" v7|q -1 [448, 450[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[v8|q]" v8|q rax|q [454, 459[454 MustHaveRegister 456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[v10|q]" v10|q v5|q [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[v11|q]" v11|q v10|q [102, 418[130 MustHaveRegister 134 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 262 MustHaveRegister 382 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[v12|d]" v12|d v3|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[v13|d]" v13|d v2|q [132, 134[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[v14|d]" v14|d v1|q [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[v15|d]" v15|d v11|q [142, 260[[266, 380[142 MustHaveRegister 260 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[v16|q]" v16|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[v17|q]" v17|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[v18|q]" v18|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[v19|q]" v19|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[v20|q]" v20|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[v21|q]" v21|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[v22|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[v23|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
end_intervals
begin_intervals
  name "After register allocation"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[420, 421[[452, 454[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 42[[420, 421[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 40[[418, 421[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 34[[420, 421[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 38[[416, 421[[450, 452[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 44[[420, 421[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 46[[420, 421[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [38, 415[38 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [40, 136[[428, 460[40 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [42, 132[[428, 460[42 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [44, 263[[266, 383[[428, 460[44 MustHaveRegister 48 MustHaveRegister 128 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|- [46, 144[[428, 460[46 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [50, 98[50 MustHaveRegister 52 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [52, 82[52 MustHaveRegister 54 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [448, 450[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [454, 459[454 MustHaveRegister 456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|q [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|q [102, 418[130 MustHaveRegister 134 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 262 MustHaveRegister 382 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v3|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v2|q [132, 134[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v1|q [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v11|q [142, 260[[266, 380[142 MustHaveRegister 260 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r9|q]" v17|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[rdx|q]" v18|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r9|q]" v21|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rdx|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r11|q]" v0|q v0|q [415, 419[416 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [419, 421[ "OneSpillStore"
  v26|q QWORD "[r10|q]" v0|q v0|q [421, 424[[428, 460[422 MustHaveRegister 424 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanRegisterAllocation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "After optimize spill position"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[420, 421[[452, 454[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 42[[420, 421[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 40[[418, 421[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 34[[420, 421[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 38[[416, 421[[450, 452[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 44[[420, 421[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 46[[420, 421[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [38, 415[38 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [40, 136[[428, 460[40 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [42, 132[[428, 460[42 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [44, 263[[266, 383[[428, 460[44 MustHaveRegister 48 MustHaveRegister 128 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|- [46, 144[[428, 460[46 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [50, 98[50 MustHaveRegister 52 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [52, 82[52 MustHaveRegister 54 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [448, 450[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [454, 459[454 MustHaveRegister 456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|q [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|q [102, 418[130 MustHaveRegister 134 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 262 MustHaveRegister 382 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v3|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v2|q [132, 134[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v1|q [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v11|q [142, 260[[266, 380[142 MustHaveRegister 260 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r9|q]" v17|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[rdx|q]" v18|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r9|q]" v21|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rdx|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r11|q]" v0|q v0|q [415, 419[416 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [419, 421[ "OneSpillStore"
  v26|q QWORD "[r10|q]" v0|q v0|q [421, 424[[428, 460[422 MustHaveRegister 424 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After LinearScanOptimizeSpillPosition"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [v10|QWORD[.]] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [v8|QWORD[.]] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "After resolve data flow"
  rax|q fixed "[rax|q]" rax|q -1 [0, 1[[420, 421[[452, 454[ "NoSpillStore"
  rcx|- fixed "[rcx|-]" rcx|- -1 [0, 42[[420, 421[ "NoSpillStore"
  rdx|- fixed "[rdx|-]" rdx|- v11|q [0, 40[[418, 421[ "NoOptimization"
  rbx|- fixed "[rbx|-]" rbx|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  rbp|- fixed "[rbp|-]" rbp|- -1 [0, 34[[420, 421[ "NoSpillStore"
  rsi|q fixed "[rsi|q]" rsi|q v0|q [0, 38[[416, 421[[450, 452[ "NoOptimization"
  rdi|- fixed "[rdi|-]" rdi|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r8|- fixed "[r8|-]" r8|- -1 [0, 44[[420, 421[ "NoSpillStore"
  r9|- fixed "[r9|-]" r9|- -1 [0, 46[[420, 421[ "NoSpillStore"
  r10|- fixed "[r10|-]" r10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r11|- fixed "[r11|-]" r11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r13|- fixed "[r13|-]" r13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  r14|- fixed "[r14|-]" r14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm0|- fixed "[xmm0|-]" xmm0|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm1|- fixed "[xmm1|-]" xmm1|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm2|- fixed "[xmm2|-]" xmm2|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm3|- fixed "[xmm3|-]" xmm3|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm4|- fixed "[xmm4|-]" xmm4|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm5|- fixed "[xmm5|-]" xmm5|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm6|- fixed "[xmm6|-]" xmm6|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm7|- fixed "[xmm7|-]" xmm7|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm8|- fixed "[xmm8|-]" xmm8|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm9|- fixed "[xmm9|-]" xmm9|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm10|- fixed "[xmm10|-]" xmm10|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm11|- fixed "[xmm11|-]" xmm11|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm12|- fixed "[xmm12|-]" xmm12|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm13|- fixed "[xmm13|-]" xmm13|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm14|- fixed "[xmm14|-]" xmm14|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  xmm15|- fixed "[xmm15|-]" xmm15|- -1 [0, 1[[420, 421[ "NoDefinitionFound"
  v0|q QWORD "[rsi|q]" v0|q rsi|q [38, 415[38 MustHaveRegister  "OneSpillStore"
  v1|q QWORD "[rdx|q]" v1|q rdx|- [40, 136[[428, 460[40 MustHaveRegister 136 MustHaveRegister  "NoSpillStore"
  v2|q QWORD "[rcx|q]" v2|q rcx|- [42, 132[[428, 460[42 MustHaveRegister 132 MustHaveRegister  "NoSpillStore"
  v3|q QWORD "[r8|q]" v3|q r8|- [44, 263[[266, 383[[428, 460[44 MustHaveRegister 48 MustHaveRegister 128 MustHaveRegister 258 MustHaveRegister 260 MustHaveRegister 262 MustHaveRegister 378 MustHaveRegister 380 MustHaveRegister 382 MustHaveRegister  "NoSpillStore"
  v4|d DWORD "[r9|d]" v4|d r9|- [46, 144[[428, 460[46 MustHaveRegister 144 MustHaveRegister  "NoSpillStore"
  v5|q QWORD "[r10|q]" v5|q -1 [50, 98[50 MustHaveRegister 52 MustHaveRegister 84 MustHaveRegister 86 MustHaveRegister 88 MustHaveRegister 90 MustHaveRegister 92 MustHaveRegister 94 MustHaveRegister 96 MustHaveRegister 98 ShouldHaveRegister  "NoSpillStore"
  v6|q QWORD "[r11|q]" v6|q -1 [52, 82[52 MustHaveRegister 54 MustHaveRegister 82 MustHaveRegister  "NoSpillStore"
  v7|q QWORD "[rsi|q]" v7|q -1 [448, 450[448 MustHaveRegister 450 ShouldHaveRegister  "NoSpillStore"
  v8|q QWORD "[rax|q]" v8|q rax|q [454, 459[454 MustHaveRegister 456 MustHaveRegister 458 ShouldHaveRegister  "NoSpillStore"
  v10|q QWORD "[r10|q]" v10|q v5|q [98, 101[98 MustHaveRegister 100 ShouldHaveRegister  "NoSpillStore"
  v11|q QWORD "[r10|q]" v11|q v10|q [102, 418[130 MustHaveRegister 134 MustHaveRegister 138 MustHaveRegister 140 MustHaveRegister 142 MustHaveRegister 262 MustHaveRegister 382 MustHaveRegister 418 ShouldHaveRegister  "NoSpillStore"
  v12|d DWORD "[r11|d]" v12|d v3|q [128, 130[128 MustHaveRegister 130 MustHaveRegister  "NoSpillStore"
  v13|d DWORD "[rcx|d]" v13|d v2|q [132, 134[132 MustHaveRegister 134 MustHaveRegister  "NoSpillStore"
  v14|d DWORD "[rdx|d]" v14|d v1|q [136, 138[136 MustHaveRegister 138 MustHaveRegister  "NoSpillStore"
  v15|d DWORD "[rdx|d]" v15|d v11|q [142, 260[[266, 380[142 MustHaveRegister 260 MustHaveRegister 380 MustHaveRegister  "NoSpillStore"
  v16|q QWORD "[r11|q]" v16|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v17|q QWORD "[r9|q]" v17|q -1 [258, 259[258 MustHaveRegister  "NoDefinitionFound"
  v18|q QWORD "[rdx|q]" v18|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v19|q QWORD "[r11|q]" v19|q -1 [262, 263[262 MustHaveRegister  "NoDefinitionFound"
  v20|q QWORD "[r11|q]" v20|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v21|q QWORD "[r9|q]" v21|q -1 [378, 379[378 MustHaveRegister  "NoDefinitionFound"
  v22|q QWORD "[rdx|q]" v22|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v23|q QWORD "[r11|q]" v23|q -1 [382, 383[382 MustHaveRegister  "NoDefinitionFound"
  v24|q QWORD "[r11|q]" v0|q v0|q [415, 419[416 ShouldHaveRegister  "OneSpillStore"
  v25|q QWORD "[vstack:0|q]" v0|q v0|q [419, 421[ "OneSpillStore"
  v26|q QWORD "[r10|q]" v0|q v0|q [421, 424[[428, 460[422 MustHaveRegister 424 MustHaveRegister  "OneSpillStore"
end_intervals
begin_cfg
  name "After SSALinearScanResolveDataFlow"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [v11|QWORD[.]] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After SSALinearScanEliminateSpillMove"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ instruction v0|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ instruction v1|QWORD[.] = MOVE input: rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   42  <|@ instruction v2|QWORD[.] = MOVE input: rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction v3|QWORD[.] = MOVE input: r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   46  <|@ instruction v4|DWORD = MOVE input: r9|DWORD moveKind: DWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v3|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction v5|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction v6|QWORD = LEA address: [v5|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: v6|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: v6|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [v5|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [v5|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [v5|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [v5|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [v5|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [v5|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [v5|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction v10|QWORD[.] = MOVE input: v5|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction v12|DWORD[_] = COMPRESSPOINTER (input: v3|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [v11|QWORD[.] + 32], y: v12|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction v13|DWORD[_] = COMPRESSPOINTER (input: v2|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [v11|QWORD[.] + 20], y: v13|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction v14|DWORD[_] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [v11|QWORD[.] + 16], y: v14|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [v11|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction v15|DWORD[_] = COMPRESSPOINTER (input: v11|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: v4|DWORD, y: v4|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 28], ~expectedObject: -) {temp: v16|QWORD, temp2: v17|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [v3|QWORD[.] + 28], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v18|QWORD, temp2: v19|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [v3|QWORD[.] + 24], ~expectedObject: -) {temp: v20|QWORD, temp2: v21|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [v3|QWORD[.] + 24], y: v15|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: v3|QWORD[.], ~newValue: v11|QWORD[.]) {temp: v22|QWORD, temp2: v23|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: v11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = MOVE input: v24|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: v0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v25|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [v0|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[.] = MOVE input: v0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction v7|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  450  <|@ instruction rsi|QWORD = MOVE input: v7|QWORD moveKind: QWORD <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  454  <|@ instruction v8|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|QWORD[.] v3|QWORD[.] v4|DWORD - 
>@ <|@ instruction NULLCHECK address: [v8|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE input: v26|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction v11|QWORD[.] = MOVE input: v8|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScanAssignLocations"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LinearScan"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   48  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   50  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   52  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   54  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction NOP <|@ <|@
      nr   70  <|@ instruction NOP <|@ <|@
      nr   72  <|@ instruction NOP <|@ <|@
      nr   74  <|@ instruction NOP <|@ <|@
      nr   76  <|@ instruction NOP <|@ <|@
      nr   78  <|@ instruction NOP <|@ <|@
      nr   80  <|@ instruction NOP <|@ <|@
      nr   82  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr   84  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr   86  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr   88  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr   90  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr   92  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr   94  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr   96  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr   98  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  100  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  102  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction NOP <|@ <|@
      nr  108  <|@ instruction NOP <|@ <|@
      nr  110  <|@ instruction NOP <|@ <|@
      nr  112  <|@ instruction NOP <|@ <|@
      nr  114  <|@ instruction NOP <|@ <|@
      nr  116  <|@ instruction NOP <|@ <|@
      nr  118  <|@ instruction NOP <|@ <|@
      nr  120  <|@ instruction NOP <|@ <|@
      nr  122  <|@ instruction NOP <|@ <|@
      nr  124  <|@ instruction NOP <|@ <|@
      nr  126  <|@ instruction NOP <|@ <|@
      nr  128  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  130  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  132  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  134  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  136  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  138  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  140  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  142  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  144  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  146  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction NOP <|@ <|@
      nr  154  <|@ instruction NOP <|@ <|@
      nr  156  <|@ instruction NOP <|@ <|@
      nr  158  <|@ instruction NOP <|@ <|@
      nr  160  <|@ instruction NOP <|@ <|@
      nr  162  <|@ instruction NOP <|@ <|@
      nr  164  <|@ instruction NOP <|@ <|@
      nr  166  <|@ instruction NOP <|@ <|@
      nr  168  <|@ instruction NOP <|@ <|@
      nr  170  <|@ instruction NOP <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  260  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  262  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  264  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  266  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction NOP <|@ <|@
      nr  284  <|@ instruction NOP <|@ <|@
      nr  286  <|@ instruction NOP <|@ <|@
      nr  288  <|@ instruction NOP <|@ <|@
      nr  290  <|@ instruction NOP <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  380  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  382  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  384  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  386  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction NOP <|@ <|@
      nr  404  <|@ instruction NOP <|@ <|@
      nr  406  <|@ instruction NOP <|@ <|@
      nr  408  <|@ instruction NOP <|@ <|@
      nr  410  <|@ instruction NOP <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr   -1  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  416  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  420  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  422  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  424  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  426  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr  428  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction NOP <|@ <|@
      nr  442  <|@ instruction NOP <|@ <|@
      nr  444  <|@ instruction NOP <|@ <|@
      nr  446  <|@ instruction NOP <|@ <|@
      nr  448  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr  452  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr  456  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   -1  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  458  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackSlot numbering"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction vstack:0|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: vstack:0|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: vstack:0|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_intervals
  name "Before stack slot allocation"
  vstack:0|q QWORD "[vstack:0|q]" vstack:0|q -1 [446, 450[ "NOT_SUPPORTED"
end_intervals
begin_intervals
  name "After stack slot allocation"
  vstack:0|q QWORD "[stack:32|q]" vstack:0|q -1 [446, 450[ "NOT_SUPPORTED"
end_intervals
begin_cfg
  name "After LSStackSlotAllocator"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After EdgeMoveOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  442  <|@ instruction rsi|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After RedundantMoveElimination"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After NullCheckOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ControlFlowOptimizer"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After ComputeCodeEmissionOrder"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After StackMoveOptimization"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After LocationMarker"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After FinalCodeAnalysisStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr    2  <|@ instruction NOP <|@ <|@
      nr    4  <|@ instruction NOP <|@ <|@
      nr    6  <|@ instruction NOP <|@ <|@
      nr    8  <|@ instruction NOP <|@ <|@
      nr   10  <|@ instruction NOP <|@ <|@
      nr   12  <|@ instruction NOP <|@ <|@
      nr   14  <|@ instruction NOP <|@ <|@
      nr   16  <|@ instruction NOP <|@ <|@
      nr   18  <|@ instruction NOP <|@ <|@
      nr   20  <|@ instruction NOP <|@ <|@
      nr   22  <|@ instruction NOP <|@ <|@
      nr   24  <|@ instruction NOP <|@ <|@
      nr   26  <|@ instruction NOP <|@ <|@
      nr   28  <|@ instruction NOP <|@ <|@
      nr   30  <|@ instruction NOP <|@ <|@
      nr   32  <|@ instruction NOP <|@ <|@
      nr   34  <|@ instruction stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD <|@ <|@
      nr   36  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD <|@ <|@
      nr   38  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [r8|QWORD[.]] state [bci:0] <|@ <|@
      nr   40  <|@ instruction r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD <|@ <|@
      nr   42  <|@ instruction r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD <|@ <|@
      nr   44  <|@ instruction CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4607092346807469998
    begin_IR
      LIR
      nr   80  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   82  <|@ instruction NOP <|@ <|@
      nr   84  <|@ instruction NOP <|@ <|@
      nr   86  <|@ instruction NOP <|@ <|@
      nr   88  <|@ instruction NOP <|@ <|@
      nr   90  <|@ instruction NOP <|@ <|@
      nr   92  <|@ instruction NOP <|@ <|@
      nr   94  <|@ instruction NOP <|@ <|@
      nr   96  <|@ instruction NOP <|@ <|@
      nr   98  <|@ instruction NOP <|@ <|@
      nr  100  <|@ instruction NOP <|@ <|@
      nr  102  <|@ instruction NOP <|@ <|@
      nr  104  <|@ instruction NOP <|@ <|@
      nr  106  <|@ instruction MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD <|@ <|@
      nr  108  <|@ instruction AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0 <|@ <|@
      nr  110  <|@ instruction MOV x: [r10|QWORD] y: 1 size: QWORD <|@ <|@
      nr  112  <|@ instruction MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed} <|@ <|@
      nr  114  <|@ instruction MOV x: [r10|QWORD + 12] y: 0 size: DWORD <|@ <|@
      nr  116  <|@ instruction MOV x: [r10|QWORD + 16] y: 0 size: QWORD <|@ <|@
      nr  118  <|@ instruction MOV x: [r10|QWORD + 24] y: 0 size: QWORD <|@ <|@
      nr  120  <|@ instruction MOV x: [r10|QWORD + 32] y: 0 size: QWORD <|@ <|@
      nr  122  <|@ instruction r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD <|@ <|@
      nr  124  <|@ instruction JUMP ~outgoingValues: [] destination: B2 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  126  <|@ instruction [] = LABEL alignment: 0 numbPhis: 1 label: ? <|@ <|@
      nr  128  <|@ instruction NOP <|@ <|@
      nr  130  <|@ instruction NOP <|@ <|@
      nr  132  <|@ instruction NOP <|@ <|@
      nr  134  <|@ instruction NOP <|@ <|@
      nr  136  <|@ instruction NOP <|@ <|@
      nr  138  <|@ instruction NOP <|@ <|@
      nr  140  <|@ instruction NOP <|@ <|@
      nr  142  <|@ instruction NOP <|@ <|@
      nr  144  <|@ instruction NOP <|@ <|@
      nr  146  <|@ instruction NOP <|@ <|@
      nr  148  <|@ instruction NOP <|@ <|@
      nr  150  <|@ instruction NOP <|@ <|@
      nr  152  <|@ instruction r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  154  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD <|@ <|@
      nr  156  <|@ instruction rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  158  <|@ instruction MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD <|@ <|@
      nr  160  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  164  <|@ instruction MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE <|@ <|@
      nr  166  <|@ instruction rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3 <|@ <|@
      nr  168  <|@ instruction TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4605020640619300718
    begin_IR
      LIR
      nr  170  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  172  <|@ instruction NOP <|@ <|@
      nr  174  <|@ instruction NOP <|@ <|@
      nr  176  <|@ instruction NOP <|@ <|@
      nr  178  <|@ instruction NOP <|@ <|@
      nr  180  <|@ instruction NOP <|@ <|@
      nr  182  <|@ instruction NOP <|@ <|@
      nr  184  <|@ instruction NOP <|@ <|@
      nr  186  <|@ instruction NOP <|@ <|@
      nr  188  <|@ instruction NOP <|@ <|@
      nr  190  <|@ instruction NOP <|@ <|@
      nr  192  <|@ instruction NOP <|@ <|@
      nr  194  <|@ instruction NOP <|@ <|@
      nr  196  <|@ instruction NOP <|@ <|@
      nr  198  <|@ instruction NOP <|@ <|@
      nr  200  <|@ instruction NOP <|@ <|@
      nr  202  <|@ instruction NOP <|@ <|@
      nr  204  <|@ instruction NOP <|@ <|@
      nr  206  <|@ instruction NOP <|@ <|@
      nr  208  <|@ instruction NOP <|@ <|@
      nr  210  <|@ instruction NOP <|@ <|@
      nr  212  <|@ instruction NOP <|@ <|@
      nr  214  <|@ instruction NOP <|@ <|@
      nr  216  <|@ instruction NOP <|@ <|@
      nr  218  <|@ instruction NOP <|@ <|@
      nr  220  <|@ instruction NOP <|@ <|@
      nr  222  <|@ instruction NOP <|@ <|@
      nr  224  <|@ instruction NOP <|@ <|@
      nr  226  <|@ instruction NOP <|@ <|@
      nr  228  <|@ instruction NOP <|@ <|@
      nr  230  <|@ instruction NOP <|@ <|@
      nr  232  <|@ instruction NOP <|@ <|@
      nr  234  <|@ instruction NOP <|@ <|@
      nr  236  <|@ instruction NOP <|@ <|@
      nr  238  <|@ instruction NOP <|@ <|@
      nr  240  <|@ instruction NOP <|@ <|@
      nr  242  <|@ instruction NOP <|@ <|@
      nr  244  <|@ instruction NOP <|@ <|@
      nr  246  <|@ instruction NOP <|@ <|@
      nr  248  <|@ instruction NOP <|@ <|@
      nr  250  <|@ instruction NOP <|@ <|@
      nr  252  <|@ instruction NOP <|@ <|@
      nr  254  <|@ instruction NOP <|@ <|@
      nr  256  <|@ instruction NOP <|@ <|@
      nr  258  <|@ instruction NOP <|@ <|@
      nr  260  <|@ instruction NOP <|@ <|@
      nr  262  <|@ instruction NOP <|@ <|@
      nr  264  <|@ instruction NOP <|@ <|@
      nr  266  <|@ instruction NOP <|@ <|@
      nr  268  <|@ instruction NOP <|@ <|@
      nr  270  <|@ instruction NOP <|@ <|@
      nr  272  <|@ instruction NOP <|@ <|@
      nr  274  <|@ instruction NOP <|@ <|@
      nr  276  <|@ instruction NOP <|@ <|@
      nr  278  <|@ instruction NOP <|@ <|@
      nr  280  <|@ instruction NOP <|@ <|@
      nr  282  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  284  <|@ instruction MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  286  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  288  <|@ instruction JUMP ~outgoingValues: [] destination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" "B4" 
    successors 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  412  <|@ instruction NOP <|@ <|@
      nr  414  <|@ instruction NOP <|@ <|@
      nr  416  <|@ instruction NOP <|@ <|@
      nr  418  <|@ instruction NOP <|@ <|@
      nr  420  <|@ instruction NOP <|@ <|@
      nr  422  <|@ instruction NOP <|@ <|@
      nr  424  <|@ instruction NOP <|@ <|@
      nr  426  <|@ instruction NOP <|@ <|@
      nr  428  <|@ instruction NOP <|@ <|@
      nr  430  <|@ instruction NOP <|@ <|@
      nr  432  <|@ instruction NOP <|@ <|@
      nr  434  <|@ instruction NOP <|@ <|@
      nr  436  <|@ instruction NOP <|@ <|@
      nr  438  <|@ instruction NOP <|@ <|@
      nr  440  <|@ instruction r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  444  <|@ instruction rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  446  <|@ instruction stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  448  <|@ st <@st|@reference-map: [stack:16]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35]
locals: stack:32|QWORD[.] - - - - - 
>@ <|@ instruction - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35] <|@ <|@
      nr  450  <|@ instruction r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr  452  <|@ instruction INC value: [r10|QWORD[.] + 20] size: DWORD <|@ <|@
      nr  454  <|@ instruction INC value: [r10|QWORD[.] + 24] size: DWORD <|@ <|@
      nr  456  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" 
    xhandlers
    flags 
    probability 4597815133013402184
    begin_IR
      LIR
      nr  290  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr  292  <|@ instruction NOP <|@ <|@
      nr  294  <|@ instruction NOP <|@ <|@
      nr  296  <|@ instruction NOP <|@ <|@
      nr  298  <|@ instruction NOP <|@ <|@
      nr  300  <|@ instruction NOP <|@ <|@
      nr  302  <|@ instruction NOP <|@ <|@
      nr  304  <|@ instruction NOP <|@ <|@
      nr  306  <|@ instruction NOP <|@ <|@
      nr  308  <|@ instruction NOP <|@ <|@
      nr  310  <|@ instruction NOP <|@ <|@
      nr  312  <|@ instruction NOP <|@ <|@
      nr  314  <|@ instruction NOP <|@ <|@
      nr  316  <|@ instruction NOP <|@ <|@
      nr  318  <|@ instruction NOP <|@ <|@
      nr  320  <|@ instruction NOP <|@ <|@
      nr  322  <|@ instruction NOP <|@ <|@
      nr  324  <|@ instruction NOP <|@ <|@
      nr  326  <|@ instruction NOP <|@ <|@
      nr  328  <|@ instruction NOP <|@ <|@
      nr  330  <|@ instruction NOP <|@ <|@
      nr  332  <|@ instruction NOP <|@ <|@
      nr  334  <|@ instruction NOP <|@ <|@
      nr  336  <|@ instruction NOP <|@ <|@
      nr  338  <|@ instruction NOP <|@ <|@
      nr  340  <|@ instruction NOP <|@ <|@
      nr  342  <|@ instruction NOP <|@ <|@
      nr  344  <|@ instruction NOP <|@ <|@
      nr  346  <|@ instruction NOP <|@ <|@
      nr  348  <|@ instruction NOP <|@ <|@
      nr  350  <|@ instruction NOP <|@ <|@
      nr  352  <|@ instruction NOP <|@ <|@
      nr  354  <|@ instruction NOP <|@ <|@
      nr  356  <|@ instruction NOP <|@ <|@
      nr  358  <|@ instruction NOP <|@ <|@
      nr  360  <|@ instruction NOP <|@ <|@
      nr  362  <|@ instruction NOP <|@ <|@
      nr  364  <|@ instruction NOP <|@ <|@
      nr  366  <|@ instruction NOP <|@ <|@
      nr  368  <|@ instruction NOP <|@ <|@
      nr  370  <|@ instruction NOP <|@ <|@
      nr  372  <|@ instruction NOP <|@ <|@
      nr  374  <|@ instruction NOP <|@ <|@
      nr  376  <|@ instruction NOP <|@ <|@
      nr  378  <|@ instruction NOP <|@ <|@
      nr  380  <|@ instruction NOP <|@ <|@
      nr  382  <|@ instruction NOP <|@ <|@
      nr  384  <|@ instruction NOP <|@ <|@
      nr  386  <|@ instruction NOP <|@ <|@
      nr  388  <|@ instruction NOP <|@ <|@
      nr  390  <|@ instruction NOP <|@ <|@
      nr  392  <|@ instruction NOP <|@ <|@
      nr  394  <|@ instruction NOP <|@ <|@
      nr  396  <|@ instruction NOP <|@ <|@
      nr  398  <|@ instruction NOP <|@ <|@
      nr  400  <|@ instruction NOP <|@ <|@
      nr  402  <|@ instruction AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  404  <|@ instruction MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD <|@ <|@
      nr  406  <|@ instruction AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f <|@ <|@
      nr  408  <|@ instruction JUMP ~outgoingValues: [] destination: B5 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B3" 
    xhandlers
    flags 
    probability 4576918229304087680
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL alignment: 0 numbPhis: 0 label: ? <|@ <|@
      nr   48  <|@ instruction r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   50  <|@ instruction NOP <|@ <|@
      nr   52  <|@ instruction NOP <|@ <|@
      nr   54  <|@ instruction NOP <|@ <|@
      nr   56  <|@ instruction NOP <|@ <|@
      nr   58  <|@ instruction NOP <|@ <|@
      nr   60  <|@ instruction NOP <|@ <|@
      nr   62  <|@ instruction NOP <|@ <|@
      nr   64  <|@ instruction NOP <|@ <|@
      nr   66  <|@ instruction NOP <|@ <|@
      nr   68  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>} <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0] <|@ <|@
      nr   72  <|@ st <@st|@reference-map: [rax:0, rcx:0, rdx:0, r8:0, r10:0]
live-base-pointers: []
java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0]
locals: r10|QWORD[.] rdx|QWORD[.] rcx|QWORD[.] r8|QWORD[.] r9|DWORD - 
>@ <|@ instruction NULLCHECK address: [rax|QWORD[.]] state [bci:0] <|@ <|@
      nr   74  <|@ instruction rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   76  <|@ instruction r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD // MoveResolver resolve mapping <|@ <|@
      nr   78  <|@ instruction JUMP ~outgoingValues: [] destination: B1 -> B3 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #59         // java.util.TreeMap$Entry
     3: dup           
     4: aload_1       
     5: aload_2       
     6: aload_3       
     7: invokespecial #42         // java.util.TreeMap$Entry.<init>:(java.lang.Object, java.lang.Object, java.util.TreeMap$Entry)void
    10: astore        5
    12: iload         4
    14: ifeq          26
    17: aload_3       
    18: aload         5
    20: putfield      #27         // java.util.TreeMap$Entry.left:java.util.TreeMap$Entry
    23: goto          32
    26: aload_3       
    27: aload         5
    29: putfield      #28         // java.util.TreeMap$Entry.right:java.util.TreeMap$Entry
    32: aload_0       
    33: aload         5
    35: invokevirtual #43         // fixAfterInsertion:(java.util.TreeMap$Entry)void
    38: aload_0       
    39: dup           
    40: getfield      #1          // size:int
    43: iconst_1      
    44: iadd          
    45: putfield      #1          // size:int
    48: aload_0       
    49: dup           
    50: getfield      #2          // modCount:int
    53: iconst_1      
    54: iadd          
    55: putfield      #2          // modCount:int
    58: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849bc0000002b787f00004d03d44d33e4493bc20f85e3ffffff66669089842400c0feff4883ec289041817f20000000000f85c40200009090909090909090909090909090909048896c24204185004d8b97b80100004d8d5a284d3b9fc80100000f87640200009090909090909090909090904d899fb8010000410f18822801000049c7020100000041c74208addeadde41c7420c0000000049c742100000000049c742180000000049c74220000000009090909090909090909090904d8bd849c1eb0345895a2048c1e90341894a1448c1ea034189521041c6420c01498bd248c1ea034585c90f85130100009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b481c49c1e1034d85c90f841d0000004d8b5f284983fb000f84bd0100004983eb084d895f284d035f384d890b4189501c498bd04933d248c1ea160f8442000000498bd048c1ea0949bb00e0368d787f00004903d3803a027429f083042400803a00741fc602004d8b5f484d85db0f84760100004983eb084d895f484d035f5849891390909090909090909090909090904c8bde498bd24c895c2410e8000000000f1f8400000000004c8b54241041ff421441ff4218488b6c24204883c428493ba7500400000f872d010000c5f877c39090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b481849c1e1034d85c90f841d0000004d8b5f284983fb000f84dc0000004983eb084d895f284d035f384d890b41895018498bd04933d248c1ea160f8442000000498bd048c1ea0949bb00e0368d787f00004903d3803a027429f083042400803a00741fc602004d8b5f484d85db0f84950000004983eb084d895f484d035f58498913e9e8feffff4c8bd690909090909090909048beaddeaddeaddeaddee8000000000f1f8400000000008500498bf24c8bd0e9b6fdffff48896c2420e800000000e92dfdfffff44c890c24e800000000e944fefffff448891424e800000000e98bfefffff4488d0dbffeffff49898f68040000e9c1fcfffff44c890c24e800000000e925fffffff448891424e800000000e96cfffffff441c78784040000f5a5ffff49c7879004000000000000e8000000000f1f84000000000041c787840400008f56ffff49c7879004000000000000e8000000000f1f840000000000e800000000f4e800000000f4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 79 36 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD  <||@
  Comment 79 38 NULLCHECK address: [r8|QWORD[.]] state [bci:0]  <||@
  Comment 79 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 40 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 89 42 r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD  <||@
  Comment 93 44 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 106 block B2 null  <||@
  Comment 106 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 82 NOP  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 NOP  <||@
  Comment 114 98 NOP  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 125 108 AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0  <||@
  Comment 133 110 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 140 112 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}  <||@
  Comment 140 {meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}}  <||@
  Comment 148 114 MOV x: [r10|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 156 116 MOV x: [r10|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 164 118 MOV x: [r10|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 172 120 MOV x: [r10|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 180 122 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 180 124 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 180 block B3 null  <||@
  Comment 180 126 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 180 128 NOP  <||@
  Comment 181 130 NOP  <||@
  Comment 182 132 NOP  <||@
  Comment 183 134 NOP  <||@
  Comment 184 136 NOP  <||@
  Comment 185 138 NOP  <||@
  Comment 186 140 NOP  <||@
  Comment 187 142 NOP  <||@
  Comment 188 144 NOP  <||@
  Comment 189 146 NOP  <||@
  Comment 190 148 NOP  <||@
  Comment 191 150 NOP  <||@
  Comment 192 152 r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 199 154 MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 203 156 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 207 158 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 211 160 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 215 162 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 219 164 MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE  <||@
  Comment 224 166 rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 231 168 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 240 block B4 null  <||@
  Comment 240 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 172 NOP  <||@
  Comment 241 174 NOP  <||@
  Comment 242 176 NOP  <||@
  Comment 243 178 NOP  <||@
  Comment 244 180 NOP  <||@
  Comment 245 182 NOP  <||@
  Comment 246 184 NOP  <||@
  Comment 247 186 NOP  <||@
  Comment 248 188 NOP  <||@
  Comment 249 190 NOP  <||@
  Comment 250 192 NOP  <||@
  Comment 251 194 NOP  <||@
  Comment 252 196 NOP  <||@
  Comment 253 198 NOP  <||@
  Comment 254 200 NOP  <||@
  Comment 255 202 NOP  <||@
  Comment 256 204 NOP  <||@
  Comment 257 206 NOP  <||@
  Comment 258 208 NOP  <||@
  Comment 259 210 NOP  <||@
  Comment 260 212 NOP  <||@
  Comment 261 214 NOP  <||@
  Comment 262 216 NOP  <||@
  Comment 263 218 NOP  <||@
  Comment 264 220 NOP  <||@
  Comment 265 222 NOP  <||@
  Comment 266 224 NOP  <||@
  Comment 267 226 NOP  <||@
  Comment 268 228 NOP  <||@
  Comment 269 230 NOP  <||@
  Comment 270 232 NOP  <||@
  Comment 271 234 NOP  <||@
  Comment 272 236 NOP  <||@
  Comment 273 238 NOP  <||@
  Comment 274 240 NOP  <||@
  Comment 275 242 NOP  <||@
  Comment 276 244 NOP  <||@
  Comment 277 246 NOP  <||@
  Comment 278 248 NOP  <||@
  Comment 279 250 NOP  <||@
  Comment 280 252 NOP  <||@
  Comment 281 254 NOP  <||@
  Comment 282 256 NOP  <||@
  Comment 283 258 NOP  <||@
  Comment 284 260 NOP  <||@
  Comment 285 262 NOP  <||@
  Comment 286 264 NOP  <||@
  Comment 287 266 NOP  <||@
  Comment 288 268 NOP  <||@
  Comment 289 270 NOP  <||@
  Comment 290 272 NOP  <||@
  Comment 291 274 NOP  <||@
  Comment 292 276 NOP  <||@
  Comment 293 278 NOP  <||@
  Comment 294 280 NOP  <||@
  Comment 295 282 AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 352 284 MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 356 286 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 438 288 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 438 block B6 null  <||@
  Comment 438 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 412 NOP  <||@
  Comment 439 414 NOP  <||@
  Comment 440 416 NOP  <||@
  Comment 441 418 NOP  <||@
  Comment 442 420 NOP  <||@
  Comment 443 422 NOP  <||@
  Comment 444 424 NOP  <||@
  Comment 445 426 NOP  <||@
  Comment 446 428 NOP  <||@
  Comment 447 430 NOP  <||@
  Comment 448 432 NOP  <||@
  Comment 449 434 NOP  <||@
  Comment 450 436 NOP  <||@
  Comment 451 438 NOP  <||@
  Comment 452 440 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 455 444 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 458 446 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 463 448 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35]  <||@
  Comment 463 {HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)>}  <||@
  Comment 463 INVOKESPECIAL  <||@
  Comment 468 [stack:16]at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 476 450 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 481 452 INC value: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 485 454 INC value: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 489 456 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 498 POLL_RETURN_FAR  <||@
  Comment 515 block B5 null  <||@
  Comment 515 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 292 NOP  <||@
  Comment 516 294 NOP  <||@
  Comment 517 296 NOP  <||@
  Comment 518 298 NOP  <||@
  Comment 519 300 NOP  <||@
  Comment 520 302 NOP  <||@
  Comment 521 304 NOP  <||@
  Comment 522 306 NOP  <||@
  Comment 523 308 NOP  <||@
  Comment 524 310 NOP  <||@
  Comment 525 312 NOP  <||@
  Comment 526 314 NOP  <||@
  Comment 527 316 NOP  <||@
  Comment 528 318 NOP  <||@
  Comment 529 320 NOP  <||@
  Comment 530 322 NOP  <||@
  Comment 531 324 NOP  <||@
  Comment 532 326 NOP  <||@
  Comment 533 328 NOP  <||@
  Comment 534 330 NOP  <||@
  Comment 535 332 NOP  <||@
  Comment 536 334 NOP  <||@
  Comment 537 336 NOP  <||@
  Comment 538 338 NOP  <||@
  Comment 539 340 NOP  <||@
  Comment 540 342 NOP  <||@
  Comment 541 344 NOP  <||@
  Comment 542 346 NOP  <||@
  Comment 543 348 NOP  <||@
  Comment 544 350 NOP  <||@
  Comment 545 352 NOP  <||@
  Comment 546 354 NOP  <||@
  Comment 547 356 NOP  <||@
  Comment 548 358 NOP  <||@
  Comment 549 360 NOP  <||@
  Comment 550 362 NOP  <||@
  Comment 551 364 NOP  <||@
  Comment 552 366 NOP  <||@
  Comment 553 368 NOP  <||@
  Comment 554 370 NOP  <||@
  Comment 555 372 NOP  <||@
  Comment 556 374 NOP  <||@
  Comment 557 376 NOP  <||@
  Comment 558 378 NOP  <||@
  Comment 559 380 NOP  <||@
  Comment 560 382 NOP  <||@
  Comment 561 384 NOP  <||@
  Comment 562 386 NOP  <||@
  Comment 563 388 NOP  <||@
  Comment 564 390 NOP  <||@
  Comment 565 392 NOP  <||@
  Comment 566 394 NOP  <||@
  Comment 567 396 NOP  <||@
  Comment 568 398 NOP  <||@
  Comment 569 400 NOP  <||@
  Comment 570 402 AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 627 404 MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 631 406 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 713 408 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 718 block B1 null  <||@
  Comment 718 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 48 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 721 50 NOP  <||@
  Comment 722 52 NOP  <||@
  Comment 723 54 NOP  <||@
  Comment 724 56 NOP  <||@
  Comment 725 58 NOP  <||@
  Comment 726 60 NOP  <||@
  Comment 727 62 NOP  <||@
  Comment 728 64 NOP  <||@
  Comment 729 66 NOP  <||@
  Comment 730 68 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}  <||@
  Comment 730 {meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}}  <||@
  Comment 740 70 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 740 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 745 [rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 753 72 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 753 [rax:0, rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 753 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 755 74 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 758 76 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 761 78 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 771 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 786 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 801 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 826 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 836 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 851 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 884 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 889 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 919 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 924 [rax:0, rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 932 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 932 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 938 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-10063[java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)]"
  method "HotSpotCompilation-10063[java.util.TreeMap.addEntry(Object, Object, TreeMap$Entry, boolean)]"
  date 1724269762247
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 7f789af58920 448b560849bc0000002b787f00004d03d44d33e4493bc20f8543c782fe66669089842400c0feff4883ec289041817f20000000000f85c40200009090909090909090909090909090909048896c24204185004d8b97b80100004d8d5a284d3b9fc80100000f87640200009090909090909090909090904d899fb8010000410f18822801000049c7020100000041c74208e026320041c7420c0000000049c742100000000049c742180000000049c74220000000009090909090909090909090904d8bd849c1eb0345895a2048c1e90341894a1448c1ea034189521041c6420c01498bd248c1ea034585c90f85130100009090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b481c49c1e1034d85c90f841d0000004d8b5f284983fb000f84bd0100004983eb084d895f284d035f384d890b4189501c498bd04933d248c1ea160f8442000000498bd048c1ea0949bb00e0368d787f00004903d3803a027429f083042400803a00741fc602004d8b5f484d85db0f84760100004983eb084d895f484d035f5849891390909090909090909090909090904c8bde498bd24c895c2410e88cc882fe0f1f8400640300014c8b54241041ff421441ff4218488b6c24204883c428493ba7500400000f872d010000c5f877c39090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909041807f40000f842e000000458b481849c1e1034d85c90f841d0000004d8b5f284983fb000f84dc0000004983eb084d895f284d035f384d890b41895018498bd04933d248c1ea160f8442000000498bd048c1ea0949bb00e0368d787f00004903d3803a027429f083042400803a00741fc602004d8b5f484d85db0f84950000004983eb084d895f484d035f58498913e9e8feffff4c8bd690909090909090909048bee026322b787f0000e877f697fe0f1f8400000000008500498bf24c8bd0e9b6fdffff48896c2420e8f82581fee92dfdfffff44c890c24e8c9f596fee944fefffff448891424e83a1797fee98bfefffff4488d0dbffeffff49898f68040000e9a13383fef44c890c24e897f596fee925fffffff448891424e8081797fee96cfffffff441c78784040000f5a5ffff49c7879004000000000000e8e12483fe0f1f84000000000041c787840400008f56ffff49c7879004000000000000e8be2483fe0f1f840000000000e837c696fef4e8512283fef448bb0000000000000000e9fbfffffff4  <||@
  Comment 0 UNVERIFIED_ENTRY  <||@
  Comment 23 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x7f78b20335c8, value=140155947602048]:0x7f7899785080}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 VERIFIED_ENTRY  <||@
  Comment 44 FRAME_COMPLETE  <||@
  Comment 44 ENTRY_BARRIER_PATCH  <||@
  Comment 58 block B0 null  <||@
  Comment 58 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|QWORD[.], r8|QWORD[.], r9|DWORD, rbp|QWORD] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 58 2 NOP  <||@
  Comment 59 4 NOP  <||@
  Comment 60 6 NOP  <||@
  Comment 61 8 NOP  <||@
  Comment 62 10 NOP  <||@
  Comment 63 12 NOP  <||@
  Comment 64 14 NOP  <||@
  Comment 65 16 NOP  <||@
  Comment 66 18 NOP  <||@
  Comment 67 20 NOP  <||@
  Comment 68 22 NOP  <||@
  Comment 69 24 NOP  <||@
  Comment 70 26 NOP  <||@
  Comment 71 28 NOP  <||@
  Comment 72 30 NOP  <||@
  Comment 73 32 NOP  <||@
  Comment 74 34 stack:16|QWORD = MOVE input: rbp|QWORD moveKind: QWORD  <||@
  Comment 79 36 [] = HOTSPOTLOCKSTACK frameMapBuilder: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotFrameMapBuilder@13ccd616 slotKind: QWORD  <||@
  Comment 79 38 NULLCHECK address: [r8|QWORD[.]] state [bci:0]  <||@
  Comment 79 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 79 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 82 40 r10|QWORD = MOV input: [r15|QWORD + 440] size: QWORD  <||@
  Comment 89 42 r11|QWORD = LEA address: [r10|QWORD + 40] size: QWORD  <||@
  Comment 93 44 CMPBRANCH (x: r11|QWORD, y: [r15|QWORD + 456]) trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B0 -> B1 falseDestination: B0 -> B2 size: QWORD  <||@
  Comment 106 block B2 null  <||@
  Comment 106 80 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 106 82 NOP  <||@
  Comment 107 84 NOP  <||@
  Comment 108 86 NOP  <||@
  Comment 109 88 NOP  <||@
  Comment 110 90 NOP  <||@
  Comment 111 92 NOP  <||@
  Comment 112 94 NOP  <||@
  Comment 113 96 NOP  <||@
  Comment 114 98 NOP  <||@
  Comment 115 100 NOP  <||@
  Comment 116 102 NOP  <||@
  Comment 117 104 NOP  <||@
  Comment 118 106 MOV (x: [r15|QWORD + 440], y: r11|QWORD) size: QWORD  <||@
  Comment 125 108 AMD64PREFETCH ~address: [r10|QWORD + 296] instr: 0  <||@
  Comment 133 110 MOV x: [r10|QWORD] y: 1 size: QWORD  <||@
  Comment 140 112 MOV x: [r10|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}  <||@
  Comment 140 {meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>;compressed}}  <||@
  Comment 148 114 MOV x: [r10|QWORD + 12] y: 0 size: DWORD  <||@
  Comment 156 116 MOV x: [r10|QWORD + 16] y: 0 size: QWORD  <||@
  Comment 164 118 MOV x: [r10|QWORD + 24] y: 0 size: QWORD  <||@
  Comment 172 120 MOV x: [r10|QWORD + 32] y: 0 size: QWORD  <||@
  Comment 180 122 r10|QWORD[.] = MOVE input: r10|QWORD moveKind: QWORD  <||@
  Comment 180 124 JUMP ~outgoingValues: [] destination: B2 -> B3  <||@
  Comment 180 block B3 null  <||@
  Comment 180 126 [] = LABEL alignment: 0 numbPhis: 1 label: ?  <||@
  Comment 180 128 NOP  <||@
  Comment 181 130 NOP  <||@
  Comment 182 132 NOP  <||@
  Comment 183 134 NOP  <||@
  Comment 184 136 NOP  <||@
  Comment 185 138 NOP  <||@
  Comment 186 140 NOP  <||@
  Comment 187 142 NOP  <||@
  Comment 188 144 NOP  <||@
  Comment 189 146 NOP  <||@
  Comment 190 148 NOP  <||@
  Comment 191 150 NOP  <||@
  Comment 192 152 r11|DWORD[_] = COMPRESSPOINTER (input: r8|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 199 154 MOV (x: [r10|QWORD[.] + 32], y: r11|DWORD[_]) size: DWORD  <||@
  Comment 203 156 rcx|DWORD[_] = COMPRESSPOINTER (input: rcx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 207 158 MOV (x: [r10|QWORD[.] + 20], y: rcx|DWORD[_]) size: DWORD  <||@
  Comment 211 160 rdx|DWORD[_] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 215 162 MOV (x: [r10|QWORD[.] + 16], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 219 164 MOVB x: [r10|QWORD[.] + 12] y: 1 size: BYTE  <||@
  Comment 224 166 rdx|DWORD[_] = COMPRESSPOINTER (input: r10|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: jdk.graal.compiler.hotspot.amd64.AMD64HotSpotLIRKindTool@5cd5f757 encoding: base: 0 shift: 3  <||@
  Comment 231 168 TESTBRANCH (x: r9|DWORD, y: r9|DWORD) trueDestinationProbability: 0.7599944089636048 condition: = trueDestination: B3 -> B4 falseDestination: B3 -> B5 size: DWORD  <||@
  Comment 240 block B4 null  <||@
  Comment 240 170 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 240 172 NOP  <||@
  Comment 241 174 NOP  <||@
  Comment 242 176 NOP  <||@
  Comment 243 178 NOP  <||@
  Comment 244 180 NOP  <||@
  Comment 245 182 NOP  <||@
  Comment 246 184 NOP  <||@
  Comment 247 186 NOP  <||@
  Comment 248 188 NOP  <||@
  Comment 249 190 NOP  <||@
  Comment 250 192 NOP  <||@
  Comment 251 194 NOP  <||@
  Comment 252 196 NOP  <||@
  Comment 253 198 NOP  <||@
  Comment 254 200 NOP  <||@
  Comment 255 202 NOP  <||@
  Comment 256 204 NOP  <||@
  Comment 257 206 NOP  <||@
  Comment 258 208 NOP  <||@
  Comment 259 210 NOP  <||@
  Comment 260 212 NOP  <||@
  Comment 261 214 NOP  <||@
  Comment 262 216 NOP  <||@
  Comment 263 218 NOP  <||@
  Comment 264 220 NOP  <||@
  Comment 265 222 NOP  <||@
  Comment 266 224 NOP  <||@
  Comment 267 226 NOP  <||@
  Comment 268 228 NOP  <||@
  Comment 269 230 NOP  <||@
  Comment 270 232 NOP  <||@
  Comment 271 234 NOP  <||@
  Comment 272 236 NOP  <||@
  Comment 273 238 NOP  <||@
  Comment 274 240 NOP  <||@
  Comment 275 242 NOP  <||@
  Comment 276 244 NOP  <||@
  Comment 277 246 NOP  <||@
  Comment 278 248 NOP  <||@
  Comment 279 250 NOP  <||@
  Comment 280 252 NOP  <||@
  Comment 281 254 NOP  <||@
  Comment 282 256 NOP  <||@
  Comment 283 258 NOP  <||@
  Comment 284 260 NOP  <||@
  Comment 285 262 NOP  <||@
  Comment 286 264 NOP  <||@
  Comment 287 266 NOP  <||@
  Comment 288 268 NOP  <||@
  Comment 289 270 NOP  <||@
  Comment 290 272 NOP  <||@
  Comment 291 274 NOP  <||@
  Comment 292 276 NOP  <||@
  Comment 293 278 NOP  <||@
  Comment 294 280 NOP  <||@
  Comment 295 282 AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 28], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 352 284 MOV (x: [r8|QWORD[.] + 28], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 356 286 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 438 288 JUMP ~outgoingValues: [] destination: B4 -> B6  <||@
  Comment 438 block B6 null  <||@
  Comment 438 410 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 438 412 NOP  <||@
  Comment 439 414 NOP  <||@
  Comment 440 416 NOP  <||@
  Comment 441 418 NOP  <||@
  Comment 442 420 NOP  <||@
  Comment 443 422 NOP  <||@
  Comment 444 424 NOP  <||@
  Comment 445 426 NOP  <||@
  Comment 446 428 NOP  <||@
  Comment 447 430 NOP  <||@
  Comment 448 432 NOP  <||@
  Comment 449 434 NOP  <||@
  Comment 450 436 NOP  <||@
  Comment 451 438 NOP  <||@
  Comment 452 440 r11|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 455 444 rdx|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 458 446 stack:32|QWORD[.] = MOVE input: r11|QWORD[.] moveKind: QWORD  <||@
  Comment 463 448 - = CALL_DIRECT parameters: [rsi|QWORD[.], rdx|QWORD[.]] temps: [] callTarget: HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)> invokeKind: Special config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460 state [bci:35]  <||@
  Comment 463 {HotSpotMethod<TreeMap.fixAfterInsertion(TreeMap$Entry)>}  <||@
  Comment 463 INVOKESPECIAL  <||@
  Comment 468 [stack:16]at java.util.TreeMap.addEntry(TreeMap.java:805) [bci: 35, duringCall: true, rethrow: false]
              |0                  |1  |2  |3  |4  |5 
     locals:  |stack:32|QWORD[.]  |-  |-  |-  |-  |-   <||@
  Comment 476 450 r10|QWORD[.] = MOVE input: stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 481 452 INC value: [r10|QWORD[.] + 20] size: DWORD  <||@
  Comment 485 454 INC value: [r10|QWORD[.] + 24] size: DWORD  <||@
  Comment 489 456 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false requiresReservedStackAccessCheck: false thread: r15 scratchForSafepointOnReturn: rcx config: jdk.graal.compiler.hotspot.GraalHotSpotVMConfig@4817c460  <||@
  Comment 498 POLL_RETURN_FAR  <||@
  Comment 515 block B5 null  <||@
  Comment 515 290 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 515 292 NOP  <||@
  Comment 516 294 NOP  <||@
  Comment 517 296 NOP  <||@
  Comment 518 298 NOP  <||@
  Comment 519 300 NOP  <||@
  Comment 520 302 NOP  <||@
  Comment 521 304 NOP  <||@
  Comment 522 306 NOP  <||@
  Comment 523 308 NOP  <||@
  Comment 524 310 NOP  <||@
  Comment 525 312 NOP  <||@
  Comment 526 314 NOP  <||@
  Comment 527 316 NOP  <||@
  Comment 528 318 NOP  <||@
  Comment 529 320 NOP  <||@
  Comment 530 322 NOP  <||@
  Comment 531 324 NOP  <||@
  Comment 532 326 NOP  <||@
  Comment 533 328 NOP  <||@
  Comment 534 330 NOP  <||@
  Comment 535 332 NOP  <||@
  Comment 536 334 NOP  <||@
  Comment 537 336 NOP  <||@
  Comment 538 338 NOP  <||@
  Comment 539 340 NOP  <||@
  Comment 540 342 NOP  <||@
  Comment 541 344 NOP  <||@
  Comment 542 346 NOP  <||@
  Comment 543 348 NOP  <||@
  Comment 544 350 NOP  <||@
  Comment 545 352 NOP  <||@
  Comment 546 354 NOP  <||@
  Comment 547 356 NOP  <||@
  Comment 548 358 NOP  <||@
  Comment 549 360 NOP  <||@
  Comment 550 362 NOP  <||@
  Comment 551 364 NOP  <||@
  Comment 552 366 NOP  <||@
  Comment 553 368 NOP  <||@
  Comment 554 370 NOP  <||@
  Comment 555 372 NOP  <||@
  Comment 556 374 NOP  <||@
  Comment 557 376 NOP  <||@
  Comment 558 378 NOP  <||@
  Comment 559 380 NOP  <||@
  Comment 560 382 NOP  <||@
  Comment 561 384 NOP  <||@
  Comment 562 386 NOP  <||@
  Comment 563 388 NOP  <||@
  Comment 564 390 NOP  <||@
  Comment 565 392 NOP  <||@
  Comment 566 394 NOP  <||@
  Comment 567 396 NOP  <||@
  Comment 568 398 NOP  <||@
  Comment 569 400 NOP  <||@
  Comment 570 402 AMD64G1PREWRITEBARRIER (~address: [r8|QWORD[.] + 24], ~expectedObject: -) {temp: r11|QWORD, temp2: r9|QWORD, temp3: -} nonNull: false callTarget: Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 627 404 MOV (x: [r8|QWORD[.] + 24], y: rdx|DWORD[_]) size: DWORD  <||@
  Comment 631 406 AMD64G1POSTWRITEBARRIER (~address: r8|QWORD[.], ~newValue: r10|QWORD[.]) {temp: rdx|QWORD, temp2: r11|QWORD} nonNull: true callTarget: Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD] tool: jdk.graal.compiler.hotspot.amd64.g1.AMD64HotSpotG1BarrierSetLIRTool@7409cd0f  <||@
  Comment 713 408 JUMP ~outgoingValues: [] destination: B5 -> B6  <||@
  Comment 718 block B1 null  <||@
  Comment 718 46 [] = LABEL alignment: 0 numbPhis: 0 label: ?  <||@
  Comment 718 48 r10|QWORD[.] = MOVE input: rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 721 50 NOP  <||@
  Comment 722 52 NOP  <||@
  Comment 723 54 NOP  <||@
  Comment 724 56 NOP  <||@
  Comment 725 58 NOP  <||@
  Comment 726 60 NOP  <||@
  Comment 727 62 NOP  <||@
  Comment 728 64 NOP  <||@
  Comment 729 66 NOP  <||@
  Comment 730 68 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}  <||@
  Comment 730 {meta{HotSpotType<Ljava/util/TreeMap$Entry;, resolved>}}  <||@
  Comment 740 70 rax|QWORD[.] = NEAR_FOREIGN_CALL parameters: [rsi|QWORD] temps: [rax|ILLEGAL] callTarget: Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL state [bci:0]  <||@
  Comment 740 {Stub<new_instance_or_null(KlassPointer)Object>@0x7f78998d8280:CallingConvention[rsi|QWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD -> rax|QWORD[.]]; temps=rax|ILLEGAL}  <||@
  Comment 745 [rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 753 72 NULLCHECK address: [rax|QWORD[.]] state [bci:0]  <||@
  Comment 753 [rax:0, rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 753 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 755 74 rsi|QWORD[.] = MOVE input: r10|QWORD[.] moveKind: QWORD  <||@
  Comment 758 76 r10|QWORD[.] = MOVE input: rax|QWORD[.] moveKind: QWORD  <||@
  Comment 761 78 JUMP ~outgoingValues: [] destination: B1 -> B3  <||@
  Comment 771 {Field[name=CompilerToVM::Data::nmethod_entry_barrier, type=address, offset=0, address=0x7f78b2033598, value=140155947495968]:0x7f789976b220}  <||@
  Comment 786 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 801 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 826 {Field[name=CompilerToVM::Data::SharedRuntime_polling_page_return_handler, type=address, offset=0, address=0x7f78b20335a0, value=140155947630592]:0x7f789978c000}  <||@
  Comment 836 {Stub<write_barrier_pre-stack-only(Object)void>@0x7f78998c8200:CallingConvention[out:0|QWORD[.]]:CallingConvention[in:0|QWORD[.]]}  <||@
  Comment 851 {Stub<write_barrier_post-stack-only(Word)void>@0x7f78998ca380:CallingConvention[out:0|QWORD]:CallingConvention[in:0|QWORD]}  <||@
  Comment 884 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 889 [rcx:0, rdx:0, rsi:0, r8:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 919 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x7f78b20335a8, value=140155947626874]:0x7f789978b17a}  <||@
  Comment 924 [rax:0, rcx:0, rdx:0, r8:0, r10:0]at java.util.TreeMap.addEntry(TreeMap.java:800) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2             |3            |4         |5 
     locals:  |r10|QWORD[.]  |rdx|QWORD[.]  |rcx|QWORD[.]  |r8|QWORD[.]  |r9|DWORD  |-   <||@
  Comment 932 {Stub<ExceptionHandlerStub.exceptionHandler>@0x7f78998c5300:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 932 EXCEPTION_HANDLER_ENTRY  <||@
  Comment 938 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x7f78b20335b8, value=140155947626272]:0x7f789978af20}  <||@
  Comment 938 DEOPT_HANDLER_ENTRY  <||@
  HexCodeFile>>> <|@
end_nmethod
